{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/radio.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/radio.js","mtime":1559767813685},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1551376331885}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/radio.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n/**\n * <Radio />\n * \n * ```jsx\n * <Radio\n *   name=\"my_radio\"\n *   id=\"my_radio\"\n *   checked={true}\n * >\n *   Option value\n * </Radio>\n * ```\n */\n\nfunction Radio(props) {\n  var classNames = ['alegrify-radio'];\n\n  if (props.className) {\n    classNames.push(props.className);\n  }\n\n  if (props.disabled) {\n    classNames.push('alegrify-radio--disabled');\n  }\n\n  return React.createElement(\"div\", {\n    className: classNames.join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: props.id,\n    name: props.name,\n    className: \"alegrify-radio__trigger\",\n    disabled: props.disabled,\n    checked: props.checked,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: props.id,\n    className: \"alegrify-radio__check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"alegrify-radio__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.children)));\n}\n\nRadio.propTypes = {\n  /**\n   * Input id\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Input value\n   */\n  name: PropTypes.string.isRequired,\n\n  /**\n   * Radio label content\n   */\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n\n  /**\n   * Is radio disabled?\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Is radio checked?\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Additional classnames\n   */\n  className: PropTypes.string\n};\nRadio.propExamples = {\n  id: 'radio',\n  name: 'radio',\n  children: 'Radio label',\n  disabled: false,\n  checked: false,\n  className: ''\n};\n\nvar _default = attachUniversalProps(Radio);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Radio, \"Radio\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/radio.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/radio.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nRadio.__docgenInfo = {\n  \"description\": \"<Radio />\\n\\n```jsx\\n<Radio\\n  name=\\\"my_radio\\\"\\n  id=\\\"my_radio\\\"\\n  checked={true}\\n>\\n  Option value\\n</Radio>\\n```\",\n  \"methods\": [],\n  \"displayName\": \"Radio\",\n  \"props\": {\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input id\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input value\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"arrayOf\",\n          \"value\": {\n            \"name\": \"node\"\n          }\n        }, {\n          \"name\": \"node\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"Radio label content\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Is radio disabled?\"\n    },\n    \"checked\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Is radio checked?\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Additional classnames\"\n    }\n  }\n};",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/radio.js"],"names":["React","PropTypes","attachUniversalProps","Radio","props","classNames","className","push","disabled","join","id","name","checked","onChange","children","propTypes","string","isRequired","oneOfType","arrayOf","node","bool","propExamples"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,2BAArC;AAEA;;;;;;;;;;;;;;AAaA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,MAAMC,UAAU,GAAG,CAAC,gBAAD,CAAnB;;AAEA,MAAID,KAAK,CAACE,SAAV,EAAqB;AACjBD,IAAAA,UAAU,CAACE,IAAX,CAAgBH,KAAK,CAACE,SAAtB;AACH;;AAED,MAAIF,KAAK,CAACI,QAAV,EAAoB;AAChBH,IAAAA,UAAU,CAACE,IAAX,CAAgB,0BAAhB;AACH;;AAED,SACI;AACI,IAAA,SAAS,EAAEF,UAAU,CAACI,IAAX,CAAgB,GAAhB,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,EAAE,EAAEL,KAAK,CAACM,EAFd;AAGI,IAAA,IAAI,EAAEN,KAAK,CAACO,IAHhB;AAII,IAAA,SAAS,EAAC,yBAJd;AAKI,IAAA,QAAQ,EAAEP,KAAK,CAACI,QALpB;AAMI,IAAA,OAAO,EAAEJ,KAAK,CAACQ,OANnB;AAOI,IAAA,QAAQ,EAAER,KAAK,CAACS,QAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAYI;AACI,IAAA,OAAO,EAAET,KAAK,CAACM,EADnB;AAEI,IAAA,SAAS,EAAC,uBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACI,IAAA,SAAS,EAAC,uBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKN,KAAK,CAACU,QAHX,CAJJ,CAZJ,CADJ;AAyBH;;AAEDX,KAAK,CAACY,SAAN,GAAkB;AAEd;;;AAGAL,EAAAA,EAAE,EAAET,SAAS,CAACe,MAAV,CAAiBC,UALP;;AAOd;;;AAGAN,EAAAA,IAAI,EAAEV,SAAS,CAACe,MAAV,CAAiBC,UAVT;;AAYd;;;AAGAH,EAAAA,QAAQ,EAAEb,SAAS,CAACiB,SAAV,CAAoB,CAC1BjB,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,IAA5B,CAD0B,EAE1BnB,SAAS,CAACmB,IAFgB,CAApB,EAGPH,UAlBW;;AAoBd;;;AAGAT,EAAAA,QAAQ,EAAEP,SAAS,CAACoB,IAvBN;;AAyBd;;;AAGAT,EAAAA,OAAO,EAAEX,SAAS,CAACoB,IA5BL;;AA8Bd;;;AAGAf,EAAAA,SAAS,EAAEL,SAAS,CAACe;AAjCP,CAAlB;AAmCAb,KAAK,CAACmB,YAAN,GAAqB;AACjBZ,EAAAA,EAAE,EAAE,OADa;AAEjBC,EAAAA,IAAI,EAAE,OAFW;AAGjBG,EAAAA,QAAQ,EAAE,aAHO;AAIjBN,EAAAA,QAAQ,EAAE,KAJO;AAKjBI,EAAAA,OAAO,EAAE,KALQ;AAMjBN,EAAAA,SAAS,EAAE;AANM,CAArB;;eASeJ,oBAAoB,CAACC,KAAD,C;;AAAnC;;;;;;;;;;0BAlFSA,K","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n\n/**\n * <Radio />\n * \n * ```jsx\n * <Radio\n *   name=\"my_radio\"\n *   id=\"my_radio\"\n *   checked={true}\n * >\n *   Option value\n * </Radio>\n * ```\n */\nfunction Radio(props) {\n    const classNames = ['alegrify-radio'];\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    if (props.disabled) {\n        classNames.push('alegrify-radio--disabled');\n    }\n\n    return (\n        <div\n            className={classNames.join(' ')}\n        >\n            <input\n                type=\"radio\"\n                id={props.id}\n                name={props.name}\n                className=\"alegrify-radio__trigger\"\n                disabled={props.disabled}\n                checked={props.checked}\n                onChange={props.onChange}\n            />\n            <label\n                htmlFor={props.id}\n                className=\"alegrify-radio__check\"\n            >\n                <span\n                    className=\"alegrify-radio__label\"\n                >\n                    {props.children}\n                </span>\n            </label>\n        </div>\n    );\n}\n\nRadio.propTypes = {\n\n    /**\n     * Input id\n     */\n    id: PropTypes.string.isRequired,\n\n    /**\n     * Input value\n     */\n    name: PropTypes.string.isRequired,\n\n    /**\n     * Radio label content\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n\n    /**\n     * Is radio disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Is radio checked?\n     */\n    checked: PropTypes.bool,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string\n};\nRadio.propExamples = {\n    id: 'radio',\n    name: 'radio',\n    children: 'Radio label',\n    disabled: false,\n    checked: false,\n    className: ''\n};\n\nexport default attachUniversalProps(Radio);\n"]}]}