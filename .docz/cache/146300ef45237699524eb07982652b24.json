{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/label.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/label.js","mtime":1559777036381},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559770457280}],"contextDependencies":[],"result":["import React from'react';import{attachUniversalProps}from'./helpers/universal-props';/**\n * <Label />\n * \n * ```jsx\n * <Label\n *   htmlFor=\"input_id\"\n *   error\n * >\n *   Something went wrong\n * </Label>\n * ```\n */function Label(props){var classNames=['alegrify-label'];if(props.className){classNames.push(props.className);}if(props.error){classNames.push('alegrify-label--error');}return React.createElement(\"label\",{htmlFor:props.htmlFor,className:classNames.join(' ')},props.children);}Label.defaultProps={className:'',error:false};export default attachUniversalProps(Label);Label.__docgenInfo={\"description\":\"<Label />\\n\\n```jsx\\n<Label\\n  htmlFor=\\\"input_id\\\"\\n  error\\n>\\n  Something went wrong\\n</Label>\\n```\",\"methods\":[],\"displayName\":\"Label\",\"props\":{\"className\":{\"defaultValue\":{\"value\":\"''\",\"computed\":false},\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Additional classnames\"},\"error\":{\"defaultValue\":{\"value\":\"false\",\"computed\":false},\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Is this an error label?\"},\"children\":{\"type\":{\"name\":\"union\",\"value\":[{\"name\":\"arrayOf\",\"value\":{\"name\":\"node\"}},{\"name\":\"node\"}]},\"required\":true,\"description\":\"Label content\"},\"htmlFor\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"for attribute referring to a form element\"}}};",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/label.js"],"names":["React","attachUniversalProps","Label","props","classNames","className","push","error","htmlFor","join","children","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,oBAAT,KAAqC,2BAArC,CAEA;;;;;;;;;;;GAYA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CAClB,GAAMC,CAAAA,UAAU,CAAG,CAAC,gBAAD,CAAnB,CAEA,GAAID,KAAK,CAACE,SAAV,CAAqB,CACjBD,UAAU,CAACE,IAAX,CAAgBH,KAAK,CAACE,SAAtB,EACH,CAED,GAAIF,KAAK,CAACI,KAAV,CAAiB,CACbH,UAAU,CAACE,IAAX,CAAgB,uBAAhB,EACH,CAED,MACI,8BACI,OAAO,CAAEH,KAAK,CAACK,OADnB,CAEI,SAAS,CAAEJ,UAAU,CAACK,IAAX,CAAgB,GAAhB,CAFf,EAIKN,KAAK,CAACO,QAJX,CADJ,CAQH,CA2BDR,KAAK,CAACS,YAAN,CAAqB,CACjBN,SAAS,CAAE,EADM,CAEjBE,KAAK,CAAE,KAFU,CAArB,CAKA,cAAeN,CAAAA,oBAAoB,CAACC,KAAD,CAAnC,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n\n/**\n * <Label />\n * \n * ```jsx\n * <Label\n *   htmlFor=\"input_id\"\n *   error\n * >\n *   Something went wrong\n * </Label>\n * ```\n */\nfunction Label(props) {\n    const classNames = ['alegrify-label'];\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    if (props.error) {\n        classNames.push('alegrify-label--error');\n    }\n\n    return (\n        <label\n            htmlFor={props.htmlFor}\n            className={classNames.join(' ')}\n        >\n            {props.children}\n        </label>\n    )\n}\n\nLabel.propTypes = {\n\n    /**\n     * Label content\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * for attribute referring to a form element\n     */\n    htmlFor: PropTypes.string,\n\n    /**\n     * Is this an error label?\n     */\n    error: PropTypes.bool\n};\nLabel.defaultProps = {\n    className: '',\n    error: false\n};\n\nexport default attachUniversalProps(Label);\n"]}]}