{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/date-indicator.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/date-indicator.js","mtime":1559767591727},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1559771649804},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/thread-loader/dist/cjs.js","mtime":1559771650461},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559770457280},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js","mtime":1551899789434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvamFrb2JrZXJraG92ZS9hbGVncmlmeS9yZWFjdC1hbGVncmlmeS11aS9saWIvZGF0ZS1pbmRpY2F0b3IuanMiOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnOwppbXBvcnQgeyBhdHRhY2hVbml2ZXJzYWxQcm9wcyB9IGZyb20gJy4vaGVscGVycy91bml2ZXJzYWwtcHJvcHMnOwovKioKICogPERhdGVJbmRpY2F0b3IgLz4KICogCiAqIGBgYGpzeAogKiA8RGF0ZUluZGljYXRvcgogKiAgIGRhdGU9eycyMDE4LTEwLTI4VDAwOjAwOjAwJ30KICogLz4KICogYGBgCiAqLwoKZnVuY3Rpb24gRGF0ZUluZGljYXRvcihwcm9wcykgewogIHZhciBjbGFzc05hbWVzID0gWydhbGVncmlmeS1kYXRlLWluZGljYXRvciddOwoKICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gJ3N0cmluZycgJiYgcHJvcHMuY2xhc3NOYW1lLnRyaW0oKSAhPT0gJycpIHsKICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpOwogIH0KCiAgdmFyIG1vbWVudERhdGUgPSBtb21lbnQocHJvcHMuZGF0ZSk7CiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRpbWUiLCB7CiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMuam9pbignICcpLAogICAgZGF0ZVRpbWU6IG1vbWVudERhdGUuZm9ybWF0KCksCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7CiAgICBjbGFzc05hbWU6ICJhbGVncmlmeS1kYXRlLWluZGljYXRvcl9fbW9udGgiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtb21lbnREYXRlLmZvcm1hdCgnTU1NJykpLCBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgewogICAgY2xhc3NOYW1lOiAiYWxlZ3JpZnktZGF0ZS1pbmRpY2F0b3JfX2RheSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1vbWVudERhdGUuZm9ybWF0KCdEJykpKTsKfQoKRGF0ZUluZGljYXRvci5wcm9wVHlwZXMgPSB7CiAgLyoqCiAgICogQ29udGVudAogICAqLwogIGRhdGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zdHJpbmddKS5pc1JlcXVpcmVkLAoKICAvKioKICAgKiBBZGRpdGlvbmFsIGNsYXNzbmFtZXMKICAgKi8KICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcKfTsKRGF0ZUluZGljYXRvci5kZWZhdWx0UHJvcHMgPSB7CiAgZGF0ZTogbmV3IERhdGUoKS50b1N0cmluZygpLAogIGNsYXNzTmFtZTogJycKfTsKRGF0ZUluZGljYXRvci5wcm9wRXhhbXBsZXMgPSBEYXRlSW5kaWNhdG9yLmRlZmF1bHRQcm9wczsKCnZhciBfZGVmYXVsdCA9IGF0dGFjaFVuaXZlcnNhbFByb3BzKERhdGVJbmRpY2F0b3IpOwoKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoRGF0ZUluZGljYXRvciwgIkRhdGVJbmRpY2F0b3IiLCAiL1VzZXJzL2pha29ia2Vya2hvdmUvYWxlZ3JpZnkvcmVhY3QtYWxlZ3JpZnktdWkvbGliL2RhdGUtaW5kaWNhdG9yLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoX2RlZmF1bHQsICJkZWZhdWx0IiwgIi9Vc2Vycy9qYWtvYmtlcmtob3ZlL2FsZWdyaWZ5L3JlYWN0LWFsZWdyaWZ5LXVpL2xpYi9kYXRlLWluZGljYXRvci5qcyIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/date-indicator.js"],"names":["React","moment","PropTypes","attachUniversalProps","DateIndicator","props","classNames","className","trim","push","momentDate","date","join","format","propTypes","oneOfType","number","string","isRequired","defaultProps","Date","toString","propExamples"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,2BAArC;AAEA;;;;;;;;;;AASA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,MAAMC,UAAU,GAAG,CAAC,yBAAD,CAAnB;;AAEA,MAAI,OAAOD,KAAK,CAACE,SAAb,KAA2B,QAA3B,IAAuCF,KAAK,CAACE,SAAN,CAAgBC,IAAhB,OAA2B,EAAtE,EAA0E;AACtEF,IAAAA,UAAU,CAACG,IAAX,CAAgBJ,KAAK,CAACE,SAAtB;AACH;;AAED,MAAMG,UAAU,GAAGT,MAAM,CAACI,KAAK,CAACM,IAAP,CAAzB;AAEA,SACI;AACI,IAAA,SAAS,EAAEL,UAAU,CAACM,IAAX,CAAgB,GAAhB,CADf;AAEI,IAAA,QAAQ,EAAEF,UAAU,CAACG,MAAX,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACI,IAAA,SAAS,EAAC,gCADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKH,UAAU,CAACG,MAAX,CAAkB,KAAlB,CAHL,CAJJ,EASI;AACI,IAAA,SAAS,EAAC,8BADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKH,UAAU,CAACG,MAAX,CAAkB,GAAlB,CAHL,CATJ,CADJ;AAiBH;;AAEDT,aAAa,CAACU,SAAd,GAA0B;AAEtB;;;AAGAH,EAAAA,IAAI,EAAET,SAAS,CAACa,SAAV,CAAoB,CACtBb,SAAS,CAACc,MADY,EAEtBd,SAAS,CAACe,MAFY,CAApB,EAGHC,UARmB;;AAUtB;;;AAGAX,EAAAA,SAAS,EAAEL,SAAS,CAACe;AAbC,CAA1B;AAeAb,aAAa,CAACe,YAAd,GAA6B;AACzBR,EAAAA,IAAI,EAAE,IAAIS,IAAJ,GAAWC,QAAX,EADmB;AAEzBd,EAAAA,SAAS,EAAE;AAFc,CAA7B;AAIAH,aAAa,CAACkB,YAAd,GAA6BlB,aAAa,CAACe,YAA3C;;eAEehB,oBAAoB,CAACC,aAAD,C;;AAAnC;;;;;;;;;;0BAjDSA,a","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n\n/**\n * <DateIndicator />\n * \n * ```jsx\n * <DateIndicator\n *   date={'2018-10-28T00:00:00'}\n * />\n * ```\n */\nfunction DateIndicator(props) {\n    const classNames = ['alegrify-date-indicator'];\n\n    if (typeof props.className === 'string' && props.className.trim() !== '') {\n        classNames.push(props.className);\n    }\n\n    const momentDate = moment(props.date);\n\n    return (\n        <time\n            className={classNames.join(' ')}\n            dateTime={momentDate.format()}\n        >\n            <span\n                className=\"alegrify-date-indicator__month\"\n            >\n                {momentDate.format('MMM')}\n            </span>\n            <span\n                className=\"alegrify-date-indicator__day\"\n            >\n                {momentDate.format('D')}\n            </span>\n        </time>\n    );\n}\n\nDateIndicator.propTypes = {\n\n    /**\n     * Content\n     */\n    date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]).isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string\n}\nDateIndicator.defaultProps = {\n    date: new Date().toString(),\n    className: ''\n}\nDateIndicator.propExamples = DateIndicator.defaultProps;\n\nexport default attachUniversalProps(DateIndicator);\n"]}]}