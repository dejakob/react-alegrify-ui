{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/dialog.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/dialog.js","mtime":1559767600457},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1559771649804},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/thread-loader/dist/cjs.js","mtime":1559771650461},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559770457280},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js","mtime":1551899789434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvamFrb2JrZXJraG92ZS9hbGVncmlmeS9yZWFjdC1hbGVncmlmeS11aS9saWIvZGlhbG9nLmpzIjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7CmltcG9ydCB7IGF0dGFjaFVuaXZlcnNhbFByb3BzIH0gZnJvbSAnLi9oZWxwZXJzL3VuaXZlcnNhbC1wcm9wcyc7Ci8qKgogKiA8RGlhbG9nIC8+CiAqIAogKiBgYGBqc3gKICogPERpYWxvZwogKiAgIG9wZW49e3RydWV9CiAqID4KICogICBTb21lIGRpYWxvZyBjb250ZW50CiAqIDwvRGlhbG9nPgogKiBgYGAKICovCgpmdW5jdGlvbiBEaWFsb2cocHJvcHMpIHsKICB2YXIgY2xhc3NOYW1lcyA9IFsnYWxlZ3JpZnktZGlhbG9nJ107CgogIGlmIChwcm9wcy5jbGFzc05hbWUpIHsKICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpOwogIH0KCiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogImFsZWdyaWZ5LWRpYWxvZ19fd3JhcHBlciIsCiAgICBvcGVuOiBwcm9wcy5vcGVuLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaWFsb2ciLCB7CiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMuam9pbignICcpLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJhbGVncmlmeS1kaWFsb2dfX2NvbnRlbnQiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBwcm9wcy5jaGlsZHJlbikpKTsKfQoKRGlhbG9nLnByb3BUeXBlcyA9IHsKICAvKioKICAgKiBDb250ZW50CiAgICovCiAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5ub2RlKSwgUHJvcFR5cGVzLm5vZGVdKS5pc1JlcXVpcmVkLAoKICAvKioKICAgKiBBZGRpdGlvbmFsIGNsYXNzbmFtZXMKICAgKi8KICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsCgogIC8qKgogICAqIFNob3VsZCB0aGUgZGlhbG9nIGJlIHNob3duPwogICAqLwogIG9wZW46IFByb3BUeXBlcy5ib29sCn07CkRpYWxvZy5kZWZhdWx0UHJvcHMgPSB7CiAgb3BlbjogZmFsc2UKfTsKRGlhbG9nLnByb3BFeGFtcGxlcyA9IHsKICBjaGlsZHJlbjogJ0FkZCBzb21lIGNvbnRlbnQgaGVyZScsCiAgY2xhc3NOYW1lOiAnJywKICBvcGVuOiB0cnVlCn07Cgp2YXIgX2RlZmF1bHQgPSBhdHRhY2hVbml2ZXJzYWxQcm9wcyhEaWFsb2cpOwoKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoRGlhbG9nLCAiRGlhbG9nIiwgIi9Vc2Vycy9qYWtvYmtlcmtob3ZlL2FsZWdyaWZ5L3JlYWN0LWFsZWdyaWZ5LXVpL2xpYi9kaWFsb2cuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL1VzZXJzL2pha29ia2Vya2hvdmUvYWxlZ3JpZnkvcmVhY3QtYWxlZ3JpZnktdWkvbGliL2RpYWxvZy5qcyIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/dialog.js"],"names":["React","PropTypes","attachUniversalProps","Dialog","props","classNames","className","push","open","join","children","propTypes","oneOfType","arrayOf","node","isRequired","string","bool","defaultProps","propExamples"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,2BAArC;AAEA;;;;;;;;;;;;AAWA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,MAAMC,UAAU,GAAG,CAAC,iBAAD,CAAnB;;AAEA,MAAID,KAAK,CAACE,SAAV,EAAqB;AACjBD,IAAAA,UAAU,CAACE,IAAX,CAAgBH,KAAK,CAACE,SAAtB;AACH;;AAED,SACI;AACI,IAAA,SAAS,EAAC,0BADd;AAEI,IAAA,IAAI,EAAEF,KAAK,CAACI,IAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACI,IAAA,SAAS,EAAEH,UAAU,CAACI,IAAX,CAAgB,GAAhB,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AACI,IAAA,SAAS,EAAC,0BADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKL,KAAK,CAACM,QAHX,CAHJ,CAJJ,CADJ;AAgBH;;AAEDP,MAAM,CAACQ,SAAP,GAAmB;AAEf;;;AAGAD,EAAAA,QAAQ,EAAET,SAAS,CAACW,SAAV,CAAoB,CAC1BX,SAAS,CAACY,OAAV,CAAkBZ,SAAS,CAACa,IAA5B,CAD0B,EAE1Bb,SAAS,CAACa,IAFgB,CAApB,EAGPC,UARY;;AAUf;;;AAGAT,EAAAA,SAAS,EAAEL,SAAS,CAACe,MAbN;;AAef;;;AAGAR,EAAAA,IAAI,EAAEP,SAAS,CAACgB;AAlBD,CAAnB;AAoBAd,MAAM,CAACe,YAAP,GAAsB;AAClBV,EAAAA,IAAI,EAAE;AADY,CAAtB;AAGAL,MAAM,CAACgB,YAAP,GAAsB;AAClBT,EAAAA,QAAQ,EAAE,uBADQ;AAElBJ,EAAAA,SAAS,EAAE,EAFO;AAGlBE,EAAAA,IAAI,EAAE;AAHY,CAAtB;;eAMeN,oBAAoB,CAACC,MAAD,C;;AAAnC;;;;;;;;;;0BAtDSA,M","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n\n/**\n * <Dialog />\n * \n * ```jsx\n * <Dialog\n *   open={true}\n * >\n *   Some dialog content\n * </Dialog>\n * ```\n */\nfunction Dialog(props) {\n    const classNames = ['alegrify-dialog'];\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    return (\n        <div\n            className=\"alegrify-dialog__wrapper\"\n            open={props.open}    \n        >\n            <dialog\n                className={classNames.join(' ')}\n            >\n                <div\n                    className=\"alegrify-dialog__content\"\n                >\n                    {props.children}\n                </div>\n            </dialog>\n        </div>\n    );\n}\n\nDialog.propTypes = {\n\n    /**\n     * Content\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * Should the dialog be shown?\n     */\n    open: PropTypes.bool\n};\nDialog.defaultProps = {\n    open: false\n};\nDialog.propExamples = {\n    children: 'Add some content here',\n    className: '',\n    open: true\n};\n\nexport default attachUniversalProps(Dialog);\n"]}]}