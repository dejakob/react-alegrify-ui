{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/abstract/input-with-state.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/abstract/input-with-state.js","mtime":1551950208310},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1551376331885}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/abstract/input-with-state.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nvar INPUT_METHODS = ['changeValue', 'onInput'];\n/**\n * @abstract\n */\n\nvar InputWithState =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputWithState, _Component);\n\n  function InputWithState() {\n    var _this;\n\n    _classCallCheck(this, InputWithState);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputWithState).call(this));\n    INPUT_METHODS.forEach(function (methodName) {\n      _this[methodName] = _this[methodName].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  _createClass(InputWithState, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        value: this.props.value || ''\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.value !== this.props.value) {\n        this.setState({\n          value: newProps.value\n        });\n      }\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(value) {\n      if (value !== this.state.value) {\n        this.setState({\n          value: value\n        });\n\n        if (typeof this.props.onValueChange === 'function') {\n          this.props.onValueChange(value);\n        }\n      }\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(eventData) {\n      var value = eventData.target.value;\n\n      if (value !== this.state.value) {\n        this.setState({\n          value: value\n        });\n\n        if (typeof this.props.onValueChange === 'function') {\n          this.props.onValueChange(value);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.renderMethod(this.allProps);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }, {\n    key: \"allProps\",\n    get: function get() {\n      var _this2 = this;\n\n      var methods = {};\n      INPUT_METHODS.forEach(function (inputMethod) {\n        methods[inputMethod] = _this2[inputMethod];\n      });\n      return Object.assign({}, this.props, this.state, methods);\n    }\n  }]);\n\n  return InputWithState;\n}(Component);\n\nvar wrapWithInputState = function wrapWithInputState(renderMethod) {\n  return function (props) {\n    return React.createElement(InputWithState, Object.assign({}, props, {\n      renderMethod: renderMethod,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  };\n};\n\nexport { wrapWithInputState };\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(INPUT_METHODS, \"INPUT_METHODS\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/abstract/input-with-state.js\");\n  reactHotLoader.register(InputWithState, \"InputWithState\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/abstract/input-with-state.js\");\n  reactHotLoader.register(wrapWithInputState, \"wrapWithInputState\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/abstract/input-with-state.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/abstract/input-with-state.js"],"names":["React","Component","INPUT_METHODS","InputWithState","forEach","methodName","bind","setState","value","props","newProps","state","onValueChange","eventData","target","renderMethod","allProps","methods","inputMethod","Object","assign","wrapWithInputState"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,aAAa,GAAG,CAClB,aADkB,EAElB,SAFkB,CAAtB;AAKA;;;;IAGMC,c;;;;;AACF,4BAAc;AAAA;;AAAA;;AACV;AAEAD,IAAAA,aAAa,CACRE,OADL,CACa,UAAAC,UAAU,EAAI;AACnB,YAAKA,UAAL,IAAmB,MAAKA,UAAL,EAAiBC,IAAjB,+BAAnB;AACH,KAHL;AAHU;AAOb;;;;yCAEoB;AACjB,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,IAAoB;AADjB,OAAd;AAGH;;;8CAEyBE,Q,EAAU;AAChC,UAAIA,QAAQ,CAACF,KAAT,KAAmB,KAAKC,KAAL,CAAWD,KAAlC,EAAyC;AACrC,aAAKD,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAEE,QAAQ,CAACF;AAAlB,SAAd;AACH;AACJ;;;gCAkBWA,K,EAAO;AACf,UAAIA,KAAK,KAAK,KAAKG,KAAL,CAAWH,KAAzB,EAAgC;AAC5B,aAAKD,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAALA;AAAF,SAAd;;AAEA,YAAI,OAAO,KAAKC,KAAL,CAAWG,aAAlB,KAAoC,UAAxC,EAAoD;AAChD,eAAKH,KAAL,CAAWG,aAAX,CAAyBJ,KAAzB;AACH;AACJ;AACJ;;;4BAEOK,S,EAAW;AAAA,UACPL,KADO,GACGK,SAAS,CAACC,MADb,CACPN,KADO;;AAGf,UAAIA,KAAK,KAAK,KAAKG,KAAL,CAAWH,KAAzB,EAAgC;AAC5B,aAAKD,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAALA;AAAF,SAAd;;AAEA,YAAI,OAAO,KAAKC,KAAL,CAAWG,aAAlB,KAAoC,UAAxC,EAAoD;AAChD,eAAKH,KAAL,CAAWG,aAAX,CAAyBJ,KAAzB;AACH;AACJ;AACJ;;;6BAEQ;AACL,aAAO,KAAKC,KAAL,CAAWM,YAAX,CAAwB,KAAKC,QAA7B,CAAP;AACH;;;;;;;;;;wBAxCc;AAAA;;AACX,UAAMC,OAAO,GAAG,EAAhB;AAEAf,MAAAA,aAAa,CACRE,OADL,CACa,UAAAc,WAAW,EAAI;AACpBD,QAAAA,OAAO,CAACC,WAAD,CAAP,GAAuB,MAAI,CAACA,WAAD,CAA3B;AACH,OAHL;AAKA,aAAOC,MAAM,CAACC,MAAP,CACH,EADG,EAEH,KAAKX,KAFF,EAGH,KAAKE,KAHF,EAIHM,OAJG,CAAP;AAMH;;;;EApCwBhB,S;;AAiE7B,IAAMoB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAN,YAAY,EAAI;AACvC,SAAO,UAAAN,KAAK,EAAI;AACZ,WACI,oBAAC,cAAD,oBACQA,KADR;AAEI,MAAA,YAAY,EAAEM,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAMH,GAPD;AAQH,CATD;;AAWA,SACIM,kBADJ;;;;;;;;;;0BApFMnB,a;0BAQAC,c;0BAiEAkB,kB","sourcesContent":["import React, { Component } from 'react';\n\nconst INPUT_METHODS = [\n    'changeValue',\n    'onInput',\n]\n\n/**\n * @abstract\n */\nclass InputWithState extends Component {\n    constructor() {\n        super();\n\n        INPUT_METHODS\n            .forEach(methodName => {\n                this[methodName] = this[methodName].bind(this);\n            });\n    }\n\n    componentWillMount() {\n        this.setState({\n            value: this.props.value ||Â ''\n        });\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.value !== this.props.value) {\n            this.setState({ value: newProps.value });\n        }\n    }\n\n    get allProps() {\n        const methods = {};\n\n        INPUT_METHODS\n            .forEach(inputMethod => {\n                methods[inputMethod] = this[inputMethod]\n            });\n\n        return Object.assign(\n            {},\n            this.props,\n            this.state,\n            methods\n        );\n    }\n\n    changeValue(value) {\n        if (value !== this.state.value) {\n            this.setState({ value });\n\n            if (typeof this.props.onValueChange === 'function') {\n                this.props.onValueChange(value);\n            }\n        }\n    }\n\n    onInput(eventData) {\n        const { value } = eventData.target;\n\n        if (value !== this.state.value) {\n            this.setState({ value });\n\n            if (typeof this.props.onValueChange === 'function') {\n                this.props.onValueChange(value);\n            }\n        }\n    }\n\n    render() {\n        return this.props.renderMethod(this.allProps);\n    }\n}\n\nconst wrapWithInputState = renderMethod => {\n    return props => {\n        return (\n            <InputWithState \n                {...props}\n                renderMethod={renderMethod}\n            />\n        );\n    };\n};\n\nexport {\n    wrapWithInputState\n};\n"]}]}