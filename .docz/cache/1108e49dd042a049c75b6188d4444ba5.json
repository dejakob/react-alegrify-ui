{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js!/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/dialog.mdx","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/dialog.mdx","mtime":1559772819217},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1559771649804},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559770457280},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/@mdx-js/loader/index.js","mtime":1559771650965},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js","mtime":1551899789434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/dialog.mdx"],"names":["React","mdx","Playground","Props","Button","Dialog","makeShortcode","name","MDXDefaultShortcode","props","console","warn","Example","layoutProps","MDXLayout","MDXContent","components","setState","show","state","Component","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport Button from '../lib/button';\nimport Dialog from '../lib/dialog';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"dialog\"\n    }}>{`Dialog`}</h1>\n\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  class Example extends React.Component {\\n    componentWillMount() {\\n      this.setState({ show: false })\\n    }\\n    render() {\\n      return (\\n        <React.Fragment>\\n          <Button primary onClick={() => this.setState({ show: true })}>\\n            Show modal\\n          </Button>\\n\\n          <Dialog open={this.state.show}>\\n            Some dialog content\\n            <Button\\n              full\\n              primary\\n              onClick={() => this.setState({ show: false })}\\n            >\\n              Dismiss\\n            </Button>\\n          </Dialog>\\n        </React.Fragment>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Dialog\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtKZr3CCJzCNWV2g9KAIA8SQPFI6gCIg9gtQgeJKFnCj3UkGi6JYDiUmYoj2EDSUsMo01FTBVBdBRY5Tlw5wCESLF2G4dhgHWKIBGeVArnaAAGdgkxmLB2j3asZg7FgZwMgAWMz2AANjMiz1jAYCADFvWgRIDP4ZxDgRB1MBgoR-CWIhqEoOBrIRdzq08mhnAgXDLnYABGezLPkGS5KmABBOZ1PYCMoPIGwoHQMN2HkDl1LEMroxkdgUVUmBuGAPDlI6uB5C3GtgEq6AauCAAycbxkSeZKGaEbqtq7hlrlMBkMlAZUHadgAH4NlGsMIwaq4FrG1A8urKQZCrN8zBhdVjhgMAwigKYjsa5rLuK5dqwsYB3u4JqtN-mtyDguA7DPLBvTJbpsBA9A7DEggcDXagXWBmsscLdN9AAdWgKA9TaGh3sx7GsYmWwcDgUdlKycq2uGEYrmeqBabqt8KYsC7uYnOgpzJlcKa6Ag-nMKMQb5xhkZwLzMhSK8CEGvmscYEibmZft-VcARkmoewaJ2LqAaaqm4BpumCAZqC4GZq5UQZTmBuF1WLGcZn2Gi9B4ld6XJA1siqz97nGDYwS9nmVAuvNmnrdoGnmZdqW3fYIKj2OdioE4ws9BoEPpcD6gC9VtaEhLvntZ0xIK-5g2je2E2GsB_Fqdpgh6doRm7dGVn4g5-redTrGVeHms2LgIg6VrtWA8Y1BR7dqRw-zlJF9DyRZfl1xFf0desa57mh6x4-a1F8XayhmHYHYTcV3kIepG-m6zC_EA-Po-f_y0ChgP0BhCIPWRhJE0mphIPTQpQGYlgZrwBAe0fsUDzQqXmHAcB9ooLRGtpVAAqqgNgGQKhQEgYOTC3EqKSE2FAWEcBJDIQIQIIh5pEF3D9GYYwphzBGFrEXcwd8uHsCKNwsUKRQhwSOAACUsHqAAMuwBimt_QCKEewYoajNBYBUereeKiLBV11jXARW5uHsAkRAJYDR2iylcH2fo1d5HzwAITsEADwbgBI_a0XPRRxjVFqKEbyVAa1ZLdnMLwiMLC4ANXJhYAqPRwZwAAHLejgRpAA2u0eIMBEIQDAIkc0CiyLtAALoqiUVjMG_hEnJItjMPIeBwnoQ-PEpJR4PwySxjksqEScD6L1lEkOFSIYtPgD0upj5MnZNyfk-e5pmF2IMa-UpJ92k1k6Q0qBFtyiOw2qwGA_SU4xOadU0ZdtxmwEmXkgp1BZlbLRDsmAiz74rIsGs7pZcoD7L5oMqpR4aljIyec_oUyrmoFme8x5IMLorleY0ye8QPmaQGUc35Jz6kAqyUCy5MzzRwoSBC5ZZTVnNHWXcHA4i0ifO5t84ZfzTnooudMxRszyUPLaZC55_MxYCAliHRgILa7UuSV1QVKL1CUDQI-OUHJT58xQZ1YA3S5XsAAD7KoAAXtHpB4KeL4ZXcxYBUDwsAeAKsaQa1wRrsh6opvXWIjdTUbJwLanY1r2D72xg60lp0wyuqkCC0eb4oWoF4T0gcMDUGlWBiuDhwtuG8PGPDW-DjFG5xAqIKWPIVzeroFcEh4aRnox1GAfNEZUkhzzbAi2utMiJCLRGCtqCcCoEBBySyfMG0jObZgFcRSOQ4FsGKAAjqECAXRFgcpjRm9ghVOwvE2r2b5qBqmxoCeU5FGUO0WxRNOFIllo0mFjY0Ow5sQi2J1nrZNZEdorpXL0_y4UoH5otl4SgUA90g0ndjbhDRj0ElPbc0I9zL3UGvRm1dNYAP3NzWGytOAX1vonQeqdP7W52Bse8vMXACwgtA1-8DFh3nQcfbB-D76safqxt-39thT24qgOwVgut2KZhwzekGdGiPQJI8IBDhKLAUZrFR1Dp6WUMaY-4KYrGwMrhZZxp9cGeNkZrAJiw3CQXKq1TqtjlNYFydg9ugoSn-NIa_axWwFrjW4co_hzOhrjV6cbaRxDnDTOGztSEDaxdpMg2ddsBzIygnkFyqUkNmBnpiIICQuwGlolnurn3dmMA201kI4afuSWVwcbS4l5LFhZPZdprl6a8wDKaZeIlLG5rLXoAS7TMwF0Q0sKvr-aLiKQbZv0nKAAmq4eCFjeC8CsaekF7BAC8G4AaR2Ks1jvbVjLINUts0K5lqICRZtFfy4tubOmStyjKy-IrVX7MFcZOdUpd0sAiTCy9KYWCJR4DwQwohUWIy8LZW_D-AlV7f0AroNNACWLAPIVJF8pTAH2k3fAlhyDK3oMgiEG4d2Hu7MYfEKLdV4EeioTQuh-DkdMIiWw1An7uFhyzjnfh7BuEqLUcUDRWiV6cV0ZHOgMc0QwF5twnx7tIjdE-znX7-hPEM7XtTvxXCAmBZCWZwSJLIltfKdQeSIqUnsHSRMzFloydCRKRymFjrleUopsr2l9TukG6WTWINWNz7cs-tLGQAr118BAOrnJeS-cpAAPqe5GJkOYoIQC1ygSzz1Ftg_nSxiHd1asPcz1Bk74a66LZioldtV8rqR5x4TA7g5Y9lfO9d1Mj33uBf50D7nvm0fU6h4-FVM6GeN7XVrldLX7qW-yBXGyoNwvQ3EYjTF5zh7HB53TXhrNdewz-bD86ItJay2583Tgat8E62L67XsorWM1-Ah7X2gdMBh2juyEZ2-JnKPTtnSEhd8Sl2_O0_Hypwyp9xx3SflTlO07DDETkCYvOtfyO6B7hGFQCs0Exs3D2f3g3q1KR7yuwizRwHx8yjlm2gLMB7ya2hha0jXHwOhzTlBnRyDgB51TRdE2C6Cm0OUf2SQMgoOZ060dhO3kDO2dAuwejgNenh2wXu1x0IVR3QgjGFzeyUHflokoXnGx3oTx3iDmUdQAm0FLwMDAjBw1DNHgWB0J1iRwQSQaAADUzwRRnBCoZFPd7AZFCpnBnAzxnBsD2N4oYAAANZwAyQvPJOKCUGAWZeGTIHFFbKAWgtwhEJwuUFwnFOw2ZOjfwuwvUZwwFN3UI9w2ZI8FgUIa0IrAImAGRGIjFOI9I5lXWNISI9w-wzI4I2IqZXI80Lw1wc0FlRKJgmSSXTaEcAgAgudHsKAQ2Kg35WXQ3XOJXJPUqWXJpLo7oVVOUV8GmMkF4SVCFFcHUDwdQLYUfbmHAbYGARIOACMLQ3Q_Qww4w0w8wyw5wQ-CmHATyAQM8O7ElYZD6WLL5RXKYZXUqbYvQgwowkwswiwqw1JFhYZHXPjVWPXO4H4gcP43o4eY3VFCMc3WuV1eqZg63UcC-Y3UpINRo5kW7XBHglHYhfgtGDMAgXom3cwCJW4gZB4uJEY1rU8Voq_DopPHohE7mYku3VORgfEwXCvbmYAHAXkiJBvI3BPSElPVAGY6VWuCnbmNlE-VEmSe6DBFcGky_edekqkorTE7gx7PgjZVA1AN-eKbYHeP8TQagH7P-UCEAcmfgW_RkJAQRICcoP4UsSozA2GSKdYfgPHTafgK4fgQyHAf0wyd06sfgcocgfoGYEJH0-0wqNqQiG-H8WGR6MkSgRIXMPIAofmM0c0H4YsaoAPZLfgKINAaM_gVQbAb-YMiwUMmAKOTAWSCAeAaM2LUMxSUskAAAPUyhwAACYAyqyax-Bgd2yuznIcAAAOHAZyAc6skAKHOVOAEczKAAVinN7JnPtOB0tEiCXLHMnOnPLx5nqzfjzO8A-GoEgBSG_lNPkPNMUMtP4FoB9CyB9P4HDPFFoHNC3NmBmH4HkAUAfiAA`} mdxType=\"Playground\">\n    {() => {\n        class Example extends React.Component {\n          componentWillMount() {\n            this.setState({\n              show: false\n            });\n          }\n\n          render() {\n            return <React.Fragment>\n                    <Button primary onClick={() => this.setState({\n                show: true\n              })} mdxType=\"Button\">\n                        Show modal\n                    </Button>\n\n                    <Dialog open={this.state.show} mdxType=\"Dialog\">\n                        Some dialog content\n\n                        <Button full primary onClick={() => this.setState({\n                  show: false\n                })} mdxType=\"Button\">\n                            Dismiss\n                        </Button>\n                    </Dialog>\n                </React.Fragment>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Dialog} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}