{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/date-indicator.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/date-indicator.js","mtime":1559767591727},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559770457280}],"contextDependencies":[],"result":["import React from'react';import moment from'moment';import{attachUniversalProps}from'./helpers/universal-props';/**\n * <DateIndicator />\n * \n * ```jsx\n * <DateIndicator\n *   date={'2018-10-28T00:00:00'}\n * />\n * ```\n */function DateIndicator(props){var classNames=['alegrify-date-indicator'];if(typeof props.className==='string'&&props.className.trim()!==''){classNames.push(props.className);}var momentDate=moment(props.date);return React.createElement(\"time\",{className:classNames.join(' '),dateTime:momentDate.format()},React.createElement(\"span\",{className:\"alegrify-date-indicator__month\"},momentDate.format('MMM')),React.createElement(\"span\",{className:\"alegrify-date-indicator__day\"},momentDate.format('D')));}DateIndicator.defaultProps={date:new Date().toString(),className:''};DateIndicator.propExamples=DateIndicator.defaultProps;export default attachUniversalProps(DateIndicator);DateIndicator.__docgenInfo={\"description\":\"<DateIndicator />\\n\\n```jsx\\n<DateIndicator\\n  date={'2018-10-28T00:00:00'}\\n/>\\n```\",\"methods\":[],\"displayName\":\"DateIndicator\",\"props\":{\"date\":{\"defaultValue\":{\"value\":\"new Date().toString()\",\"computed\":true},\"type\":{\"name\":\"union\",\"value\":[{\"name\":\"number\"},{\"name\":\"string\"}]},\"required\":false,\"description\":\"Content\"},\"className\":{\"defaultValue\":{\"value\":\"''\",\"computed\":false},\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Additional classnames\"}}};",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/date-indicator.js"],"names":["React","moment","attachUniversalProps","DateIndicator","props","classNames","className","trim","push","momentDate","date","join","format","defaultProps","Date","toString","propExamples"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA,OAASC,oBAAT,KAAqC,2BAArC,CAEA;;;;;;;;GASA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC1B,GAAMC,CAAAA,UAAU,CAAG,CAAC,yBAAD,CAAnB,CAEA,GAAI,MAAOD,CAAAA,KAAK,CAACE,SAAb,GAA2B,QAA3B,EAAuCF,KAAK,CAACE,SAAN,CAAgBC,IAAhB,KAA2B,EAAtE,CAA0E,CACtEF,UAAU,CAACG,IAAX,CAAgBJ,KAAK,CAACE,SAAtB,EACH,CAED,GAAMG,CAAAA,UAAU,CAAGR,MAAM,CAACG,KAAK,CAACM,IAAP,CAAzB,CAEA,MACI,6BACI,SAAS,CAAEL,UAAU,CAACM,IAAX,CAAgB,GAAhB,CADf,CAEI,QAAQ,CAAEF,UAAU,CAACG,MAAX,EAFd,EAII,4BACI,SAAS,CAAC,gCADd,EAGKH,UAAU,CAACG,MAAX,CAAkB,KAAlB,CAHL,CAJJ,CASI,4BACI,SAAS,CAAC,8BADd,EAGKH,UAAU,CAACG,MAAX,CAAkB,GAAlB,CAHL,CATJ,CADJ,CAiBH,CAiBDT,aAAa,CAACU,YAAd,CAA6B,CACzBH,IAAI,CAAE,GAAII,CAAAA,IAAJ,GAAWC,QAAX,EADmB,CAEzBT,SAAS,CAAE,EAFc,CAA7B,CAIAH,aAAa,CAACa,YAAd,CAA6Bb,aAAa,CAACU,YAA3C,CAEA,cAAeX,CAAAA,oBAAoB,CAACC,aAAD,CAAnC,C","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n\n/**\n * <DateIndicator />\n * \n * ```jsx\n * <DateIndicator\n *   date={'2018-10-28T00:00:00'}\n * />\n * ```\n */\nfunction DateIndicator(props) {\n    const classNames = ['alegrify-date-indicator'];\n\n    if (typeof props.className === 'string' && props.className.trim() !== '') {\n        classNames.push(props.className);\n    }\n\n    const momentDate = moment(props.date);\n\n    return (\n        <time\n            className={classNames.join(' ')}\n            dateTime={momentDate.format()}\n        >\n            <span\n                className=\"alegrify-date-indicator__month\"\n            >\n                {momentDate.format('MMM')}\n            </span>\n            <span\n                className=\"alegrify-date-indicator__day\"\n            >\n                {momentDate.format('D')}\n            </span>\n        </time>\n    );\n}\n\nDateIndicator.propTypes = {\n\n    /**\n     * Content\n     */\n    date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]).isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string\n}\nDateIndicator.defaultProps = {\n    date: new Date().toString(),\n    className: ''\n}\nDateIndicator.propExamples = DateIndicator.defaultProps;\n\nexport default attachUniversalProps(DateIndicator);\n"]}]}