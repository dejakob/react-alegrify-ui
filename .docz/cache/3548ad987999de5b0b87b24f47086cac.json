{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/status-input.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/status-input.js","mtime":1559767861076},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1559771649804},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/thread-loader/dist/cjs.js","mtime":1559771650461},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559770457280},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js","mtime":1551899789434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/status-input.js"],"names":["React","Component","Button","PropTypes","attachUniversalProps","StatusInput","handleValueChange","bind","handleFocus","handleBlur","setState","value","props","className","onFocus","onBlur","eventData","target","onValueChange","StatusInputView","Object","assign","state","classNames","push","amountOfLines","match","length","join","preventDefault","onSubmit","placeholder","name","id","submitLabel","actions","map","action","index","icon","label","onClick","StatusInputAction","propTypes","string","isRequired","func","arrayOf","shape","propExamples"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,2BAArC;AAEA;;;;;;;;;;IASMC,W;;;;;AACF,yBAAc;AAAA;;AAAA;;AACV;AAEA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,+BAAzB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,+BAAnB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,+BAAlB;AALU;AAMb;;;;yCAEoB;AACjB,WAAKG,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,IAAoB;AAA7B,OAAd;AACH;;;kCAEa;AACV,WAAKD,QAAL,CAAc;AAAEG,QAAAA,SAAS,YAAK,KAAKD,KAAL,CAAWC,SAAhB;AAAX,OAAd;;AAEA,UAAI,OAAO,KAAKD,KAAL,CAAWE,OAAlB,KAA8B,UAAlC,EAA8C;AAC1C,aAAKF,KAAL,CAAWE,OAAX;AACH;AACJ;;;iCAEY;AACT,WAAKJ,QAAL,CAAc;AAAEG,QAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC;AAAxB,OAAd;;AAEA,UAAI,OAAO,KAAKD,KAAL,CAAWE,OAAlB,KAA8B,UAAlC,EAA8C;AAC1C,aAAKF,KAAL,CAAWG,MAAX;AACH;AACJ;;;sCAEiBC,S,EAAW;AAAA,UACnBL,KADmB,GACTK,SAAS,CAACC,MADD,CACnBN,KADmB;AAGzB,WAAKD,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAALA;AAAF,OAAd;;AAEA,UAAI,OAAO,KAAKC,KAAL,CAAWM,aAAlB,KAAoC,UAAxC,EAAoD;AAChD,aAAKN,KAAL,CAAWM,aAAX,CAAyBP,KAAzB;AACH;AACJ;;;6BAEQ;AACL,aAAOQ,eAAe,CAACC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,IAAlB,EAAwB,KAAKT,KAA7B,EAAoC,KAAKU,KAAzC,CAAD,CAAtB;AACH;;;;;;;;;;;EAzCqBrB,S;AA4C1B;;;;;;AAIA,SAASkB,eAAT,CAAyBP,KAAzB,EAAgC;AAC5B,MAAMW,UAAU,GAAG,CAAC,uBAAD,CAAnB;;AAEA,MAAI,OAAOX,KAAK,CAACC,SAAb,KAA2B,QAA/B,EAAyC;AACrCU,IAAAA,UAAU,CAACC,IAAX,CAAgBZ,KAAK,CAACC,SAAtB;AACH;;AAED,MAAMY,aAAa,GAAG,CAACb,KAAK,CAACD,KAAN,CAAYe,KAAZ,CAAkB,MAAlB,KAA6B,EAA9B,EAAkCC,MAAlC,GAA2C,CAAjE;AAEA,SACI;AACI,IAAA,SAAS,EAAEJ,UAAU,CAACK,IAAX,CAAgB,GAAhB,CADf;AAEI,IAAA,QAAQ,EAAE,kBAAAZ,SAAS,EAAI;AACnBA,MAAAA,SAAS,CAACa,cAAV;AACAjB,MAAAA,KAAK,CAACkB,QAAN,CAAelB,KAAK,CAACD,KAArB;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI;AACI,IAAA,SAAS,EAAC,iCADd;AAEI,IAAA,WAAW,EAAEC,KAAK,CAACmB,WAFvB;AAGI,IAAA,IAAI,EAAEnB,KAAK,CAACoB,IAHhB;AAII,IAAA,EAAE,EAAEpB,KAAK,CAACqB,EAJd;AAKI,IAAA,IAAI,EAAER,aALV;AAMI,IAAA,OAAO,EAAEb,KAAK,CAACN,iBANnB;AAOI,IAAA,OAAO,EAAEM,KAAK,CAACJ,WAPnB;AAQI,IAAA,MAAM,EAAEI,KAAK,CAACH,UARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAiBI;AACI,IAAA,SAAS,EAAC,+BADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,MAAD;AACI,IAAA,OAAO,MADX;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,KAAK,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKG,KAAK,CAACsB,WAAN,IAAqB,QAL1B,CAHJ,CAjBJ,EA4BI;AACI,IAAA,SAAS,EAAC,gCADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKtB,KAAK,CAACuB,OAAN,IAAiBvB,KAAK,CAACuB,OAAN,CAAcC,GAAd,CAAkB,UAACC,MAAD,EAASC,KAAT;AAAA,WAChC,oBAAC,iBAAD;AACI,MAAA,GAAG,EAAEA,KADT;AAEI,MAAA,IAAI,EAAED,MAAM,CAACE,IAFjB;AAGI,MAAA,KAAK,EAAEF,MAAM,CAACG,KAHlB;AAII,MAAA,OAAO,EAAEH,MAAM,CAACI,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgC;AAAA,GAAlB,CAHtB,CA5BJ,CADJ;AA2CH;AAED;;;;;;AAIA,SAASC,iBAAT,CAA2B9B,KAA3B,EAAkC;AAC9B,SACI;AACI,IAAA,SAAS,EAAC,+BADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AACI,IAAA,SAAS,EAAC,sCADd;AAEI,iBAAWA,KAAK,CAAC2B,IAFrB;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,OAAO,EAAE3B,KAAK,CAAC6B,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AACI,IAAA,SAAS,EAAC,4CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGK7B,KAAK,CAAC4B,KAHX,CANJ,CAHJ,CADJ;AAkBH;;AAEDnC,WAAW,CAACsC,SAAZ,GAAwB;AACpB9B,EAAAA,SAAS,EAAEV,SAAS,CAACyC,MADD;AAEpBb,EAAAA,WAAW,EAAE5B,SAAS,CAACyC,MAFH;AAGpBZ,EAAAA,IAAI,EAAE7B,SAAS,CAACyC,MAAV,CAAiBC,UAHH;AAIpBZ,EAAAA,EAAE,EAAE9B,SAAS,CAACyC,MAAV,CAAiBC,UAJD;AAKpBX,EAAAA,WAAW,EAAE/B,SAAS,CAACyC,MALH;AAOpB1B,EAAAA,aAAa,EAAEf,SAAS,CAAC2C,IAPL;AAQpBhC,EAAAA,OAAO,EAAEX,SAAS,CAAC2C,IARC;AASpB/B,EAAAA,MAAM,EAAEZ,SAAS,CAAC2C,IATE;AAUpBhB,EAAAA,QAAQ,EAAE3B,SAAS,CAAC2C,IAVA;AAYpBX,EAAAA,OAAO,EAAEhC,SAAS,CAAC4C,OAAV,CACL5C,SAAS,CAAC6C,KAAV,CAAgB;AACZT,IAAAA,IAAI,EAAEpC,SAAS,CAACyC,MAAV,CAAiBC,UADX;AAEZL,IAAAA,KAAK,EAAErC,SAAS,CAACyC,MAAV,CAAiBC,UAFZ;AAGZJ,IAAAA,OAAO,EAAEtC,SAAS,CAAC2C;AAHP,GAAhB,CADK;AAZW,CAAxB;AAoBAzC,WAAW,CAAC4C,YAAZ,GAA2B;AACvBpC,EAAAA,SAAS,EAAE,EADY;AAEvBkB,EAAAA,WAAW,EAAE,qBAFU;AAGvBI,EAAAA,OAAO,EAAE,CACL;AAAEK,IAAAA,KAAK,EAAE,SAAT;AAAoBD,IAAAA,IAAI,EAAE;AAA1B,GADK,EAEL;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBD,IAAAA,IAAI,EAAE;AAAxB,GAFK,EAGL;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBD,IAAAA,IAAI,EAAE;AAAvB,GAHK;AAHc,CAA3B;;eAUenC,oBAAoB,CAACC,WAAD,C;;AAAnC;;;;;;;;;;0BA7JMA,W;0BAgDGc,e;0BA0DAuB,iB","sourcesContent":["import React, { Component } from 'react';\nimport Button from './button';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n\n/**\n * <StatusInput />\n * \n * ```jsx\n * <StatusInput\n * \n * />\n * ```\n */\nclass StatusInput extends Component {\n    constructor() {\n        super();\n\n        this.handleValueChange = this.handleValueChange.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n    }\n\n    componentWillMount() {\n        this.setState({ value: this.props.value || '' });\n    }\n\n    handleFocus() {\n        this.setState({ className: `${this.props.className} alegrify-status-input--focus` });\n\n        if (typeof this.props.onFocus === 'function') {\n            this.props.onFocus();\n        }\n    }\n\n    handleBlur() {\n        this.setState({ className: this.props.className });\n\n        if (typeof this.props.onFocus === 'function') {\n            this.props.onBlur();\n        }\n    }\n\n    handleValueChange(eventData) {\n        var { value } = eventData.target;\n\n        this.setState({ value });\n\n        if (typeof this.props.onValueChange === 'function') {\n            this.props.onValueChange(value);\n        }\n    }\n\n    render() {\n        return StatusInputView(Object.assign({}, this, this.props, this.state));\n    }\n}\n\n/**\n * <StatusInputView />\n * @param {Object} props \n */\nfunction StatusInputView(props) {\n    const classNames = ['alegrify-status-input'];\n\n    if (typeof props.className === 'string') {\n        classNames.push(props.className);\n    }\n\n    const amountOfLines = (props.value.match(/\\n/gi) || []).length + 1;\n    \n    return (\n        <form\n            className={classNames.join(' ')}\n            onSubmit={eventData => {\n                eventData.preventDefault();\n                props.onSubmit(props.value);\n            }}\n        >\n            <textarea\n                className=\"alegrify-status-input__textarea\"\n                placeholder={props.placeholder}\n                name={props.name}\n                id={props.id}\n                rows={amountOfLines}\n                onInput={props.handleValueChange}\n                onFocus={props.handleFocus}\n                onBlur={props.handleBlur}\n            ></textarea>\n            <div\n                className=\"alegrify-status-input__submit\"\n            >\n                <Button\n                    primary\n                    type=\"submit\"\n                    small\n                >\n                    {props.submitLabel || 'Submit'}\n                </Button>\n            </div>\n            <ul\n                className=\"alegrify-status-input__actions\"\n            >\n                {props.actions && props.actions.map((action, index) =>\n                    <StatusInputAction\n                        key={index}\n                        icon={action.icon}\n                        label={action.label}\n                        onClick={action.onClick}\n                    />\n                )}\n            </ul>\n        </form>\n    )\n}\n\n/**\n * <StatusInputAction />\n * @param {Object} props \n */\nfunction StatusInputAction(props) {\n    return (\n        <li\n            className=\"alegrify-status-input__action\"\n        >\n            <button\n                className=\"alegrify-status-input__action-button\"\n                data-icon={props.icon}\n                type=\"button\"\n                onClick={props.onClick}\n            >\n                <span\n                    className=\"alegrify-status-input__action-button-label\"\n                >\n                    {props.label}    \n                </span>\n            </button>\n        </li>\n    );\n}\n\nStatusInput.propTypes = {\n    className: PropTypes.string,\n    placeholder: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    submitLabel: PropTypes.string,\n\n    onValueChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    onSubmit: PropTypes.func,\n\n    actions: PropTypes.arrayOf(\n        PropTypes.shape({\n            icon: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            onClick: PropTypes.func\n        })\n    )\n};\nStatusInput.propExamples = {\n    className: '',\n    placeholder: 'Share your thoughts',\n    actions: [\n        { label: 'picture', icon: 'camera_alt' },\n        { label: 'music', icon: 'audiotrack' },\n        { label: 'file', icon: 'attach_file' }\n    ]\n};\n\nexport default attachUniversalProps(StatusInput);\n"]}]}