{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid-body.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid-body.js","mtime":1540317773499},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1551376331885}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid-body.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DEFAULT_WEEKDAY_LABELS } from './constants';\nimport WeekScheduleViewTime from './view-time';\nimport WeekScheduleViewEmptyCell from './view-empty-cell';\nimport { formatTimeLabel } from './helpers';\n/**\n * <WeekScheduleViewWeekGridBody />\n */\n\nfunction WeekScheduleViewWeekGridBody(props) {\n  var times = new Array(48).fill(null).map(function (nothing, index) {\n    return formatTimeLabel(index);\n  });\n  return React.createElement(\"tbody\", {\n    className: \"alegrify-week-schedule__table-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, times.map(function (time, index) {\n    return React.createElement(\"tr\", {\n      className: \"alegrify-week-schedule__table-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(WeekScheduleViewTime, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, index % props.cellsPerTimeLabel === 0 ? time : ''), DEFAULT_WEEKDAY_LABELS.map(function () {\n      return React.createElement(WeekScheduleViewEmptyCell, {\n        cellHeight: props.cellHeight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }));\n  }));\n}\n\nWeekScheduleViewWeekGridBody.propTypes = {\n  cellsPerTimeLabel: PropTypes.number,\n  cellHeight: PropTypes.number\n};\nvar _default = WeekScheduleViewWeekGridBody;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(WeekScheduleViewWeekGridBody, \"WeekScheduleViewWeekGridBody\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid-body.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid-body.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nWeekScheduleViewWeekGridBody.__docgenInfo = {\n  \"description\": \"<WeekScheduleViewWeekGridBody />\",\n  \"methods\": [],\n  \"displayName\": \"WeekScheduleViewWeekGridBody\",\n  \"props\": {\n    \"cellsPerTimeLabel\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"cellHeight\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid-body.js"],"names":["React","PropTypes","DEFAULT_WEEKDAY_LABELS","WeekScheduleViewTime","WeekScheduleViewEmptyCell","formatTimeLabel","WeekScheduleViewWeekGridBody","props","times","Array","fill","map","nothing","index","time","cellsPerTimeLabel","cellHeight","propTypes","number"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,sBAAT,QAAuC,aAAvC;AAEA,OAAOC,oBAAP,MAAiC,aAAjC;AACA,OAAOC,yBAAP,MAAsC,mBAAtC;AACA,SAASC,eAAT,QAAgC,WAAhC;AAEA;;;;AAGA,SAASC,4BAAT,CAAsCC,KAAtC,EAA6C;AACzC,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,EAAV,EACTC,IADS,CACJ,IADI,EAETC,GAFS,CAEL,UAACC,OAAD,EAAUC,KAAV;AAAA,WAAoBR,eAAe,CAACQ,KAAD,CAAnC;AAAA,GAFK,CAAd;AAIA,SACI;AACI,IAAA,SAAS,EAAC,oCADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKL,KAAK,CAACG,GAAN,CAAU,UAACG,IAAD,EAAOD,KAAP;AAAA,WACP;AACI,MAAA,SAAS,EAAC,mCADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KAAK,GAAGN,KAAK,CAACQ,iBAAd,KAAoC,CAApC,GAAwCD,IAAxC,GAA+C,EADpD,CAHJ,EAMKZ,sBAAsB,CAACS,GAAvB,CAA2B;AAAA,aACxB,oBAAC,yBAAD;AACI,QAAA,UAAU,EAAEJ,KAAK,CAACS,UADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADwB;AAAA,KAA3B,CANL,CADO;AAAA,GAAV,CAHL,CADJ;AAoBH;;AAEDV,4BAA4B,CAACW,SAA7B,GAAyC;AACrCF,EAAAA,iBAAiB,EAAEd,SAAS,CAACiB,MADQ;AAErCF,EAAAA,UAAU,EAAEf,SAAS,CAACiB;AAFe,CAAzC;eAKeZ,4B;AAAf;;;;;;;;;;0BAhCSA,4B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DEFAULT_WEEKDAY_LABELS } from './constants';\n\nimport WeekScheduleViewTime from './view-time';\nimport WeekScheduleViewEmptyCell from './view-empty-cell';\nimport { formatTimeLabel } from './helpers';\n\n/**\n * <WeekScheduleViewWeekGridBody />\n */\nfunction WeekScheduleViewWeekGridBody(props) {\n    const times = new Array(48)\n        .fill(null)\n        .map((nothing, index) => formatTimeLabel(index));\n\n    return (\n        <tbody\n            className=\"alegrify-week-schedule__table-body\"\n        >\n            {times.map((time, index) =>\n                <tr\n                    className=\"alegrify-week-schedule__table-row\"\n                >\n                    <WeekScheduleViewTime>\n                        {index % props.cellsPerTimeLabel === 0 ? time : ''}\n                    </WeekScheduleViewTime>\n                    {DEFAULT_WEEKDAY_LABELS.map(() => (\n                        <WeekScheduleViewEmptyCell\n                            cellHeight={props.cellHeight}\n                        />\n                    ))}\n                </tr>\n            )}\n        </tbody>\n    )\n}\n\nWeekScheduleViewWeekGridBody.propTypes = {\n    cellsPerTimeLabel: PropTypes.number,\n    cellHeight: PropTypes.number\n};\n\nexport default WeekScheduleViewWeekGridBody;\n"]}]}