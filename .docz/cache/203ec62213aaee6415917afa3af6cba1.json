{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js","mtime":1551903292881},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1551376331885}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// @source https://gist.github.com/albinekb/f59feb84273279d1d45f603aee8eb496\nimport * as React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nvar ArrayOf = function ArrayOf(_ref) {\n  var type = _ref.type;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"[\"), React.createElement(Type, {\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"]\"));\n};\n\nvar capitalize = function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n};\n\nvar parseRaw = function parseRaw(raw) {\n  return raw.replace(/Type$/, '').replace(/Type.isRequired$/, '!');\n};\n\nvar printName = function printName(_ref2) {\n  var name = _ref2.name,\n      raw = _ref2.raw,\n      required = _ref2.required;\n  return capitalize(raw && name === 'custom' ? parseRaw(raw) : name);\n};\n\nvar prettyType = function prettyType(_ref3) {\n  var required = _ref3.required,\n      name = _ref3.name,\n      raw = _ref3.raw;\n  return \"\".concat(printName({\n    name: name,\n    raw: raw\n  })).concat(required ? '!' : '').replace(/!!$/, '!');\n};\n\nvar Shape = function Shape(_ref4) {\n  var type = _ref4.type;\n  var entries = Object.entries(type);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, '{ ', entries.map(function (_ref5, index) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        propName = _ref6[0],\n        data = _ref6[1];\n\n    return React.createElement(\"span\", {\n      key: propName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, propName, \": \", prettyType(data), entries.length - 1 !== index ? ', ' : '');\n  }), ' }', type.required && '!');\n};\n\nvar Type = function Type(args) {\n  console.dir(args.type);\n  var type = args.type;\n\n  if (type.name === 'arrayOf') {\n    return React.createElement(ArrayOf, {\n      type: type.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n  if (type.name === 'shape') {\n    return React.createElement(Shape, {\n      type: type.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n  if (type.name) return prettyType(type);\n  return 'woot';\n};\n\nvar Prop = function Prop(_ref7) {\n  var name = _ref7.name,\n      data = _ref7.data;\n  return React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, name), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Type, {\n    type: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, data.default), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, data.description));\n};\n\nvar PropsTable = function PropsTable(_ref8) {\n  var props = _ref8.props;\n  return React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Property\")), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Type\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Default\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Description\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, Object.entries(props).map(function (_ref9) {\n    var _ref10 = _slicedToArray(_ref9, 2),\n        name = _ref10[0],\n        data = _ref10[1];\n\n    return React.createElement(Prop, {\n      key: name,\n      name: name,\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    });\n  })));\n};\n\nvar _default = function _default(_ref11) {\n  var children = _ref11.children,\n      Component = _ref11.of;\n  if (!Component) return 'No component';\n  return React.createElement(PropsTable, {\n    props: Component.propTypes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  });\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ArrayOf, \"ArrayOf\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js\");\n  reactHotLoader.register(capitalize, \"capitalize\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js\");\n  reactHotLoader.register(parseRaw, \"parseRaw\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js\");\n  reactHotLoader.register(printName, \"printName\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js\");\n  reactHotLoader.register(prettyType, \"prettyType\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js\");\n  reactHotLoader.register(Shape, \"Shape\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js\");\n  reactHotLoader.register(Type, \"Type\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js\");\n  reactHotLoader.register(Prop, \"Prop\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js\");\n  reactHotLoader.register(PropsTable, \"PropsTable\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/PropsTable.js"],"names":["React","Table","TableBody","TableHead","TableRow","TableCell","ArrayOf","type","capitalize","string","charAt","toUpperCase","slice","toLowerCase","parseRaw","raw","replace","printName","name","required","prettyType","Shape","entries","Object","map","index","propName","data","length","Type","args","console","dir","value","Prop","default","description","PropsTable","props","children","Component","of","propTypes"],"mappings":"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","sourcesContent":["// @source https://gist.github.com/albinekb/f59feb84273279d1d45f603aee8eb496\n\nimport * as React from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst ArrayOf = ({ type }) => (\n  <React.Fragment>\n    <span>[</span>\n    <Type type={type} />\n    <span>]</span>\n  </React.Fragment>\n)\n\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()\nconst parseRaw = raw => raw.replace(/Type$/, '').replace(/Type.isRequired$/, '!')\nconst printName = ({ name, raw, required }) => capitalize(raw && name === 'custom' ? parseRaw(raw) : name)\n\nconst prettyType = ({ required, name, raw }) => `${printName({ name, raw })}${required ? '!' : ''}`.replace(/!!$/, '!')\n\nconst Shape = ({ type }) => {\n  const entries = Object.entries(type)\n  return (\n    <React.Fragment>\n      {'{ '}\n      {entries.map(([propName, data], index) => (\n        <span key={propName}>\n          {propName}: {prettyType(data)}\n          {entries.length - 1 !== index ? ', ' : ''}\n        </span>\n      ))}\n      {' }'}\n      {type.required && '!'}\n    </React.Fragment>\n  )\n}\n\nconst Type = (args) => {\n  console.dir(args.type);\n\n\n  const { type } = args;\n\n  if (type.name === 'arrayOf') {\n    return <ArrayOf type={type.value} />\n  }\n  if (type.name === 'shape') {\n    return <Shape type={type.value} />\n  }\n  if (type.name) return prettyType(type)\n  return 'woot'\n}\n\nconst Prop = ({ name, data }) => (\n  <TableRow>\n    <TableCell>{name}</TableCell>\n    <TableCell>\n      <pre>\n        <Type type={data} />\n      </pre>\n    </TableCell>\n    <TableCell>{data.default}</TableCell>\n    <TableCell>{data.description}</TableCell>\n  </TableRow>\n)\n\nconst PropsTable = ({ props }) => (\n  <Table>\n    <TableHead>\n      <TableRow>\n        <TableCell>\n          <b>Property</b>\n        </TableCell>\n        <TableCell>Type</TableCell>\n        <TableCell>Default</TableCell>\n        <TableCell>Description</TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>{Object.entries(props).map(([name, data]) => <Prop key={name} name={name} data={data} />)}</TableBody>\n  </Table>\n)\n\nexport default ({ children, of: Component }) => {\n  if (!Component) return 'No component'\n  return <PropsTable props={Component.propTypes} />\n}"]}]}