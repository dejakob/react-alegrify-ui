{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/dialog.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/dialog.js","mtime":1559775989441},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559770457280}],"contextDependencies":[],"result":["import React from'react';import{attachUniversalProps}from'./helpers/universal-props';/**\n * <Dialog />\n * \n * ```jsx\n * <Dialog\n *   open={true}\n * >\n *   Some dialog content\n * </Dialog>\n * ```\n */function Dialog(props){var classNames=['alegrify-dialog'];if(props.className){classNames.push(props.className);}return React.createElement(\"div\",{className:\"alegrify-dialog__wrapper\",open:props.open},React.createElement(\"dialog\",{className:classNames.join(' ')},React.createElement(\"div\",{className:\"alegrify-dialog__content\"},props.children)));}Dialog.defaultProps={open:false};Dialog.propExamples={children:'Add some content here',className:'',open:true};export default attachUniversalProps(Dialog);Dialog.__docgenInfo={\"description\":\"<Dialog />\\n\\n```jsx\\n<Dialog\\n  open={true}\\n>\\n  Some dialog content\\n</Dialog>\\n```\",\"methods\":[],\"displayName\":\"Dialog\",\"props\":{\"open\":{\"defaultValue\":{\"value\":\"false\",\"computed\":false},\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Should the dialog be shown?\"},\"children\":{\"type\":{\"name\":\"union\",\"value\":[{\"name\":\"arrayOf\",\"value\":{\"name\":\"node\"}},{\"name\":\"node\"}]},\"required\":true,\"description\":\"Content\"},\"className\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Additional classnames\"}}};",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/dialog.js"],"names":["React","attachUniversalProps","Dialog","props","classNames","className","push","open","join","children","defaultProps","propExamples"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,oBAAT,KAAqC,2BAArC,CAEA;;;;;;;;;;GAWA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACnB,GAAMC,CAAAA,UAAU,CAAG,CAAC,iBAAD,CAAnB,CAEA,GAAID,KAAK,CAACE,SAAV,CAAqB,CACjBD,UAAU,CAACE,IAAX,CAAgBH,KAAK,CAACE,SAAtB,EACH,CAED,MACI,4BACI,SAAS,CAAC,0BADd,CAEI,IAAI,CAAEF,KAAK,CAACI,IAFhB,EAII,8BACI,SAAS,CAAEH,UAAU,CAACI,IAAX,CAAgB,GAAhB,CADf,EAGI,2BACI,SAAS,CAAC,0BADd,EAGKL,KAAK,CAACM,QAHX,CAHJ,CAJJ,CADJ,CAgBH,CAsBDP,MAAM,CAACQ,YAAP,CAAsB,CAClBH,IAAI,CAAE,KADY,CAAtB,CAGAL,MAAM,CAACS,YAAP,CAAsB,CAClBF,QAAQ,CAAE,uBADQ,CAElBJ,SAAS,CAAE,EAFO,CAGlBE,IAAI,CAAE,IAHY,CAAtB,CAMA,cAAeN,CAAAA,oBAAoB,CAACC,MAAD,CAAnC,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n\n/**\n * <Dialog />\n * \n * ```jsx\n * <Dialog\n *   open={true}\n * >\n *   Some dialog content\n * </Dialog>\n * ```\n */\nfunction Dialog(props) {\n    const classNames = ['alegrify-dialog'];\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    return (\n        <div\n            className=\"alegrify-dialog__wrapper\"\n            open={props.open}    \n        >\n            <dialog\n                className={classNames.join(' ')}\n            >\n                <div\n                    className=\"alegrify-dialog__content\"\n                >\n                    {props.children}\n                </div>\n            </dialog>\n        </div>\n    );\n}\n\nDialog.propTypes = {\n\n    /**\n     * Content\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * Should the dialog be shown?\n     */\n    open: PropTypes.bool\n};\nDialog.defaultProps = {\n    open: false\n};\nDialog.propExamples = {\n    children: 'Add some content here',\n    className: '',\n    open: true\n};\n\nexport default attachUniversalProps(Dialog);\n"]}]}