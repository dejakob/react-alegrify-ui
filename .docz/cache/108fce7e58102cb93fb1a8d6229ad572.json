{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid.js","mtime":1540409545632},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1551376331885}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport WeekScheduleViewDays from './view-days';\nimport WeekScheduleViewWeekGridBody from './view-week-grid-body';\nimport { isTouchDevice } from '../helpers/device';\n/**\n * <WeekScheduleViewWeekGrid />\n */\n\nfunction WeekScheduleViewWeekGrid(props) {\n  return React.createElement(\"table\", {\n    className: \"alegrify-week-schedule__table\",\n    onDoubleClick: props.onDoubleClick,\n    onClick: isTouchDevice() ? props.onDoubleClick : null,\n    ref: props.tableRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(WeekScheduleViewDays, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(WeekScheduleViewWeekGridBody, {\n    cellsPerTimeLabel: props.cellsPerTimeLabel,\n    cellHeight: props.cellHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n}\n\nWeekScheduleViewWeekGrid.propTypes = {\n  onDoubleClick: PropTypes.func,\n  cellsPerTimeLabel: PropTypes.number,\n  cellHeight: PropTypes.number,\n  tableRef: PropTypes.func\n};\nvar _default = WeekScheduleViewWeekGrid;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(WeekScheduleViewWeekGrid, \"WeekScheduleViewWeekGrid\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nWeekScheduleViewWeekGrid.__docgenInfo = {\n  \"description\": \"<WeekScheduleViewWeekGrid />\",\n  \"methods\": [],\n  \"displayName\": \"WeekScheduleViewWeekGrid\",\n  \"props\": {\n    \"onDoubleClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"cellsPerTimeLabel\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"cellHeight\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tableRef\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/week-schedule/view-week-grid.js"],"names":["React","PropTypes","WeekScheduleViewDays","WeekScheduleViewWeekGridBody","isTouchDevice","WeekScheduleViewWeekGrid","props","onDoubleClick","tableRef","cellsPerTimeLabel","cellHeight","propTypes","func","number"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,oBAAP,MAAiC,aAAjC;AACA,OAAOC,4BAAP,MAAyC,uBAAzC;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AAEA;;;;AAGA,SAASC,wBAAT,CAAkCC,KAAlC,EAAyC;AACrC,SACI;AACI,IAAA,SAAS,EAAC,+BADd;AAEI,IAAA,aAAa,EAAEA,KAAK,CAACC,aAFzB;AAGI,IAAA,OAAO,EAAEH,aAAa,KAAKE,KAAK,CAACC,aAAX,GAA2B,IAHrD;AAII,IAAA,GAAG,EAAED,KAAK,CAACE,QAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,4BAAD;AACI,IAAA,iBAAiB,EAAEF,KAAK,CAACG,iBAD7B;AAEI,IAAA,UAAU,EAAEH,KAAK,CAACI,UAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAcH;;AAEDL,wBAAwB,CAACM,SAAzB,GAAqC;AACjCJ,EAAAA,aAAa,EAAEN,SAAS,CAACW,IADQ;AAEjCH,EAAAA,iBAAiB,EAAER,SAAS,CAACY,MAFI;AAGjCH,EAAAA,UAAU,EAAET,SAAS,CAACY,MAHW;AAIjCL,EAAAA,QAAQ,EAAEP,SAAS,CAACW;AAJa,CAArC;eAOeP,wB;AAAf;;;;;;;;;;0BAxBSA,wB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport WeekScheduleViewDays from './view-days';\nimport WeekScheduleViewWeekGridBody from './view-week-grid-body';\n\nimport { isTouchDevice } from '../helpers/device';\n\n/**\n * <WeekScheduleViewWeekGrid />\n */\nfunction WeekScheduleViewWeekGrid(props) {\n    return (\n        <table\n            className=\"alegrify-week-schedule__table\"\n            onDoubleClick={props.onDoubleClick}\n            onClick={isTouchDevice() ? props.onDoubleClick : null}\n            ref={props.tableRef}\n        >\n            <WeekScheduleViewDays />\n            <WeekScheduleViewWeekGridBody\n                cellsPerTimeLabel={props.cellsPerTimeLabel}\n                cellHeight={props.cellHeight}\n            />\n        </table>\n    );\n}\n\nWeekScheduleViewWeekGrid.propTypes = {\n    onDoubleClick: PropTypes.func,\n    cellsPerTimeLabel: PropTypes.number,\n    cellHeight: PropTypes.number,\n    tableRef: PropTypes.func\n};\n\nexport default WeekScheduleViewWeekGrid;\n"]}]}