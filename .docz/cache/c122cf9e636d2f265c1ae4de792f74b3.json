{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/build/number-input.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/build/number-input.js","mtime":1551899458083},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1551376331885}],"contextDependencies":[],"result":["'use strict';\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _inputWithState = require('./abstract/input-with-state');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * <NumberInput />\n * \n * ```jsx\n * <NumberInput\n *   id=\"number_input\"\n *   name=\"number_input\"\n *   min={1}\n *   value={6}\n *   max={10}\n * />\n * ```\n */\n\n\nfunction NumberInput(props) {\n  var classNames = ['alegrify-number-input'];\n  var min = props.min || 0;\n  var max = props.max || 10;\n  var value = Math.max(Math.min(max, props.value), min);\n\n  if (props.className) {\n    classNames.push(props.className);\n  }\n\n  if (props.wide) {\n    classNames.push('alegrify-number-input--wide');\n  }\n\n  if (props.full) {\n    classNames.push('alegrify-number-input--full');\n  }\n\n  return _react2.default.createElement('label', {\n    htmlFor: props.id,\n    className: classNames.join(' ')\n  }, _react2.default.createElement('button', {\n    className: 'alegrify-number-input__add',\n    tabIndex: '-1',\n    onClick: up\n  }, _react2.default.createElement('span', null, '+')), _react2.default.createElement('input', {\n    type: 'text',\n    id: props.id,\n    name: props.name,\n    className: 'alegrify-number-input__input',\n    value: value,\n    disabled: props.disabled,\n    onInput: onInput,\n    onKeyUp: onKeyUp,\n    onKeyDown: props.onKeyDown,\n    onFocus: props.onFocus,\n    onBlur: props.onBlur,\n    autoComplete: 'off'\n  }), _react2.default.createElement('button', {\n    className: 'alegrify-number-input__subtract',\n    tabIndex: '-1',\n    onClick: down\n  }, _react2.default.createElement('span', null, '-')));\n\n  function onInput(eventData) {\n    var value = eventData.target.value;\n    var number = Number(value);\n\n    if (isNaN(number)) {\n      props.changeValue(0);\n    } else if (number < min) {\n      props.changeValue(min);\n    } else if (number > max) {\n      props.changeValue(max);\n    } else {\n      props.changeValue(number);\n    }\n  }\n\n  function onKeyUp(eventData) {\n    switch (eventData.keyCode) {\n      case 38:\n        eventData.preventDefault();\n        up();\n        break;\n\n      case 40:\n        eventData.preventDefault();\n        down();\n        break;\n    }\n\n    if (typeof props.onKeyUp === 'function') {\n      props.onKeyUp(eventData);\n    }\n  }\n\n  function up() {\n    props.changeValue(Math.min(max, (props.value || 0) + 1));\n  }\n\n  function down() {\n    props.changeValue(Math.max(min, (props.value || 0) - 1));\n  }\n}\n\nNumberInput.propTypes = {\n  /**\n   * Additional classnames\n   */\n  className: _propTypes2.default.string,\n\n  /**\n   * Input id\n   */\n  id: _propTypes2.default.string.isRequired,\n\n  /**\n   * Input name\n   */\n  name: _propTypes2.default.string.isRequired,\n\n  /**\n   * Input value, must be a number\n   */\n  value: _propTypes2.default.number,\n\n  /**\n   * Is input disabled?\n   */\n  disabled: _propTypes2.default.bool,\n\n  /**\n   * Is this a wide variant?\n   */\n  wide: _propTypes2.default.bool,\n\n  /**\n   * 100% width?\n   */\n  full: _propTypes2.default.bool,\n\n  /**\n   * Min value\n   */\n  min: _propTypes2.default.number,\n\n  /**\n   * Max value\n   */\n  max: _propTypes2.default.number,\n\n  /**\n   * On value change, param: number value\n   */\n  onValueChange: _propTypes2.default.func\n};\nNumberInput.defaultProps = {\n  min: 0,\n  max: 10,\n  value: 0,\n  wide: false,\n  full: false,\n  disabled: false\n};\nNumberInput.propExamples = {\n  className: '',\n  id: 'number_input',\n  name: 'number_input',\n  value: 6,\n  disabled: false,\n  wide: false,\n  full: false,\n  min: 1,\n  max: 10\n};\nexports.default = (0, _inputWithState.wrapWithInputState)(NumberInput);\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_react2, \"_react2\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/build/number-input.js\");\n  reactHotLoader.register(_propTypes2, \"_propTypes2\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/build/number-input.js\");\n  reactHotLoader.register(_interopRequireDefault, \"_interopRequireDefault\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/build/number-input.js\");\n  reactHotLoader.register(NumberInput, \"NumberInput\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/build/number-input.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/build/number-input.js"],"names":["Object","defineProperty","exports","value","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","_inputWithState","obj","__esModule","default","NumberInput","props","classNames","min","max","Math","className","push","wide","full","createElement","htmlFor","id","join","tabIndex","onClick","up","type","name","disabled","onInput","onKeyUp","onKeyDown","onFocus","onBlur","autoComplete","down","eventData","target","number","Number","isNaN","changeValue","keyCode","preventDefault","propTypes","string","isRequired","bool","onValueChange","func","defaultProps","propExamples","wrapWithInputState"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _inputWithState = require('./abstract/input-with-state');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * <NumberInput />\n * \n * ```jsx\n * <NumberInput\n *   id=\"number_input\"\n *   name=\"number_input\"\n *   min={1}\n *   value={6}\n *   max={10}\n * />\n * ```\n */\nfunction NumberInput(props) {\n    var classNames = ['alegrify-number-input'];\n    var min = props.min || 0;\n    var max = props.max || 10;\n    var value = Math.max(Math.min(max, props.value), min);\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    if (props.wide) {\n        classNames.push('alegrify-number-input--wide');\n    }\n\n    if (props.full) {\n        classNames.push('alegrify-number-input--full');\n    }\n\n    return _react2.default.createElement(\n        'label',\n        {\n            htmlFor: props.id,\n            className: classNames.join(' ')\n        },\n        _react2.default.createElement(\n            'button',\n            {\n                className: 'alegrify-number-input__add',\n                tabIndex: '-1',\n                onClick: up\n            },\n            _react2.default.createElement(\n                'span',\n                null,\n                '+'\n            )\n        ),\n        _react2.default.createElement('input', {\n            type: 'text',\n            id: props.id,\n            name: props.name,\n            className: 'alegrify-number-input__input',\n            value: value,\n            disabled: props.disabled,\n            onInput: onInput,\n            onKeyUp: onKeyUp,\n            onKeyDown: props.onKeyDown,\n            onFocus: props.onFocus,\n            onBlur: props.onBlur,\n            autoComplete: 'off'\n        }),\n        _react2.default.createElement(\n            'button',\n            {\n                className: 'alegrify-number-input__subtract',\n                tabIndex: '-1',\n                onClick: down\n            },\n            _react2.default.createElement(\n                'span',\n                null,\n                '-'\n            )\n        )\n    );\n\n    function onInput(eventData) {\n        var value = eventData.target.value;\n\n        var number = Number(value);\n\n        if (isNaN(number)) {\n            props.changeValue(0);\n        } else if (number < min) {\n            props.changeValue(min);\n        } else if (number > max) {\n            props.changeValue(max);\n        } else {\n            props.changeValue(number);\n        }\n    }\n\n    function onKeyUp(eventData) {\n        switch (eventData.keyCode) {\n            case 38:\n                eventData.preventDefault();\n                up();\n                break;\n\n            case 40:\n                eventData.preventDefault();\n                down();\n                break;\n        }\n\n        if (typeof props.onKeyUp === 'function') {\n            props.onKeyUp(eventData);\n        }\n    }\n\n    function up() {\n        props.changeValue(Math.min(max, (props.value || 0) + 1));\n    }\n\n    function down() {\n        props.changeValue(Math.max(min, (props.value || 0) - 1));\n    }\n}\n\nNumberInput.propTypes = {\n\n    /**\n     * Additional classnames\n     */\n    className: _propTypes2.default.string,\n\n    /**\n     * Input id\n     */\n    id: _propTypes2.default.string.isRequired,\n\n    /**\n     * Input name\n     */\n    name: _propTypes2.default.string.isRequired,\n\n    /**\n     * Input value, must be a number\n     */\n    value: _propTypes2.default.number,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: _propTypes2.default.bool,\n\n    /**\n     * Is this a wide variant?\n     */\n    wide: _propTypes2.default.bool,\n\n    /**\n     * 100% width?\n     */\n    full: _propTypes2.default.bool,\n\n    /**\n     * Min value\n     */\n    min: _propTypes2.default.number,\n\n    /**\n     * Max value\n     */\n    max: _propTypes2.default.number,\n\n    /**\n     * On value change, param: number value\n     */\n    onValueChange: _propTypes2.default.func\n};\nNumberInput.defaultProps = {\n    min: 0,\n    max: 10,\n    value: 0,\n    wide: false,\n    full: false,\n    disabled: false\n};\nNumberInput.propExamples = {\n    className: '',\n    id: 'number_input',\n    name: 'number_input',\n    value: 6,\n    disabled: false,\n    wide: false,\n    full: false,\n    min: 1,\n    max: 10\n};\n\nexports.default = (0, _inputWithState.wrapWithInputState)(NumberInput);"]}]}