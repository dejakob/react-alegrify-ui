{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/input.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/input.js","mtime":1552133491205},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1551376331885}],"contextDependencies":[],"result":["import React from'react';import PropTypes from'prop-types';import{wrapWithInputState}from'./abstract/input-with-state';/**\n * <Input />\n * \n * ```jsx\n * <Input\n *   id=\"my_input\"\n *   name=\"my_input\"\n *   multiline={true}\n *   value=\"default value\"\n * />\n * ```\n */function Input(props){return wrapWithInputState(InputView)(props);}function InputView(props){var classNames=['alegrify-input'];if(props.className){classNames.push(props.className);}if(props.full){classNames.push('alegrify-input--full');}if(props.multiline){var amountOfLines=((props.value||'').match(/\\n/gi)||[]).length+1;return React.createElement(\"textarea\",{id:props.id,name:props.name,className:classNames.join(' '),placeholder:props.placeholder||'',onInput:onInput,onKeyUp:props.onKeyUp,onKeyDown:props.onKeyDown,onFocus:props.onFocus,onBlur:props.onBlur,rows:amountOfLines,value:props.value,disabled:props.disabled});}return React.createElement(\"input\",{id:props.id,name:props.name,type:props.type||'text',className:classNames.join(' '),placeholder:props.placeholder||'',value:props.value,disabled:props.disabled,onInput:onInput,onKeyUp:props.onKeyUp,onKeyDown:props.onKeyDown,onFocus:props.onFocus,onBlur:props.onBlur});function onInput(eventData){var value=eventData.target.value;props.changeValue(value);}}Input.propTypes={/**\n     * Value to show in the input\n     */value:PropTypes.string.isRequired,/**\n     * Additional classnames\n     */className:PropTypes.string,/**\n     * Input type\n     */type:PropTypes.string,/**\n     * Input placeholder\n     */placeholder:PropTypes.string,/**\n     * 100% width?\n     */full:PropTypes.bool,/**\n     * Use textarea instead of input\n     */multiline:PropTypes.bool,/**\n     * Disable input\n     */disabled:PropTypes.bool,/**\n     * Input id\n     */id:PropTypes.string.isRequired,/**\n     * Input name\n     */name:PropTypes.string.isRequired,/**\n     * On value change method (passes value)\n     */onValueChange:PropTypes.func,/**\n     * Native onKeyUp event\n     */onKeyUp:PropTypes.func,/**\n     * Native onKeyDown event\n     */onKeyDown:PropTypes.func,/**\n     * Native onFocus event\n     */onFocus:PropTypes.func,/**\n     * Native onBlur event\n     */onBlur:PropTypes.func};Input.defaultProps={type:'text'};Input.propExamples={value:'default value',className:'',type:'text',placeholder:'Placeholder text',full:false,multiline:false,id:'input',name:'input'};export default Input;",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/input.js"],"names":["React","PropTypes","wrapWithInputState","Input","props","InputView","classNames","className","push","full","multiline","amountOfLines","value","match","length","id","name","join","placeholder","onInput","onKeyUp","onKeyDown","onFocus","onBlur","disabled","type","eventData","target","changeValue","propTypes","string","isRequired","bool","onValueChange","func","defaultProps","propExamples"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { wrapWithInputState } from './abstract/input-with-state';\n\n/**\n * <Input />\n * \n * ```jsx\n * <Input\n *   id=\"my_input\"\n *   name=\"my_input\"\n *   multiline={true}\n *   value=\"default value\"\n * />\n * ```\n */\nfunction Input(props) {\n    return wrapWithInputState(InputView)(props);\n}\n\nfunction InputView(props) {\n    const classNames = ['alegrify-input'];\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    if (props.full) {\n        classNames.push('alegrify-input--full');\n    }\n\n    if (props.multiline) {\n        const amountOfLines = ((props.value || '').match(/\\n/gi) || []).length + 1;\n\n        return (\n            <textarea\n                id={props.id}\n                name={props.name}\n                className={classNames.join(' ')}\n                placeholder={props.placeholder || ''}\n                onInput={onInput}\n                onKeyUp={props.onKeyUp}\n                onKeyDown={props.onKeyDown}\n                onFocus={props.onFocus}\n                onBlur={props.onBlur}\n                rows={amountOfLines}\n                value={props.value}\n                disabled={props.disabled}\n            />\n        );\n    }\n\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            type={props.type || 'text'}\n            className={classNames.join(' ')}\n            placeholder={props.placeholder || ''}\n            value={props.value}\n            disabled={props.disabled}\n            onInput={onInput}\n            onKeyUp={props.onKeyUp}\n            onKeyDown={props.onKeyDown}\n            onFocus={props.onFocus}\n            onBlur={props.onBlur}\n        />\n    );\n\n    function onInput(eventData) {\n        const { value } = eventData.target;\n\n        props.changeValue(value);\n    }\n}\n\nInput.propTypes = {\n\n    /**\n     * Value to show in the input\n     */\n    value: PropTypes.string.isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * Input type\n     */\n    type: PropTypes.string,\n\n    /**\n     * Input placeholder\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * 100% width?\n     */\n    full: PropTypes.bool,\n\n    /**\n     * Use textarea instead of input\n     */\n    multiline: PropTypes.bool,\n\n    /**\n     * Disable input\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Input id\n     */\n    id: PropTypes.string.isRequired,\n\n    /**\n     * Input name\n     */\n    name: PropTypes.string.isRequired,\n\n    /**\n     * On value change method (passes value)\n     */\n    onValueChange: PropTypes.func,\n\n    /**\n     * Native onKeyUp event\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * Native onKeyDown event\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * Native onFocus event\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Native onBlur event\n     */\n    onBlur: PropTypes.func\n};\nInput.defaultProps = {\n    type: 'text'\n};\nInput.propExamples = {\n    value: 'default value',\n    className: '',\n    type: 'text',\n    placeholder: 'Placeholder text',\n    full: false,\n    multiline: false,\n    id: 'input',\n    name: 'input'\n};\n\nexport default Input;\n"]}]}