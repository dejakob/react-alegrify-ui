{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/status-input.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/status-input.js","mtime":1551954664872},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1551376331885}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/status-input.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport Button from './button';\nimport PropTypes from 'prop-types';\n/**\n * <StatusInput />\n * \n * ```jsx\n * <StatusInput\n * \n * />\n * ```\n */\n\nvar StatusInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StatusInput, _Component);\n\n  function StatusInput() {\n    var _this;\n\n    _classCallCheck(this, StatusInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatusInput).call(this));\n    _this.handleValueChange = _this.handleValueChange.bind(_assertThisInitialized(_this));\n    _this.handleFocus = _this.handleFocus.bind(_assertThisInitialized(_this));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(StatusInput, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        value: this.props.value || ''\n      });\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      this.setState({\n        className: \"\".concat(this.props.className, \" alegrify-status-input--focus\")\n      });\n\n      if (typeof this.props.onFocus === 'function') {\n        this.props.onFocus();\n      }\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this.setState({\n        className: this.props.className\n      });\n\n      if (typeof this.props.onFocus === 'function') {\n        this.props.onBlur();\n      }\n    }\n  }, {\n    key: \"handleValueChange\",\n    value: function handleValueChange(eventData) {\n      var value = eventData.target.value;\n      this.setState({\n        value: value\n      });\n\n      if (typeof this.props.onValueChange === 'function') {\n        this.props.onValueChange(value);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return StatusInputView(Object.assign({}, this, this.props, this.state));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return StatusInput;\n}(Component);\n/**\n * <StatusInputView />\n * @param {Object} props \n */\n\n\nfunction StatusInputView(props) {\n  var classNames = ['alegrify-status-input'];\n\n  if (typeof props.className === 'string') {\n    classNames.push(props.className);\n  }\n\n  var amountOfLines = (props.value.match(/\\n/gi) || []).length + 1;\n  return React.createElement(\"form\", {\n    className: classNames.join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: \"alegrify-status-input__textarea\",\n    placeholder: props.placeholder,\n    name: props.name,\n    id: props.id,\n    rows: amountOfLines,\n    onInput: props.handleValueChange,\n    onFocus: props.handleFocus,\n    onBlur: props.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"alegrify-status-input__submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Button, {\n    primary: true,\n    small: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, props.submitLabel || 'Submit')), React.createElement(\"ul\", {\n    className: \"alegrify-status-input__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, props.actions && props.actions.map(function (action, index) {\n    return React.createElement(StatusInputAction, {\n      key: index,\n      icon: action.icon,\n      label: action.label,\n      onClick: action.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    });\n  })));\n}\n/**\n * <StatusInputAction />\n * @param {Object} props \n */\n\n\nfunction StatusInputAction(props) {\n  return React.createElement(\"li\", {\n    className: \"alegrify-status-input__action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"alegrify-status-input__action-button\",\n    \"data-icon\": props.icon,\n    type: \"button\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"alegrify-status-input__action-button-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, props.label)));\n}\n\nStatusInput.propTypes = {\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  submitLabel: PropTypes.string,\n  onValueChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  actions: PropTypes.arrayOf(PropTypes.shape({\n    icon: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func\n  }))\n};\nStatusInput.propExamples = {\n  className: '',\n  placeholder: 'Share your thoughts',\n  actions: [{\n    label: 'picture',\n    icon: 'camera_alt'\n  }, {\n    label: 'music',\n    icon: 'audiotrack'\n  }, {\n    label: 'file',\n    icon: 'attach_file'\n  }]\n};\nvar _default = StatusInput;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(StatusInput, \"StatusInput\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/status-input.js\");\n  reactHotLoader.register(StatusInputView, \"StatusInputView\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/status-input.js\");\n  reactHotLoader.register(StatusInputAction, \"StatusInputAction\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/status-input.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/status-input.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nStatusInput.__docgenInfo = {\n  \"description\": \"<StatusInput />\\n\\n```jsx\\n<StatusInput\\n\\n/>\\n```\",\n  \"methods\": [{\n    \"name\": \"handleFocus\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"handleBlur\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"handleValueChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"eventData\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"StatusInput\",\n  \"props\": {\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"submitLabel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onValueChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onFocus\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onBlur\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"actions\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"icon\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"onClick\": {\n              \"name\": \"func\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/status-input.js"],"names":["React","Component","Button","PropTypes","StatusInput","handleValueChange","bind","handleFocus","handleBlur","setState","value","props","className","onFocus","onBlur","eventData","target","onValueChange","StatusInputView","Object","assign","state","classNames","push","amountOfLines","match","length","join","placeholder","name","id","submitLabel","actions","map","action","index","icon","label","onClick","StatusInputAction","propTypes","string","isRequired","func","arrayOf","shape","propExamples"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from './button';\nimport PropTypes from 'prop-types';\n\n/**\n * <StatusInput />\n * \n * ```jsx\n * <StatusInput\n * \n * />\n * ```\n */\nclass StatusInput extends Component {\n    constructor() {\n        super();\n\n        this.handleValueChange = this.handleValueChange.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n    }\n\n    componentWillMount() {\n        this.setState({ value: this.props.value || '' });\n    }\n\n    handleFocus() {\n        this.setState({ className: `${this.props.className} alegrify-status-input--focus` });\n\n        if (typeof this.props.onFocus === 'function') {\n            this.props.onFocus();\n        }\n    }\n\n    handleBlur() {\n        this.setState({ className: this.props.className });\n\n        if (typeof this.props.onFocus === 'function') {\n            this.props.onBlur();\n        }\n    }\n\n    handleValueChange(eventData) {\n        var { value } = eventData.target;\n\n        this.setState({ value });\n\n        if (typeof this.props.onValueChange === 'function') {\n            this.props.onValueChange(value);\n        }\n    }\n\n    render() {\n        return StatusInputView(Object.assign({}, this, this.props, this.state));\n    }\n}\n\n/**\n * <StatusInputView />\n * @param {Object} props \n */\nfunction StatusInputView(props) {\n    const classNames = ['alegrify-status-input'];\n\n    if (typeof props.className === 'string') {\n        classNames.push(props.className);\n    }\n\n    const amountOfLines = (props.value.match(/\\n/gi) || []).length + 1;\n    \n    return (\n        <form\n            className={classNames.join(' ')}\n        >\n            <textarea\n                className=\"alegrify-status-input__textarea\"\n                placeholder={props.placeholder}\n                name={props.name}\n                id={props.id}\n                rows={amountOfLines}\n                onInput={props.handleValueChange}\n                onFocus={props.handleFocus}\n                onBlur={props.handleBlur}\n            ></textarea>\n            <div\n                className=\"alegrify-status-input__submit\"\n            >\n                <Button\n                    primary\n                    small\n                >\n                    {props.submitLabel || 'Submit'}\n                </Button>\n            </div>\n            <ul\n                className=\"alegrify-status-input__actions\"\n            >\n                {props.actions && props.actions.map((action, index) =>\n                    <StatusInputAction\n                        key={index}\n                        icon={action.icon}\n                        label={action.label}\n                        onClick={action.onClick}\n                    />\n                )}\n            </ul>\n        </form>\n    )\n}\n\n/**\n * <StatusInputAction />\n * @param {Object} props \n */\nfunction StatusInputAction(props) {\n    return (\n        <li\n            className=\"alegrify-status-input__action\"\n        >\n            <button\n                className=\"alegrify-status-input__action-button\"\n                data-icon={props.icon}\n                type=\"button\"\n                onClick={props.onClick}\n            >\n                <span\n                    className=\"alegrify-status-input__action-button-label\"\n                >\n                    {props.label}    \n                </span>\n            </button>\n        </li>\n    );\n}\n\nStatusInput.propTypes = {\n    className: PropTypes.string,\n    placeholder: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    submitLabel: PropTypes.string,\n\n    onValueChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n\n    actions: PropTypes.arrayOf(\n        PropTypes.shape({\n            icon: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            onClick: PropTypes.func\n        })\n    )\n};\nStatusInput.propExamples = {\n    className: '',\n    placeholder: 'Share your thoughts',\n    actions: [\n        { label: 'picture', icon: 'camera_alt' },\n        { label: 'music', icon: 'audiotrack' },\n        { label: 'file', icon: 'attach_file' }\n    ]\n};\n\nexport default StatusInput;\n"]}]}