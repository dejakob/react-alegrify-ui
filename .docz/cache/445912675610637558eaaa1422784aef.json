{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/input.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/input.js","mtime":1559767783189},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1559771649804},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/thread-loader/dist/cjs.js","mtime":1559771650461},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559770457280},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js","mtime":1551899789434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvamFrb2JrZXJraG92ZS9hbGVncmlmeS9yZWFjdC1hbGVncmlmeS11aS9saWIvaW5wdXQuanMiOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJzsKaW1wb3J0IHsgd3JhcFdpdGhJbnB1dFN0YXRlIH0gZnJvbSAnLi9hYnN0cmFjdC9pbnB1dC13aXRoLXN0YXRlJzsKaW1wb3J0IHsgYXR0YWNoVW5pdmVyc2FsUHJvcHMgfSBmcm9tICcuL2hlbHBlcnMvdW5pdmVyc2FsLXByb3BzJzsKLyoqCiAqIDxJbnB1dCAvPgogKiAKICogYGBganN4CiAqIDxJbnB1dAogKiAgIGlkPSJteV9pbnB1dCIKICogICBuYW1lPSJteV9pbnB1dCIKICogICBtdWx0aWxpbmU9e3RydWV9CiAqICAgdmFsdWU9ImRlZmF1bHQgdmFsdWUiCiAqIC8+CiAqIGBgYAogKi8KCmZ1bmN0aW9uIElucHV0KHByb3BzKSB7CiAgcmV0dXJuIHdyYXBXaXRoSW5wdXRTdGF0ZShJbnB1dFZpZXcpKHByb3BzKTsKfQoKZnVuY3Rpb24gSW5wdXRWaWV3KHByb3BzKSB7CiAgdmFyIGNsYXNzTmFtZXMgPSBbJ2FsZWdyaWZ5LWlucHV0J107CgogIGlmIChwcm9wcy5jbGFzc05hbWUpIHsKICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpOwogIH0KCiAgaWYgKHByb3BzLmZ1bGwpIHsKICAgIGNsYXNzTmFtZXMucHVzaCgnYWxlZ3JpZnktaW5wdXQtLWZ1bGwnKTsKICB9CgogIGlmIChwcm9wcy5tdWx0aWxpbmUpIHsKICAgIHZhciBhbW91bnRPZkxpbmVzID0gKChwcm9wcy52YWx1ZSB8fCAnJykubWF0Y2goL1xuL2dpKSB8fCBbXSkubGVuZ3RoICsgMTsKICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0ZXh0YXJlYSIsIHsKICAgICAgaWQ6IHByb3BzLmlkLAogICAgICBuYW1lOiBwcm9wcy5uYW1lLAogICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMuam9pbignICcpLAogICAgICBwbGFjZWhvbGRlcjogcHJvcHMucGxhY2Vob2xkZXIgfHwgJycsCiAgICAgIG9uSW5wdXQ6IG9uSW5wdXQsCiAgICAgIG9uS2V5VXA6IHByb3BzLm9uS2V5VXAsCiAgICAgIG9uS2V5RG93bjogcHJvcHMub25LZXlEb3duLAogICAgICBvbkZvY3VzOiBwcm9wcy5vbkZvY3VzLAogICAgICBvbkJsdXI6IHByb3BzLm9uQmx1ciwKICAgICAgcm93czogYW1vdW50T2ZMaW5lcywKICAgICAgdmFsdWU6IHByb3BzLnZhbHVlLAogICAgICBkaXNhYmxlZDogcHJvcHMuZGlzYWJsZWQsCiAgICAgIF9fc291cmNlOiB7CiAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICBsaW5lTnVtYmVyOiAzNwogICAgICB9LAogICAgICBfX3NlbGY6IHRoaXMKICAgIH0pOwogIH0KCiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImlucHV0IiwgewogICAgaWQ6IHByb3BzLmlkLAogICAgbmFtZTogcHJvcHMubmFtZSwKICAgIHR5cGU6IHByb3BzLnR5cGUgfHwgJ3RleHQnLAogICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzLmpvaW4oJyAnKSwKICAgIHBsYWNlaG9sZGVyOiBwcm9wcy5wbGFjZWhvbGRlciB8fCAnJywKICAgIHZhbHVlOiBwcm9wcy52YWx1ZSwKICAgIGRpc2FibGVkOiBwcm9wcy5kaXNhYmxlZCwKICAgIG9uSW5wdXQ6IG9uSW5wdXQsCiAgICBvbktleVVwOiBwcm9wcy5vbktleVVwLAogICAgb25LZXlEb3duOiBwcm9wcy5vbktleURvd24sCiAgICBvbkZvY3VzOiBwcm9wcy5vbkZvY3VzLAogICAgb25CbHVyOiBwcm9wcy5vbkJsdXIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1NQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pOwoKICBmdW5jdGlvbiBvbklucHV0KGV2ZW50RGF0YSkgewogICAgdmFyIHZhbHVlID0gZXZlbnREYXRhLnRhcmdldC52YWx1ZTsKICAgIHByb3BzLmNoYW5nZVZhbHVlKHZhbHVlKTsKICB9Cn0KCklucHV0LnByb3BUeXBlcyA9IHsKICAvKioKICAgKiBWYWx1ZSB0byBzaG93IGluIHRoZSBpbnB1dAogICAqLwogIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsCgogIC8qKgogICAqIEFkZGl0aW9uYWwgY2xhc3NuYW1lcwogICAqLwogIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZywKCiAgLyoqCiAgICogSW5wdXQgdHlwZQogICAqLwogIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsCgogIC8qKgogICAqIElucHV0IHBsYWNlaG9sZGVyCiAgICovCiAgcGxhY2Vob2xkZXI6IFByb3BUeXBlcy5zdHJpbmcsCgogIC8qKgogICAqIDEwMCUgd2lkdGg/CiAgICovCiAgZnVsbDogUHJvcFR5cGVzLmJvb2wsCgogIC8qKgogICAqIFVzZSB0ZXh0YXJlYSBpbnN0ZWFkIG9mIGlucHV0CiAgICovCiAgbXVsdGlsaW5lOiBQcm9wVHlwZXMuYm9vbCwKCiAgLyoqCiAgICogRGlzYWJsZSBpbnB1dAogICAqLwogIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCwKCiAgLyoqCiAgICogSW5wdXQgaWQKICAgKi8KICBpZDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLAoKICAvKioKICAgKiBJbnB1dCBuYW1lCiAgICovCiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLAoKICAvKioKICAgKiBPbiB2YWx1ZSBjaGFuZ2UgbWV0aG9kIChwYXNzZXMgdmFsdWUpCiAgICovCiAgb25WYWx1ZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsCgogIC8qKgogICAqIE5hdGl2ZSBvbktleVVwIGV2ZW50CiAgICovCiAgb25LZXlVcDogUHJvcFR5cGVzLmZ1bmMsCgogIC8qKgogICAqIE5hdGl2ZSBvbktleURvd24gZXZlbnQKICAgKi8KICBvbktleURvd246IFByb3BUeXBlcy5mdW5jLAoKICAvKioKICAgKiBOYXRpdmUgb25Gb2N1cyBldmVudAogICAqLwogIG9uRm9jdXM6IFByb3BUeXBlcy5mdW5jLAoKICAvKioKICAgKiBOYXRpdmUgb25CbHVyIGV2ZW50CiAgICovCiAgb25CbHVyOiBQcm9wVHlwZXMuZnVuYwp9OwpJbnB1dC5kZWZhdWx0UHJvcHMgPSB7CiAgdHlwZTogJ3RleHQnCn07CklucHV0LnByb3BFeGFtcGxlcyA9IHsKICB2YWx1ZTogJ2RlZmF1bHQgdmFsdWUnLAogIGNsYXNzTmFtZTogJycsCiAgdHlwZTogJ3RleHQnLAogIHBsYWNlaG9sZGVyOiAnUGxhY2Vob2xkZXIgdGV4dCcsCiAgZnVsbDogZmFsc2UsCiAgbXVsdGlsaW5lOiBmYWxzZSwKICBpZDogJ2lucHV0JywKICBuYW1lOiAnaW5wdXQnCn07Cgp2YXIgX2RlZmF1bHQgPSBhdHRhY2hVbml2ZXJzYWxQcm9wcyhJbnB1dCk7CgpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihJbnB1dCwgIklucHV0IiwgIi9Vc2Vycy9qYWtvYmtlcmtob3ZlL2FsZWdyaWZ5L3JlYWN0LWFsZWdyaWZ5LXVpL2xpYi9pbnB1dC5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKElucHV0VmlldywgIklucHV0VmlldyIsICIvVXNlcnMvamFrb2JrZXJraG92ZS9hbGVncmlmeS9yZWFjdC1hbGVncmlmeS11aS9saWIvaW5wdXQuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL1VzZXJzL2pha29ia2Vya2hvdmUvYWxlZ3JpZnkvcmVhY3QtYWxlZ3JpZnktdWkvbGliL2lucHV0LmpzIik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/input.js"],"names":["React","PropTypes","wrapWithInputState","attachUniversalProps","Input","props","InputView","classNames","className","push","full","multiline","amountOfLines","value","match","length","id","name","join","placeholder","onInput","onKeyUp","onKeyDown","onFocus","onBlur","disabled","type","eventData","target","changeValue","propTypes","string","isRequired","bool","onValueChange","func","defaultProps","propExamples"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { wrapWithInputState } from './abstract/input-with-state';\nimport { attachUniversalProps } from './helpers/universal-props';\n\n/**\n * <Input />\n * \n * ```jsx\n * <Input\n *   id=\"my_input\"\n *   name=\"my_input\"\n *   multiline={true}\n *   value=\"default value\"\n * />\n * ```\n */\nfunction Input(props) {\n    return wrapWithInputState(InputView)(props);\n}\n\nfunction InputView(props) {\n    const classNames = ['alegrify-input'];\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    if (props.full) {\n        classNames.push('alegrify-input--full');\n    }\n\n    if (props.multiline) {\n        const amountOfLines = ((props.value || '').match(/\\n/gi) || []).length + 1;\n\n        return (\n            <textarea\n                id={props.id}\n                name={props.name}\n                className={classNames.join(' ')}\n                placeholder={props.placeholder || ''}\n                onInput={onInput}\n                onKeyUp={props.onKeyUp}\n                onKeyDown={props.onKeyDown}\n                onFocus={props.onFocus}\n                onBlur={props.onBlur}\n                rows={amountOfLines}\n                value={props.value}\n                disabled={props.disabled}\n            />\n        );\n    }\n\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            type={props.type || 'text'}\n            className={classNames.join(' ')}\n            placeholder={props.placeholder || ''}\n            value={props.value}\n            disabled={props.disabled}\n            onInput={onInput}\n            onKeyUp={props.onKeyUp}\n            onKeyDown={props.onKeyDown}\n            onFocus={props.onFocus}\n            onBlur={props.onBlur}\n        />\n    );\n\n    function onInput(eventData) {\n        const { value } = eventData.target;\n\n        props.changeValue(value);\n    }\n}\n\nInput.propTypes = {\n\n    /**\n     * Value to show in the input\n     */\n    value: PropTypes.string.isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * Input type\n     */\n    type: PropTypes.string,\n\n    /**\n     * Input placeholder\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * 100% width?\n     */\n    full: PropTypes.bool,\n\n    /**\n     * Use textarea instead of input\n     */\n    multiline: PropTypes.bool,\n\n    /**\n     * Disable input\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Input id\n     */\n    id: PropTypes.string.isRequired,\n\n    /**\n     * Input name\n     */\n    name: PropTypes.string.isRequired,\n\n    /**\n     * On value change method (passes value)\n     */\n    onValueChange: PropTypes.func,\n\n    /**\n     * Native onKeyUp event\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * Native onKeyDown event\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * Native onFocus event\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Native onBlur event\n     */\n    onBlur: PropTypes.func\n};\nInput.defaultProps = {\n    type: 'text'\n};\nInput.propExamples = {\n    value: 'default value',\n    className: '',\n    type: 'text',\n    placeholder: 'Placeholder text',\n    full: false,\n    multiline: false,\n    id: 'input',\n    name: 'input'\n};\n\nexport default attachUniversalProps(Input);\n"]}]}