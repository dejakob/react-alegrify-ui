{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/range-input.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/range-input.js","mtime":1539121168661},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1551376331885}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/range-input.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { wrapWithInputState } from './abstract/input-with-state';\n/**\n * <RangeInput />\n * \n * ```jsx\n * <RangeInput\n *   id=\"my_range_input\"\n *   name=\"my_range_input\"\n *   min={1}\n *   max={10}\n *   value={6}\n * />\n * ```\n */\n\nfunction RangeInput(props) {\n  var classNames = ['alegrify-range-input'];\n\n  if (props.className) {\n    classNames.push(props.className);\n  }\n\n  return React.createElement(\"input\", {\n    type: \"range\",\n    id: props.id,\n    name: props.name,\n    className: classNames.join(' '),\n    disabled: props.disabled,\n    onChange: function onChange(e) {\n      return props.changeValue(e.target.value);\n    },\n    value: props.value,\n    \"data-low-indicator\": props.lowIndicator,\n    \"data-high-indicator\": props.highIndicator,\n    min: props.min || 1,\n    max: props.max || 10,\n    step: props.step || 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n}\n\nRangeInput.propTypes = {\n  /**\n   * Additional classnames\n   */\n  className: PropTypes.string,\n\n  /**\n   * Input id\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Input name\n   */\n  name: PropTypes.string.isRequired,\n\n  /**\n   * Input value\n   */\n  value: PropTypes.number,\n\n  /**\n   * Is range input disabled?\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Indicator at the start of the range input\n   */\n  lowIndicator: PropTypes.string,\n\n  /**\n   * Indicator at the end of the range input\n   */\n  highIndicator: PropTypes.string,\n\n  /**\n   * Start of the range\n   */\n  min: PropTypes.number,\n\n  /**\n   * End of the range\n   */\n  max: PropTypes.number,\n\n  /**\n   * Range step\n   */\n  step: PropTypes.number,\n\n  /**\n   * On value change, param: number\n   */\n  onValueChange: PropTypes.func\n};\nRangeInput.defaultProps = {\n  min: 1,\n  max: 10,\n  step: 1\n};\nRangeInput.propExamples = {\n  className: '',\n  id: 'rangeinput',\n  name: 'rangeinput',\n  value: 8,\n  disabled: false,\n  lowIndicator: 'üò•',\n  highIndicator: 'üòç',\n  min: 1,\n  max: 10,\n  step: 1\n};\n\nvar _default = wrapWithInputState(RangeInput);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(RangeInput, \"RangeInput\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/range-input.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/range-input.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nRangeInput.__docgenInfo = {\n  \"description\": \"<RangeInput />\\n\\n```jsx\\n<RangeInput\\n  id=\\\"my_range_input\\\"\\n  name=\\\"my_range_input\\\"\\n  min={1}\\n  max={10}\\n  value={6}\\n/>\\n```\",\n  \"methods\": [],\n  \"displayName\": \"RangeInput\",\n  \"props\": {\n    \"min\": {\n      \"defaultValue\": {\n        \"value\": \"1\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Start of the range\"\n    },\n    \"max\": {\n      \"defaultValue\": {\n        \"value\": \"10\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"End of the range\"\n    },\n    \"step\": {\n      \"defaultValue\": {\n        \"value\": \"1\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Range step\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Additional classnames\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input id\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input name\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Input value\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Is range input disabled?\"\n    },\n    \"lowIndicator\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Indicator at the start of the range input\"\n    },\n    \"highIndicator\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Indicator at the end of the range input\"\n    },\n    \"onValueChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"On value change, param: number\"\n    }\n  }\n};",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/range-input.js"],"names":["React","PropTypes","wrapWithInputState","RangeInput","props","classNames","className","push","id","name","join","disabled","e","changeValue","target","value","lowIndicator","highIndicator","min","max","step","propTypes","string","isRequired","number","bool","onValueChange","func","defaultProps","propExamples"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AAEA;;;;;;;;;;;;;;AAaA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,MAAMC,UAAU,GAAG,CAAC,sBAAD,CAAnB;;AAEA,MAAID,KAAK,CAACE,SAAV,EAAqB;AACjBD,IAAAA,UAAU,CAACE,IAAX,CAAgBH,KAAK,CAACE,SAAtB;AACH;;AAED,SACI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,EAAE,EAAEF,KAAK,CAACI,EAFd;AAGI,IAAA,IAAI,EAAEJ,KAAK,CAACK,IAHhB;AAII,IAAA,SAAS,EAAEJ,UAAU,CAACK,IAAX,CAAgB,GAAhB,CAJf;AAKI,IAAA,QAAQ,EAAEN,KAAK,CAACO,QALpB;AAMI,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAIR,KAAK,CAACS,WAAN,CAAkBD,CAAC,CAACE,MAAF,CAASC,KAA3B,CAAJ;AAAA,KANf;AAOI,IAAA,KAAK,EAAEX,KAAK,CAACW,KAPjB;AAQI,0BAAoBX,KAAK,CAACY,YAR9B;AASI,2BAAqBZ,KAAK,CAACa,aAT/B;AAUI,IAAA,GAAG,EAAEb,KAAK,CAACc,GAAN,IAAa,CAVtB;AAWI,IAAA,GAAG,EAAEd,KAAK,CAACe,GAAN,IAAa,EAXtB;AAYI,IAAA,IAAI,EAAEf,KAAK,CAACgB,IAAN,IAAc,CAZxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAgBH;;AAEDjB,UAAU,CAACkB,SAAX,GAAuB;AAEnB;;;AAGAf,EAAAA,SAAS,EAAEL,SAAS,CAACqB,MALF;;AAOnB;;;AAGAd,EAAAA,EAAE,EAAEP,SAAS,CAACqB,MAAV,CAAiBC,UAVF;;AAYnB;;;AAGAd,EAAAA,IAAI,EAAER,SAAS,CAACqB,MAAV,CAAiBC,UAfJ;;AAiBnB;;;AAGAR,EAAAA,KAAK,EAAEd,SAAS,CAACuB,MApBE;;AAsBnB;;;AAGAb,EAAAA,QAAQ,EAAEV,SAAS,CAACwB,IAzBD;;AA2BnB;;;AAGAT,EAAAA,YAAY,EAAEf,SAAS,CAACqB,MA9BL;;AAgCnB;;;AAGAL,EAAAA,aAAa,EAAEhB,SAAS,CAACqB,MAnCN;;AAqCnB;;;AAGAJ,EAAAA,GAAG,EAAEjB,SAAS,CAACuB,MAxCI;;AA0CnB;;;AAGAL,EAAAA,GAAG,EAAElB,SAAS,CAACuB,MA7CI;;AA+CnB;;;AAGAJ,EAAAA,IAAI,EAAEnB,SAAS,CAACuB,MAlDG;;AAoDnB;;;AAGAE,EAAAA,aAAa,EAAEzB,SAAS,CAAC0B;AAvDN,CAAvB;AAyDAxB,UAAU,CAACyB,YAAX,GAA0B;AACtBV,EAAAA,GAAG,EAAE,CADiB;AAEtBC,EAAAA,GAAG,EAAE,EAFiB;AAGtBC,EAAAA,IAAI,EAAE;AAHgB,CAA1B;AAKAjB,UAAU,CAAC0B,YAAX,GAA0B;AACtBvB,EAAAA,SAAS,EAAE,EADW;AAEtBE,EAAAA,EAAE,EAAE,YAFkB;AAGtBC,EAAAA,IAAI,EAAE,YAHgB;AAItBM,EAAAA,KAAK,EAAE,CAJe;AAKtBJ,EAAAA,QAAQ,EAAE,KALY;AAMtBK,EAAAA,YAAY,EAAE,IANQ;AAOtBC,EAAAA,aAAa,EAAE,IAPO;AAQtBC,EAAAA,GAAG,EAAE,CARiB;AAStBC,EAAAA,GAAG,EAAE,EATiB;AAUtBC,EAAAA,IAAI,EAAE;AAVgB,CAA1B;;eAaelB,kBAAkB,CAACC,UAAD,C;;AAAjC;;;;;;;;;;0BApGSA,U","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { wrapWithInputState } from './abstract/input-with-state';\n\n/**\n * <RangeInput />\n * \n * ```jsx\n * <RangeInput\n *   id=\"my_range_input\"\n *   name=\"my_range_input\"\n *   min={1}\n *   max={10}\n *   value={6}\n * />\n * ```\n */\nfunction RangeInput(props) {\n    const classNames = ['alegrify-range-input'];\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    return (\n        <input\n            type=\"range\"\n            id={props.id}\n            name={props.name}\n            className={classNames.join(' ')}\n            disabled={props.disabled}\n            onChange={e => props.changeValue(e.target.value)}\n            value={props.value}\n            data-low-indicator={props.lowIndicator}\n            data-high-indicator={props.highIndicator}\n            min={props.min || 1}\n            max={props.max || 10}\n            step={props.step || 1}\n        />\n    );\n}\n\nRangeInput.propTypes = {\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * Input id\n     */\n    id: PropTypes.string.isRequired,\n\n    /**\n     * Input name\n     */\n    name: PropTypes.string.isRequired,\n\n    /**\n     * Input value\n     */\n    value: PropTypes.number,\n\n    /**\n     * Is range input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Indicator at the start of the range input\n     */\n    lowIndicator: PropTypes.string,\n\n    /**\n     * Indicator at the end of the range input\n     */\n    highIndicator: PropTypes.string,\n\n    /**\n     * Start of the range\n     */\n    min: PropTypes.number,\n\n    /**\n     * End of the range\n     */\n    max: PropTypes.number,\n\n    /**\n     * Range step\n     */\n    step: PropTypes.number,\n\n    /**\n     * On value change, param: number\n     */\n    onValueChange: PropTypes.func\n};\nRangeInput.defaultProps = {\n    min: 1,\n    max: 10,\n    step: 1\n};\nRangeInput.propExamples = {\n    className: '',\n    id: 'rangeinput',\n    name: 'rangeinput',\n    value: 8,\n    disabled: false,\n    lowIndicator: 'üò•',\n    highIndicator: 'üòç',\n    min: 1,\n    max: 10,\n    step: 1\n};\n\nexport default wrapWithInputState(RangeInput);"]}]}