{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js!/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/status-input.mdx","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/status-input.mdx","mtime":1559772819217},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1559771649804},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559770457280},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/@mdx-js/loader/index.js","mtime":1559771650965},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js","mtime":1551899789434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/docs/status-input.mdx"],"names":["React","mdx","Playground","Props","StatusInput","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","label","icon","isMDXComponent"],"mappings":";;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AACF,SAASC,UAAT,EAAqBC,KAArB,QAAkC,MAAlC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,wBAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,eAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACL,mBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADK,EAKL,mBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALK,EAQL,IAAC,UAAD;AAAY,IAAA,UAAU,EAAE,CAAxB;AAA2B,IAAA,MAAM,EAAE,2OAAnC;AAAgR,IAAA,OAAO,EAAE;AACvRN,MAAAA,KAAK,EAAE,OAAO,KAAKA,KAAZ,GAAoBA,KAD4P;AAEvRN,MAAAA,UAAU,EAAVA,UAFuR;AAGvRC,MAAAA,KAAK,EAALA,KAHuR;AAIvRC,MAAAA,WAAW,EAAXA;AAJuR,KAAzR;AAKG,IAAA,aAAa,yuLALhB;AAK2vL,IAAA,OAAO,EAAC,YALnwL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,IAAC,WAAD;AAAa,IAAA,IAAI,EAAC,cAAlB;AAAiC,IAAA,EAAE,EAAC,cAApC;AAAmD,IAAA,OAAO,EAAE,CAAC;AACzDW,MAAAA,KAAK,EAAE,SADkD;AAEzDC,MAAAA,IAAI,EAAE;AAFmD,KAAD,EAGvD;AACDD,MAAAA,KAAK,EAAE,OADN;AAEDC,MAAAA,IAAI,EAAE;AAFL,KAHuD,EAMvD;AACDD,MAAAA,KAAK,EAAE,MADN;AAEDC,MAAAA,IAAI,EAAE;AAFL,KANuD,CAA5D;AASM,IAAA,OAAO,EAAC,aATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CARK,EA0BL,mBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1BK,EA6BL,IAAC,KAAD;AAAO,IAAA,EAAE,EAAEZ,WAAX;AAAwB,IAAA,OAAO,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BK,CAAP;AA+BD;;;;;;;;;;;;;AAEDS,UAAU,CAACI,cAAX,GAA4B,IAA5B;;;;;;;;;;0BA9CMZ,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport StatusInput from '../lib/status-input';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"status-input\"\n    }}>{`Status Input`}</h1>\n\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'<StatusInput\\n  name=\\\"status_input\\\"\\n  id=\\\"status_input\\\"\\n  actions={[\\n    { label: \\'picture\\', icon: \\'camera_alt\\' },\\n    { label: \\'music\\', icon: \\'audiotrack\\' },\\n    { label: \\'file\\', icon: \\'attach_file\\' },\\n  ]}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      StatusInput\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtKZnAIaI8gaVAZnCLDZXaD0oAgDxJBRMi4HNNAqJfFVUEI9V2EDSUaJNTV2jBVBdBRY5TlwkjEixdhuHYYB1iiARnlQK52gABnYJMZiwdo92rGYOxYGdNIAFn09gADZ9MM9YwGAgAxb1oESTT-GcQ4EQdTAYKEfgliIahKDgEyEQc6snJoZwIFwy52AARgsoz5DEiSpgAQTmBT2AjKDyBsKB0DDdh5A5BSxHy6MZHYFE5JgbhgDw2SsXkLca2AIroFK4IADJ-vGRJ5koZoepKsruGmuUwGQyUBlQdp2AAfg2XqwwjSqrgmvrUHS6spBkKs3zMGE-MwMAwigKYtqqmrDpy5dqwTASCBwZzMhSK8CE6mtaxI1iKM4ld_tQb0mv4FiCDyAB9Djwn4UGay4PgQGhuGEdEEBkYsM1FrgZqAG1ca69g4MCKBNJmWIYa6QzOF0TS4iPTJYfiF9yqM_6eaU8nXEpzSiDyWIGdiahNLCFgREyHZlqUUmLCgin500yBfSWcWNLlaJSKK2H1ZgeXud59gAF0Dt5zcVykN6Pq-n7OqkJ6TrML8QAYpiMbYrH_y0ChgP0BhePtN6ligtdqBdTCjVo01FW4kOpmvcIInMWP3UkDxU-oAiIICygZksEb4CE9p-0L80CBLuA86IvndYlPAAFUeNYDIKigNDC4wsuPU2KBYTgSRkLYDv4nNCu7j9MxjFMcwjAB0iYbgYHqOthf2CKRfil3zQsG3pegcoxHN8Pjf2B33ft95cS4LgOxAZXtepmwED0DsSOM0gldMrRSUhR3WUi9Hm9JYRbW4qTCYth8CVFgAANXiAyewfgZzdEUtAuAsCMAIKQTAFB7g0g4A8KoCMmCPxQIJNg9AsBnKnDyHlTB1DaH0KwSQjAZCCQUJAf9JhqCaEwGvFAPojCqH8NgEIvoxDSHkO4v9A6v9HRRxoAAdWgFAPUbQaBAMoTAuAo4n4wAKuwVgeCrhMKnlg0xwjugAB9bFynltw-RYl_riJgHQ3ocAdE8JrEw_RBBDHGPIPfOAAA5CGVxigABJgAWPQh8UJESjyYXiDARCEAwCJHNN7diJ8LTmicl44o5VuGk0yflauo1mjxJ7jgagniGHTUUu0Oa4luxLUqsA02PNal3HqagRp3jnGm0tjWBRID3GSIED4np_iDHLyMYVJJkT8QwMsYk_w4SIalMgb4iwFSyElzGmsrBGyGmsIUjNVp80OmviUorPxVDzmoGmRA0mYyLATLcXAmAiCbEELQRGGA7caBamiK4LppNTFHCgtYhk5U8ogv0OC0iOBSJqVHHsuZVCAlBLhXg3ZrjTaHKqTAE5fSsHUH-cg1BaQrktLaQtXOUL9m9OeQk6leDAVpAjPCmAIzeafPKsSiwk5Iysp6V0Om5gn7kXyfAiAMARgRh1B4dQWx3pbIgCkVABUlCnKWJSo1uLFkckFSK_aYk56H0YHK1eCqlVjAvovAAAiZTIspgBqo1ZKTClit4L1vkyjp7B7Uv0VcqiMljJU1kyj0FZR47CKSJu0NJGSsk5OXnkPJnF2hm2xSjZoRzql9gSSErZyT0HXJRNOFI9zummwrQ_KtZy8h4GjeWxNAq5HjNFYWVAklvRaIIDqMAAAZNApdFKdrqfynAUQCBFQjLyWezxKr2PYETM2HIcCwBnAWAA1MlXtFgVzSr6OYKMbLGBOQEEQR5Fhm3bKPM1Z9rb_yUDQI-OUHJhU9OoM4N4RAXjNWRWCiF91G09N5uB7UEKcD9jg1qGAV1Qg3XeWynpLygMeBAwQWd_T-UWp6fIf9NY_owcYLQLAGLxSPp5u-iGaN039EzbkrGsNYY0bo64JGWHTZkglDAYYJUMjNQ2UJhEompzkZg-wcGr7gAbMUzAOTMHUbKYSVwdTUrRiE2AMO5Co6J1TrgLp021AX4SYSe4ml-C6VqYY_9C5XibN1PcUMizvNqDTPc_0qZwiBDefYBISQPHXCmkoz0mMrBnNxu7Sx2AGbskcfyVx-keGXj8fkxYaLuXGApxuNQeLvN-z8ki4kUrvSS5o0y_hnLuWelwCiAkar-WmtKw2fVl446BbznYJu9ouH8PtBC_9KQRW04dZ5kdWMDHGDoeq0x19_BWOZNS9mn26X2bMsHY1-TM2elabqfjagdhBpltO3trBUQZgRgjGd1AmtwxYEqtwI7BXw35Kynt6rPTtgwESM1VQ2Bxu5a1s1J7OAtbg_kyrKAUO9t7v61AOHMHqD2AYjsJHHSBlY9iNsdH_0L6dYsH-hbI8oAzakHeoglG3wTJtZvO1W2X6_dDS69g7rIveiUj6zV_r0KBsvsG25i0w1s5-3twjcBY1itHJeh6MWGIMZW5DEA632NbdzeELjT2Ds80-wmbOxX_QCd5urpL6S2ObdYrrgg-u9vmlN2nQ3TX0AQvYrofzWDYfVbJWjV3JWcYW55pj7H2xff48jyF43s3wprDDz0q3a3ku26zfbzju2Oku5zqgc0CP3e5fj8djZCPMI1mq1IRPqB49SGD3X0mUgGIM-4hM77nFEMDmLvMZNDyQHq6uN3IuNccC1oKCbCwUmROUDE2WAuo--_j9RJPlcqnh897HxPmcMO4BigAI6hAgF0RYK4uCb8Lr3-AK-6178P8f0_U_6rAd66jy_S-b875SEZFcXKAWOYf7X5YJMrP6uZ5BAFj6gF_6vJBaQHL7QEgKAav4EDwE36IErhPb3CL7AE4CRaZCJBjrXo9Ij64FwB-DzAFQMZaxoFYLf734wBH4n7ZDP49II60G34FAMFMFP4MYR6E4cFMofJvj_SM7cSd7hDd6FxnhYDehkjToD7_RD6OLP4z4yYZCaTOB-BdCQhHATBtApCEC1zP5YFXAkxsrKzv5yg0ySh9BGyaxMxygswZCuDsw3TGykyWGCxyjCz5DkBiyOFpqhDSyogSjbAeEWH8zeGtLQD2GMwSw6w3BNwGyxHywrhmxmDyB7LnT2iXTXRTCNxFStxjwCCdwj7eISEEDcLuyexZz55-yAS6AgQGBgRJz8SahlzxxcS2h8SkE1xlxTxVw1x1x8RQSFEtxtzjxdzC4xxuh0SSADxDwjyTGlETyWIzyoDM6Xy1hTbMhc6HxigpDoaRbsAAASlgeo467Ajeh8h8u8xQ-8tqux5u2x0-_QqkVWm8W4i8ZxEASwDQ7QsorgZaFWAgyQjeAAhOwIADwbgAkfu2qSDPHfHsD3E3xmAhoS7PGy7y4DqSTq796ppa7ZKN75qFpPrdptrkGy6bItoQxlIgKHKSbvGVY4lKEUmIbtqPhEl55m7miTzMlgmvinqWrn7FobLlCoihALTtyskJaVoQyUkdpprp4bY8lpx8kSn_wxDtxCkrjfJFr5QbJzQLiKFNrslURUnKk26qmN58nGlQC6kgL6kHJikJItbxBQCynknylJocmWncm2k5KtYOkWrOmcCul1JwSYpekJo-k34WlKkBn558lRlpCOkuIvE1gXoCBXrN43Fh5W7dTsnqBfp6rLSvghaB4nb9JkqDa2IAAF7QPWL4IWLAFQHgsAPA1ZWCbZAsnZIW_BOO3ZMehO6m8ew5u0YY6mDe-eDOmRYkzxUhn-_ewCK4Wx_0i8zx4wb87Akg1x-eA6zRoMPIv8xUe0HBUcY61-EY5hJBW-y--B8ERBfRy-qAgIHIrBNYL5N-b5mA6Ru6tgD-zBZ-mZFg65NYi8WUnYLwi0vYz6qmcAx5t8bJcZHB3-v-IC4FFgi8DQdgmCIQIJHx-5ZuK0SFK45WHxHBXgc-GFJOJgx5jQeFBIBFmpUp2p3QjepFPCJ5ICrF0piU35bCwgUAtFNYWF2xuFpyBF9peYXABYnFZFIC9pVFwlolYF9F3FjFUlwJ7pCQJikWEA7gUwCl3FyFNYulVMOBY-1FIl_a4lOFTFtgBFqZ3QMKhlmYJlPMPF_0LlKlNFdlGlXlxFactizZilvCJcaFq-M4alu5gVG57AWotgfZ2QXFXlZlFgvZHZ2QfltloFcV88QVBOOwIQf2plMBxV2wgh80aU3Ei5eR6GBA5ReU0GhFlWVwV0UA-iz-ylho8Q3VK4FlHV_VMAz-vlfVXVo1K4ZKmkzZUU_0WVnZw1k185ry9RU8Mhch8kikrVk5dAmkAAmq4PBP8bwLwICQRY3uwIALwbgA0jvzU1gUXtUTUDVKXoaWWdWvX_RDUvVTUgLjWfV_URXzCzUoEPWZXJXZXoDLX6KZHZFYD1wNU3QhBJFFErFlHoQRjPHVFKAeyMQLHzhLGjztyrFQD8l1IATaBNFBytH5xvSdEiR7LxrNxhINDwJngijOBZTjqwz2DjpZTODOBnjOAtWDURQwAAAazgksKp7G4tfJb8mQQZHp4N9U4t0tOsstqW8tytCQqtieCIeoMt1pctwmfJR4LAoQ1oz-BtMA46xtKWOSOtLl-t4tEt9tmtJt2tZt5oitrghekWaZtVYkGJzIp4UFXYsFUAWOcZ3iMappT652Uw-JeU1J6udZjiu64UDEBG5Z9J_0AukopMOAgOiQ3iLNbNHNXNPNfNAtQtzgIhpsOAd6Z4TchGVaUGauSdsZtJR4eUFd7NnN3NvN_NgtwtRMU8VaBa_aPSjJ6EE9A4U9MZKe5pnJ6uJGoywhZJE4iuOZPdL68A7eId4uzI4xxRJNGNPcEYX8-gOJ2Z5gAaH2CdjG3dKdik4d0FHS8QMdvd8A2J29_099yuBWN9NA1WwAOAkDli6OhZ-Jn636edIWpOvMoZR95uORP8ICH9kdPY0dFJJhqNExJRl9dwcNbsuNEU2wrgRCmg1AjRgcoEIAja_Aqm_AVw_APwxY1QGQvtshv4QU6w_AF9i0bDW8IAWkOAEjWkAj1Y_A5Q5A_QMwHSoj_AWU9UhEsA0IfD8hxwMAZIlAiQuYIsM4O9Zo5onDfwpYMjZ6IAUQaAKjKgr2fs1jYjmA8w4Y4kSqiFSAz9cj0kDjAAeklDgAAEySMuM2NdGBNJQ2Q4AAAcOANkETYjgxZK3j7DIAQTAArIk6E8k_wF0ZaJENE7Ewk0k6Hl8pke7Fw94B8NQJACkH7HQ1TQwy0Uw_wLQD6FkGwxw6aLQOaIU7MDMPwPIAoGRkAA`} mdxType=\"Playground\">\n    <StatusInput name=\"status_input\" id=\"status_input\" actions={[{\n        label: 'picture',\n        icon: 'camera_alt'\n      }, {\n        label: 'music',\n        icon: 'audiotrack'\n      }, {\n        label: 'file',\n        icon: 'attach_file'\n      }]} mdxType=\"StatusInput\">\n      </StatusInput>\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={StatusInput} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}