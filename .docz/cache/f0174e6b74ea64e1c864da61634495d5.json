{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/button.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/button.js","mtime":1559767503333},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1551376331885}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/button.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n/**\n * <Button />\n * \n * Regular HTML button\n * \n * ```jsx\n * <Button\n *   primary\n * >\n *  Hi, I'm a primary button! ðŸŽ‰\n * </Button>\n * ```\n */\n\nfunction Button(props) {\n  var classNames = ['alegrify-button'];\n  classNames.push(props.className);\n\n  if (props.primary) {\n    classNames.push('alegrify-button--primary');\n  }\n\n  if (props.destructive) {\n    classNames.push('alegrify-button--destructive');\n  }\n\n  if (props.full) {\n    classNames.push('alegrify-button--full');\n  }\n\n  if (props.small) {\n    classNames.push('alegrify-button--small');\n  }\n\n  if (props.large) {\n    classNames.push('alegrify-button--large');\n  }\n\n  return React.createElement(\"button\", {\n    className: classNames.join(' '),\n    type: props.type || 'submit',\n    disabled: props.disabled,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.children);\n}\n\nButton.propTypes = {\n  /**\n   * Button text / button content\n   */\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n\n  /**\n   * Additional classnames\n   */\n  className: PropTypes.string,\n\n  /**\n   * Is this a primary button?\n   */\n  primary: PropTypes.bool,\n\n  /**\n   * Is this a destructive button?\n   */\n  destructive: PropTypes.bool,\n\n  /**\n   * Is this a full width button?\n   */\n  full: PropTypes.bool,\n\n  /**\n   * Is this a small variant button?\n   */\n  small: PropTypes.bool,\n\n  /**\n   * Is this a large variant button?\n   */\n  large: PropTypes.bool,\n\n  /**\n   * button|submit\n   */\n  type: PropTypes.string,\n\n  /**\n   * Disabled?\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Click action\n   */\n  onClick: PropTypes.func\n};\nButton.defaultProps = {\n  primary: false,\n  full: false,\n  small: false,\n  large: false,\n  type: 'submit',\n  disabled: false\n};\nButton.propExamples = {\n  children: 'Yaay, I\\'m a button ðŸ‘‹',\n  primary: false,\n  full: false,\n  small: false,\n  large: false,\n  type: 'submit',\n  disabled: false\n};\n\nvar _default = attachUniversalProps(Button);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Button, \"Button\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/button.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/button.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nButton.__docgenInfo = {\n  \"description\": \"<Button />\\n\\nRegular HTML button\\n\\n```jsx\\n<Button\\n  primary\\n>\\n Hi, I'm a primary button! \\uD83C\\uDF89\\n</Button>\\n```\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"primary\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Is this a primary button?\"\n    },\n    \"full\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Is this a full width button?\"\n    },\n    \"small\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Is this a small variant button?\"\n    },\n    \"large\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Is this a large variant button?\"\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'submit'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"button|submit\"\n    },\n    \"disabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Disabled?\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"arrayOf\",\n          \"value\": {\n            \"name\": \"node\"\n          }\n        }, {\n          \"name\": \"node\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"Button text / button content\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Additional classnames\"\n    },\n    \"destructive\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Is this a destructive button?\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Click action\"\n    }\n  }\n};",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/button.js"],"names":["React","PropTypes","attachUniversalProps","Button","props","classNames","push","className","primary","destructive","full","small","large","join","type","disabled","onClick","children","propTypes","oneOfType","arrayOf","node","isRequired","string","bool","func","defaultProps","propExamples"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n\n/**\n * <Button />\n * \n * Regular HTML button\n * \n * ```jsx\n * <Button\n *   primary\n * >\n *  Hi, I'm a primary button! ðŸŽ‰\n * </Button>\n * ```\n */\nfunction Button(props) {\n    const classNames = ['alegrify-button'];\n\n    classNames.push(props.className);\n\n    if (props.primary) {\n        classNames.push('alegrify-button--primary');\n    }\n\n    if (props.destructive) {\n        classNames.push('alegrify-button--destructive');\n    }\n\n    if (props.full) {\n        classNames.push('alegrify-button--full');\n    }\n\n    if (props.small) {\n        classNames.push('alegrify-button--small');\n    }\n\n    if (props.large) {\n        classNames.push('alegrify-button--large');\n    }\n\n    return (\n        <button\n            className={classNames.join(' ')}\n            type={props.type ||Â 'submit'}\n            disabled={props.disabled}\n            onClick={props.onClick}\n        >\n            {props.children}\n        </button>\n    )\n}\n\nButton.propTypes = {\n\n    /**\n     * Button text / button content\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * Is this a primary button?\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Is this a destructive button?\n     */\n    destructive: PropTypes.bool,\n\n    /**\n     * Is this a full width button?\n     */\n    full: PropTypes.bool,\n\n    /**\n     * Is this a small variant button?\n     */\n    small: PropTypes.bool,\n\n    /**\n     * Is this a large variant button?\n     */\n    large: PropTypes.bool,\n\n    /**\n     * button|submit\n     */\n    type: PropTypes.string,\n\n    /**\n     * Disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Click action\n     */\n    onClick: PropTypes.func,\n};\nButton.defaultProps = {\n    primary: false,\n    full: false,\n    small: false,\n    large: false,\n    type: 'submit',\n    disabled: false\n}\nButton.propExamples = {\n    children: 'Yaay, I\\'m a button ðŸ‘‹',\n    primary: false,\n    full: false,\n    small: false,\n    large: false,\n    type: 'submit',\n    disabled: false\n};\n\nexport default attachUniversalProps(Button);\n"]}]}