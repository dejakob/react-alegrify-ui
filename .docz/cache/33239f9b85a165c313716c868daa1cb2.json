{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/grid-cell.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/grid-cell.js","mtime":1559767748260},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1559771649804},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/thread-loader/dist/cjs.js","mtime":1559771650461},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559770457280},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/source-map-loader/index.js","mtime":1551899789434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvamFrb2JrZXJraG92ZS9hbGVncmlmeS9yZWFjdC1hbGVncmlmeS11aS9saWIvZ3JpZC1jZWxsLmpzIjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7CmltcG9ydCB7IGF0dGFjaFVuaXZlcnNhbFByb3BzIH0gZnJvbSAnLi9oZWxwZXJzL3VuaXZlcnNhbC1wcm9wcyc7CnZhciBWQVJJQU5UUyA9IFsnb25lJywgJ3R3bycsICd0aHJlZScsICdmb3VyJywgJ2ZpdmUnLCAnc2l4JywgJ3NldmVuJywgJ2VpZ2h0JywgJ25pbmUnLCAndGVuJywgJ2VsZXZlbiddOwp2YXIgVkFSSUFOVF9UT19DU1NfVkFSSUFOVCA9IHsKICAnb25lJzogMSwKICAndHdvJzogMiwKICAndGhyZWUnOiAzLAogICdmb3VyJzogNCwKICAnZml2ZSc6IDUsCiAgJ3NpeCc6IDYsCiAgJ3NldmVuJzogNywKICAnZWlnaHQnOiA4LAogICduaW5lJzogOSwKICAndGVuJzogMTAsCiAgJ2VsZXZlbic6IDExCn07Ci8qKgogKiA8R3JpZENlbGwgLz4KICogCiAqIGBgYGpzeAogKiA8R3JpZENlbGwKICogICB0aHJlZQogKiA+CiAqICAgY29udGVudC4uLgogKiA8L0dyaWRDZWxsPgogKiBgYGAKICovCgpmdW5jdGlvbiBHcmlkQ2VsbChwcm9wcykgewogIHZhciBjbGFzc05hbWVzID0gWydhbGVncmlmeS1ncmlkX19jZWxsJ107CgogIGlmIChwcm9wcy5jbGFzc05hbWUpIHsKICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpOwogIH0KCiAgVkFSSUFOVFMuZm9yRWFjaChmdW5jdGlvbiAodmFyaWFudCkgewogICAgaWYgKHByb3BzW3ZhcmlhbnRdKSB7CiAgICAgIGNsYXNzTmFtZXMucHVzaCgiYWxlZ3JpZnktZ3JpZF9fY2VsbC0tIi5jb25jYXQoVkFSSUFOVF9UT19DU1NfVkFSSUFOVFt2YXJpYW50XSkpOwogICAgfQogIH0pOwogIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMuam9pbignICcpLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNTcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBwcm9wcy5jaGlsZHJlbik7Cn0KCkdyaWRDZWxsLnByb3BUeXBlcyA9IHsKICAvKioKICAgKiBDb250ZW50CiAgICovCiAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5ub2RlKSwgUHJvcFR5cGVzLm5vZGVdKS5pc1JlcXVpcmVkLAoKICAvKioKICAgKiBBZGRpdGlvbmFsIGNsYXNzbmFtZXMKICAgKi8KICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsCiAgb25lOiBQcm9wVHlwZXMuYm9vbCwKICB0d286IFByb3BUeXBlcy5ib29sLAogIHRocmVlOiBQcm9wVHlwZXMuYm9vbCwKICBmb3VyOiBQcm9wVHlwZXMuYm9vbCwKICBmaXZlOiBQcm9wVHlwZXMuYm9vbCwKICBzaXg6IFByb3BUeXBlcy5ib29sLAogIHNldmVuOiBQcm9wVHlwZXMuYm9vbCwKICBlaWdodDogUHJvcFR5cGVzLmJvb2wsCiAgbmluZTogUHJvcFR5cGVzLmJvb2wsCiAgdGVuOiBQcm9wVHlwZXMuYm9vbCwKICBlbGV2ZW46IFByb3BUeXBlcy5ib29sCn07CkdyaWRDZWxsLmRlZmF1bHRQcm9wcyA9IHt9OwpHcmlkQ2VsbC5wcm9wRXhhbXBsZXMgPSB7fTsKCnZhciBfZGVmYXVsdCA9IGF0dGFjaFVuaXZlcnNhbFByb3BzKEdyaWRDZWxsKTsKCmV4cG9ydCBkZWZhdWx0IF9kZWZhdWx0Owo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFZBUklBTlRTLCAiVkFSSUFOVFMiLCAiL1VzZXJzL2pha29ia2Vya2hvdmUvYWxlZ3JpZnkvcmVhY3QtYWxlZ3JpZnktdWkvbGliL2dyaWQtY2VsbC5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFZBUklBTlRfVE9fQ1NTX1ZBUklBTlQsICJWQVJJQU5UX1RPX0NTU19WQVJJQU5UIiwgIi9Vc2Vycy9qYWtvYmtlcmtob3ZlL2FsZWdyaWZ5L3JlYWN0LWFsZWdyaWZ5LXVpL2xpYi9ncmlkLWNlbGwuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihHcmlkQ2VsbCwgIkdyaWRDZWxsIiwgIi9Vc2Vycy9qYWtvYmtlcmtob3ZlL2FsZWdyaWZ5L3JlYWN0LWFsZWdyaWZ5LXVpL2xpYi9ncmlkLWNlbGwuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL1VzZXJzL2pha29ia2Vya2hvdmUvYWxlZ3JpZnkvcmVhY3QtYWxlZ3JpZnktdWkvbGliL2dyaWQtY2VsbC5qcyIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/grid-cell.js"],"names":["React","PropTypes","attachUniversalProps","VARIANTS","VARIANT_TO_CSS_VARIANT","GridCell","props","classNames","className","push","forEach","variant","join","children","propTypes","oneOfType","arrayOf","node","isRequired","string","one","bool","two","three","four","five","six","seven","eight","nine","ten","eleven","defaultProps","propExamples"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,2BAArC;AAEA,IAAMC,QAAQ,GAAG,CACb,KADa,EAEb,KAFa,EAGb,OAHa,EAIb,MAJa,EAKb,MALa,EAMb,KANa,EAOb,OAPa,EAQb,OARa,EASb,MATa,EAUb,KAVa,EAWb,QAXa,CAAjB;AAaA,IAAMC,sBAAsB,GAAG;AAC3B,SAAO,CADoB;AAE3B,SAAO,CAFoB;AAG3B,WAAS,CAHkB;AAI3B,UAAQ,CAJmB;AAK3B,UAAQ,CALmB;AAM3B,SAAO,CANoB;AAO3B,WAAS,CAPkB;AAQ3B,WAAS,CARkB;AAS3B,UAAQ,CATmB;AAU3B,SAAO,EAVoB;AAW3B,YAAU;AAXiB,CAA/B;AAcA;;;;;;;;;;;;AAWA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAMC,UAAU,GAAG,CAAC,qBAAD,CAAnB;;AAEA,MAAID,KAAK,CAACE,SAAV,EAAqB;AACjBD,IAAAA,UAAU,CAACE,IAAX,CAAgBH,KAAK,CAACE,SAAtB;AACH;;AAEDL,EAAAA,QAAQ,CAACO,OAAT,CAAiB,UAAAC,OAAO,EAAI;AACxB,QAAIL,KAAK,CAACK,OAAD,CAAT,EAAoB;AAChBJ,MAAAA,UAAU,CAACE,IAAX,gCAAwCL,sBAAsB,CAACO,OAAD,CAA9D;AACH;AACJ,GAJD;AAMA,SACI;AACI,IAAA,SAAS,EAAEJ,UAAU,CAACK,IAAX,CAAgB,GAAhB,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKN,KAAK,CAACO,QAHX,CADJ;AAOH;;AAEDR,QAAQ,CAACS,SAAT,GAAqB;AAEjB;;;AAGAD,EAAAA,QAAQ,EAAEZ,SAAS,CAACc,SAAV,CAAoB,CAC1Bd,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,IAA5B,CAD0B,EAE1BhB,SAAS,CAACgB,IAFgB,CAApB,EAGPC,UARc;;AAUjB;;;AAGAV,EAAAA,SAAS,EAAEP,SAAS,CAACkB,MAbJ;AAejBC,EAAAA,GAAG,EAAEnB,SAAS,CAACoB,IAfE;AAgBjBC,EAAAA,GAAG,EAAErB,SAAS,CAACoB,IAhBE;AAiBjBE,EAAAA,KAAK,EAAEtB,SAAS,CAACoB,IAjBA;AAkBjBG,EAAAA,IAAI,EAAEvB,SAAS,CAACoB,IAlBC;AAmBjBI,EAAAA,IAAI,EAAExB,SAAS,CAACoB,IAnBC;AAoBjBK,EAAAA,GAAG,EAAEzB,SAAS,CAACoB,IApBE;AAqBjBM,EAAAA,KAAK,EAAE1B,SAAS,CAACoB,IArBA;AAsBjBO,EAAAA,KAAK,EAAE3B,SAAS,CAACoB,IAtBA;AAuBjBQ,EAAAA,IAAI,EAAE5B,SAAS,CAACoB,IAvBC;AAwBjBS,EAAAA,GAAG,EAAE7B,SAAS,CAACoB,IAxBE;AAyBjBU,EAAAA,MAAM,EAAE9B,SAAS,CAACoB;AAzBD,CAArB;AA2BAhB,QAAQ,CAAC2B,YAAT,GAAwB,EAAxB;AACA3B,QAAQ,CAAC4B,YAAT,GAAwB,EAAxB;;eAEe/B,oBAAoB,CAACG,QAAD,C;;AAAnC;;;;;;;;;;0BA1FMF,Q;0BAaAC,sB;0BAyBGC,Q","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n\nconst VARIANTS = [\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'ten',\n    'eleven'\n];\nconst VARIANT_TO_CSS_VARIANT = {\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9,\n    'ten': 10,\n    'eleven': 11\n};\n\n/**\n * <GridCell />\n * \n * ```jsx\n * <GridCell\n *   three\n * >\n *   content...\n * </GridCell>\n * ```\n */\nfunction GridCell(props) {\n    const classNames = ['alegrify-grid__cell'];\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    VARIANTS.forEach(variant => {\n        if (props[variant]) {\n            classNames.push(`alegrify-grid__cell--${VARIANT_TO_CSS_VARIANT[variant]}`);\n        }\n    });\n\n    return (\n        <div\n            className={classNames.join(' ')}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nGridCell.propTypes = {\n\n    /**\n     * Content\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    one: PropTypes.bool,\n    two: PropTypes.bool,\n    three: PropTypes.bool,\n    four: PropTypes.bool,\n    five: PropTypes.bool,\n    six: PropTypes.bool,\n    seven: PropTypes.bool,\n    eight: PropTypes.bool,\n    nine: PropTypes.bool,\n    ten: PropTypes.bool,\n    eleven: PropTypes.bool\n};\nGridCell.defaultProps = {};\nGridCell.propExamples = {};\n\nexport default attachUniversalProps(GridCell);\n"]}]}