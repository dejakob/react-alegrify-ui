{"remainingRequest":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/alert.js","dependencies":[{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/alert.js","mtime":1559774243538},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551899788855},{"path":"/Users/jakobkerkhove/alegrify/react-alegrify-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559770457280}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/alert.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n/**\n * <Alert />\n * \n * Show a short and temporary message\n * \n * ```jsx\n * <Alert\n *   open={true}\n * >\n *   Message sent\n * </Alert>\n * ```\n */\n\nfunction Alert(props) {\n  var classNames = ['alegrify-alert'];\n  classNames.push(props.className);\n  return React.createElement(\"dialog\", {\n    className: classNames.join(' '),\n    open: props.open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.children);\n}\n\nAlert.propTypes = {\n  /**\n   * Content of the alert\n   */\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n\n  /**\n   * Additional classnames\n   */\n  className: PropTypes.string,\n\n  /**\n   * Show the alert?\n   */\n  open: PropTypes.bool\n};\nAlert.defaultProps = {\n  open: false,\n  className: ''\n};\n\nvar _default = attachUniversalProps(Alert);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Alert, \"Alert\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/alert.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/alert.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\nAlert.__docgenInfo = {\n  \"description\": \"<Alert />\\n\\nShow a short and temporary message\\n\\n```jsx\\n<Alert\\n  open={true}\\n>\\n  Message sent\\n</Alert>\\n```\",\n  \"methods\": [],\n  \"displayName\": \"Alert\",\n  \"props\": {\n    \"open\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Show the alert?\"\n    },\n    \"className\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Additional classnames\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"arrayOf\",\n          \"value\": {\n            \"name\": \"node\"\n          }\n        }, {\n          \"name\": \"node\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"Content of the alert\"\n    }\n  }\n};",{"version":3,"sources":["/Users/jakobkerkhove/alegrify/react-alegrify-ui/lib/alert.js"],"names":["React","PropTypes","attachUniversalProps","Alert","props","classNames","push","className","join","open","children","propTypes","oneOfType","arrayOf","node","isRequired","string","bool","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,2BAArC;AAEA;;;;;;;;;;;;;;AAaA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,MAAMC,UAAU,GAAG,CAAC,gBAAD,CAAnB;AAEAA,EAAAA,UAAU,CAACC,IAAX,CAAgBF,KAAK,CAACG,SAAtB;AAEA,SACI;AACI,IAAA,SAAS,EAAEF,UAAU,CAACG,IAAX,CAAgB,GAAhB,CADf;AAEI,IAAA,IAAI,EAAEJ,KAAK,CAACK,IAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKL,KAAK,CAACM,QAJX,CADJ;AAQH;;AAEDP,KAAK,CAACQ,SAAN,GAAkB;AAEd;;;AAGAD,EAAAA,QAAQ,EAAET,SAAS,CAACW,SAAV,CAAoB,CAC1BX,SAAS,CAACY,OAAV,CAAkBZ,SAAS,CAACa,IAA5B,CAD0B,EAE1Bb,SAAS,CAACa,IAFgB,CAApB,EAGPC,UARW;;AAUd;;;AAGAR,EAAAA,SAAS,EAAEN,SAAS,CAACe,MAbP;;AAed;;;AAGAP,EAAAA,IAAI,EAAER,SAAS,CAACgB;AAlBF,CAAlB;AAoBAd,KAAK,CAACe,YAAN,GAAqB;AACjBT,EAAAA,IAAI,EAAE,KADW;AAEjBF,EAAAA,SAAS,EAAE;AAFM,CAArB;;eAKeL,oBAAoB,CAACC,KAAD,C;;AAAnC;;;;;;;;;;0BAxCSA,K","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { attachUniversalProps } from './helpers/universal-props';\n\n/**\n * <Alert />\n * \n * Show a short and temporary message\n * \n * ```jsx\n * <Alert\n *   open={true}\n * >\n *   Message sent\n * </Alert>\n * ```\n */\nfunction Alert(props) {\n    const classNames = ['alegrify-alert'];\n\n    classNames.push(props.className);\n\n    return (\n        <dialog\n            className={classNames.join(' ')}\n            open={props.open}\n        >\n            {props.children}\n        </dialog>\n    )\n}\n\nAlert.propTypes = {\n\n    /**\n     * Content of the alert\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * Show the alert?\n     */\n    open: PropTypes.bool\n};\nAlert.defaultProps = {\n    open: false,\n    className: ''\n};\n\nexport default attachUniversalProps(Alert);"]}]}