{"version":3,"sources":["webpack:///./lib/number-input.js","webpack:///./docs/number-input.mdx","webpack:///./lib/abstract/input-with-state.js"],"names":["NumberInput","props","wrapWithInputState","NumberInputView","classNames","min","max","value","Math","className","push","wide","full","react_default","a","createElement","htmlFor","id","join","tabIndex","onClick","up","type","name","disabled","onInput","eventData","target","number","Number","isNaN","changeValue","onKeyUp","keyCode","preventDefault","down","onKeyDown","onFocus","onBlur","autoComplete","propTypes","PropTypes","string","isRequired","bool","onValueChange","func","defaultProps","propExamples","MDXContent","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","dist","index_m","__codesandbox","__position","__code","__scope","number_input","of","INPUT_METHODS","InputWithState","methods","forEach","methodName","bind","_assertThisInitialized","setState","newProps","state","renderMethod","allProps","_objectSpread","react__WEBPACK_IMPORTED_MODULE_0___default","Object","assign"],"mappings":"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","file":"static/js/docs-number-input.2dbc419d.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { wrapWithInputState } from './abstract/input-with-state';\n\n/**\n * <NumberInput />\n * \n * ```jsx\n * <NumberInput\n *   id=\"number_input\"\n *   name=\"number_input\"\n *   min={1}\n *   value={6}\n *   max={10}\n * />\n * ```\n */\nfunction NumberInput(props) {\n    return wrapWithInputState(NumberInputView)(props);\n}\n\nfunction NumberInputView(props) {\n    const classNames = ['alegrify-number-input'];\n    const min = props.min || 0;\n    const max = props.max || 10;\n    const value = Math.max(Math.min(max, props.value), min);\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    if (props.wide) {\n        classNames.push('alegrify-number-input--wide');\n    }\n\n    if (props.full) {\n        classNames.push('alegrify-number-input--full');\n    }\n\n    return (\n        <label\n            htmlFor={props.id}\n            className={classNames.join(' ')}\n        >\n            <button\n                className=\"alegrify-number-input__add\"\n                tabIndex=\"-1\"\n                onClick={up}\n            >\n                <span>+</span>\n            </button>\n            <input\n                type=\"text\"\n                id={props.id}\n                name={props.name}\n                className=\"alegrify-number-input__input\"\n                value={value}\n                disabled={props.disabled}\n                onInput={onInput}\n                onKeyUp={onKeyUp}\n                onKeyDown={props.onKeyDown}\n                onFocus={props.onFocus}\n                onBlur={props.onBlur}\n                autoComplete=\"off\"\n            />\n            <button\n                className=\"alegrify-number-input__subtract\"\n                tabIndex=\"-1\"\n                onClick={down}\n            >\n                <span>-</span>\n            </button>\n        </label>\n    );\n\n    function onInput(eventData) {\n        const { value } = eventData.target;\n        const number = Number(value);\n\n        if (isNaN(number)) {\n            props.changeValue(0);\n        }\n        else if (number < min) {\n            props.changeValue(min);\n        }\n        else if (number > max) {\n            props.changeValue(max);\n        }\n        else {\n            props.changeValue(number);\n        }\n    }\n\n    function onKeyUp(eventData) {\n        switch (eventData.keyCode) {\n            case 38:\n                eventData.preventDefault();\n                up();\n                break;\n\n            case 40:\n                eventData.preventDefault();\n                down();\n                break;\n        }\n\n        if (typeof props.onKeyUp === 'function') {\n            props.onKeyUp(eventData);\n        }\n    }\n\n    function up() {\n        props.changeValue(Math.min(max, (props.value || 0) + 1));\n    }\n\n    function down() {\n        props.changeValue(Math.max(min, (props.value || 0) - 1));\n    }\n}\n\nNumberInput.propTypes = {\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * Input id\n     */\n    id: PropTypes.string.isRequired,\n\n    /**\n     * Input name\n     */\n    name: PropTypes.string.isRequired,\n\n    /**\n     * Input value, must be a number\n     */\n    value: PropTypes.number,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Is this a wide variant?\n     */\n    wide: PropTypes.bool,\n\n    /**\n     * 100% width?\n     */\n    full: PropTypes.bool,\n\n    /**\n     * Min value\n     */\n    min: PropTypes.number,\n\n    /**\n     * Max value\n     */\n    max: PropTypes.number,\n\n    /**\n     * On value change, param: number value\n     */\n    onValueChange: PropTypes.func\n};\nNumberInput.defaultProps = {\n    min: 0,\n    max: 10,\n    value: 0,\n    wide: false,\n    full: false,\n    disabled: false\n};\nNumberInput.propExamples = {\n    className: '',\n    id: 'number_input',\n    name: 'number_input',\n    value: 6,\n    disabled: false,\n    wide: false,\n    full: false,\n    min: 1,\n    max: 10\n};\n\nexport default NumberInput;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport NumberInput from '../lib/number-input';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"number-input\"}}>{`Number Input`}</MDXTag>\n\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkqiUrGiJkjK8Eq1QyZnWTWWoXY2Hm_To5G67mScAIAlCKRSsDsIxeeHGNjsFU83iWM1g_m6mVsSPMtjgoRg62oqTxb3qiAAlGYjJIzBAiDNKAIpgAlGCuchTMBCIjsToSqXtADc_MFwrFioIABEAPIAWXYMsi8q6koIAFoTkQVWqhSKHJEhah9EbZfKcJJsK5BbBbagzOLzXr9TguhgMgAKdbMNhidYWRh4ADMYkc6pdNE46pF2XYuImPScwJJNQEiCkKfj5gs7EYMzEkYaUyiyRdedc6BYMWo8XYMyEd3GlFSMCmL3Y4cw_VQKXzMASnKkDYTdfTztdkmriekccUZhOvSI-hwaQIAFFYMeaAAhRINdCRzrCAjtbmoTnKhTKb2-mA4TQyB0ahaHoRAVBzKYADlQiIQIBAaVAZnCN0TXaT0oAgDxvlg-CLTQZDX1VVABXtTVzVQuUFXNdo7Q1dhgHYTQfHkSj5QAARgIgRAGVBAWFGBaIDVBdFRY5TgAL2cAhEmxdhuAY9YogEZ5UCudoAAZ2GTGYsHafcaxmTsWFndSABZdPYAA2XT9PWMAQIAMR9aBEnU_hnEORFHUwdgAAUhH4JZuJ-OAjMROyawcmhnAgCTLnYABGMyDPkcEROoMSAEE5nk9hI0Y8gbCgdBw3YeROXksR8pjGR2FRWSYG4YBDykmTsXkbda2AIroFK4IADIBvGRJ5koZpepKsruBm-UwFCESe1Qdp2AAfg2Prw0jSqrkm_rUDSmspBkat3zMWF6MwMAwigKZtqqmqjpylca0TIMpRwRzMhSa8CC62s6xguCMkQwjVwBrg-BAVBcIyAB9Ajwn4cHa1QH0mv4GHgYEBGkKRkAUYsIg0GaxLDoBgHWHiRlmqs8mKaJ1wsFJjT6YBrdVykd6CE-77fq6qRntOsxvxATDsKxvDEZ5wDtF0UCDHA0j6O5tjqKVYjlYdALKBmSxRvgNWB11i0ZPmOB_S1qZGJGTIZgAdTxUHwmkrJyrVz1XA8VFMilSRpYtAs8AtVEsn9MxjFMcwjEB2GELxqYOej9gihj4p0-Y1PY-x53RGTixIcxuPcbBgn8_YNHjyhyX4el5Hy-J1BSfJmOLCpqAaeAOms8Z5ngES1ms6T9g0_T1O-VQebFt49ggfg3PI2Nu5KuAVcugIPpzFt2ZHYmXPXdoSM55BhOADUIBgEZOUXwc4E_MxDrMKepRn4_48I8_L5v3W78U16i1QGJcgUB_BwCgujOwCkADa7R4gwBSP0MAiQLQ1wEPhBO7QAC6xEAaiRbGgPKS84A4EbuwAAPmQ9gGkcG1jwewKIPgFJEJIUzchlCB40IsHQ9ujI8r6miHgFhWBIz8ImCQtAkYGFklvjgHhMBOTBTQPfYSENmjfzuB8EBcAwHoxXoTHoWidHHmIchOAeB1HEOAaA8Bx5lEA0fv_CAajmG4kwHo_-uDDE2PgDgUx5jYGwAQU45BqD0GEQtIHLggk7G1gcao_KzD5qLj_gzLhXiIG-LyP4uBQSkEoLjmE8IESklQDfJw8q6UAbr03o9VJdYQGBCgPogGhASCOWFM1ZhXA2Z1IMdY9GzUrHaO8cQ9QlAJErTfD0gG_1emMA8OECIKjekMyGUYjGIAcmIJCQU6WcM4bGXrishmBAvaITUFDC0iUjnHIBtQewmEdjNVCDMaZqTZm3MYGFdwYgADUUhvmoA-akqQCybjUGBQzRgdcPHHLNhs2gWBRBl1uRDHgwAunoDeSsyuTUMUyNxdi3pazvFQy2cE_J2NCkEH2XXFFqK27UzxXIoldSWAVA8LAdFzD2Vey5ay1J1Bc7NSFQnAVDNqAAGkYCJAAKozBFagaVcrXnNMFUqmV2pRhN3xT_HAUrNXavFRTag7TehwE6TI01pw8jGruagG8HcBCWr1dQR1fQ7W1jCBEdcsBaBQ3GmAG5Kzh7HPmYs6garVnpKrvwcleTQl7LhgyDwaJzTBtRacjw5zsCXOufShl9zHnbGaicEYB0o3sEhXMwFYgLQAqMkCytoKI1NthTuBpC5ZnKNXM_JaexUALxgKwfQ2poiuHcXUuhjE5HuwUsO0d46cCnJUmOcpuDMpTFQXlN-kY5E9vbZwNRthwFQUjKgzkk7jnMKKu4NIp8mWRg0jEhmRKFxwG6E4_K27GD0KUSk69Mjb2zhgA-juMBJFKPXbE_R77P1qO3dVBhV6Vk3r8CBsDjJJFMxfRTN9UAP0AdQ0B9D97H0XugxYHpcTax9pngalVkYF00DHaclDFM4AFiKvlZjOol3bBlY4NxRHiWUm0gADkQJWgGvHWOuF8V0EdLGYDXVCLdbalHekvI09J2sHgzTbGIpWuIhGzIaSk4eupsml0Dlkypm6BAdOWdSWW1ATmGUWH0xKQz-iaMMy_ZGeF41-xWo1Sq-Ss12h0eoG-ETdTmEMflUxpTfG2Oaeo5U2jC0X4sm0-xgGaG72gcfaIwRjdsNYCWBY2RTK2FUMqr8pKl7yl-aNNl_trn7qr0PYVjDJWBFCMg6gKrzDZ0UPq-wC0TXcOHQcW_XOCndb63Nnlbrq5I7gxjllLsLxeJ9jWbiuAm2J6eP6ceK4Os9YG2IT7AoBl1smE240BOnB0DHdXFwC7g5ls-Nu7OHAthxQAEdQgQC6IsTLFgNseJjrnCu6N3v_1xV9pb12cB_ZSADuAwPQfg_u__aHFNYcvbkcFPIUxAghArnHRHlMmUo6u-bHAqD8fs0ezDxodhpbHFsHy7Iq1ae1l5Zy7IDOfvEK8JQKArPayE4BrDuwExbBU9cd0Km_R3AEAFzDk7tZVdi7R5L6XkP2By9rDHAeGkACk-YuATG10T3XFgSkG6Z0bmXUP2dE_YPqAhcjBdEzQK7nxLOTdm4sDHfhPh_c69XAw4PxDQ_LM91Hb3upzCzuA2kMkrhMhECuNumPjvVzUEwzAewpGEqXfFzgZ-D9iLzYTjgK6DnLuQJE43K4GkDIA3j0lbvq45Fd573rqJVxroEZgCP53amoDj_iB-6fPOOVcvn5P-vZhG-EUWzMc8WAfTkkNgpbrp3hno3UpFNF6lUEl3CJf1G5_5Q3-lvfxl4GrhWSX8L1fRoF9T9XPrr_pPkvi7kAYvnHkHklEvn3gPBvsJBdA6C3mptBHHLnMRKLOLJIF7D7OaP7AnJEhMCHKcrQABFoBQCBPoAwFbOwNzEsIxOuNQK6KxMaFRGaBrOlHQg0FBH5LKpYHDPqOeJYAABK6jajOB5RQKrjtBZ7Fbgav7yiiqESRSYLpSE4xzsTYFppSjjxmBrLPaES7x4AHzdDYCgToB2AMGZjWyrh4LohSjChdb6IMhwhOb6JK7ELHgTBODt7ADyCaZcE8F8ECHCGiHOCVq17CjniSjmKeHDDoDeIPQn4ebuEkJjhxFwBQKxFODeKYJ5TuGZFpHZHoyYI4AeCqCBaEjvi3IVQtYm6fAbg0COwJD6htA0COGHopEfoEDGEFSVpD4Ei2A77EJjZkIAAF7QQkdSNRq4rW9RjBjR0AUA4oiIbAMAbe56l8be-WtYAWLoIwbeNW4G7AAAhLNCkaNkytsScoSOjmOD0TOvThXJsTIrOtMYehlsnqOFMPEFAOsVcZOGODUkkSsjgKCecbfEvnUqCcujcaHLQJCaktCSkVkeYb5rUZ8TIWXnupcXFjsWorOqcQpJ0cQf-PuridcYMV0fcewK8QercgFkFs0OCa6qgGXhXkVhFgpFFu1rxLFsCZmjcQlqyUyuySBtieBrhlMb5jMSbooeEMloumxuSQAmJA8UcaxPOilnJsurnmeEZoegFgSWcbCSSYcYyP8QDJ0XcSSQVDSbVm8ZWgyQbMFsyRoqXiKZXpyXNDyTFhaakq6cQu6eBqKWkOKeaZpvYtKf_K1lOFGP8dUgIOYAGWGHQNOPqIUY-CkT8VseiQ4nQtvA7E7AnMYXlLGQIOmV4TkNwNVPyQmeYEQokfonWbUmGrnIYSWbphYMANCUQp6hYGWRWXEc1AORmcaqGgzDNsRH4elAgdYf_AWYYfvCSXAaLOFNsK4GkKQdQEBPLJQeBEkZjAjkgCnMBOUCCN4BkBaL-IfkFOsPwCOgIPkJGsefwBpDgG-RpLeTWPwOUOQP0DMEtPwFcPwFlPVKRLADCPvn-McDAOSJQIkHmHkAUACeaBaECMSFUBeQIF-RYPwFEGgEBSeaoNgKQThSeZgPMBGCJBfEdsefyfwGwcisBSAAAHqJRWQ4BmQ4AABMZFuFIAS8ps12hF_AbFAArDgBxbxSAEvgxVqFaJECJaxexZxTxTcrNqLBhdUB8NQJAJjpoNuXLBQWBCAKvCALQL6FkEBfwH-RKLQBaIxRaLMDMPwPIAoPIPIEAA`} __position={0} __code={'<NumberInput\\n  id=\\\"number_input\\\"\\n  name=\\\"number_input\\\"\\n  min={1}\\n  value={6}\\n  max={10}\\n/>'} __scope={{props: this ? this.props : props,NumberInput}}>\n    <NumberInput\n      id=\"number_input\"\n      name=\"number_input\"\n      min={1}\n      value={6}\n      max={10}\n    />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"properties\"}}>{`Properties`}</MDXTag>\n<PropsTable of={NumberInput} />\n           </MDXTag>\n  }\n}\n  ","import React, { Component } from 'react';\n\nconst INPUT_METHODS = [\n    'changeValue',\n    'onInput',\n]\n\n/**\n * @abstract\n */\nclass InputWithState extends Component {\n    constructor() {\n        super();\n\n        this.methods = {};\n        INPUT_METHODS\n            .forEach(methodName => {\n                this.methods[methodName] = this[methodName].bind(this)\n            });\n    }\n\n    componentWillMount() {\n        this.setState({\n            value: this.props.value || ''\n        });\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.value !== this.props.value) {\n            this.setState({ value: newProps.value });\n        }\n    }\n\n    get allProps() {\n        return {\n            ...this.props,\n            ...this.state,\n            ...this.methods\n        };\n    }\n\n    changeValue(value) {\n        if (value !== this.state.value) {\n            this.setState({ value });\n\n            if (typeof this.props.onValueChange === 'function') {\n                this.props.onValueChange(value);\n            }\n        }\n    }\n\n    onInput(eventData) {\n        const { value } = eventData.target;\n\n        if (value !== this.state.value) {\n            this.setState({ value });\n\n            if (typeof this.props.onValueChange === 'function') {\n                this.props.onValueChange(value);\n            }\n        }\n    }\n\n    render() {\n        return this.props.renderMethod(this.allProps);\n    }\n}\n\nconst wrapWithInputState = renderMethod => {\n    return props => {\n        return (\n            <InputWithState \n                {...props}\n                renderMethod={renderMethod}\n            />\n        );\n    };\n};\n\nexport {\n    wrapWithInputState\n};\n"],"sourceRoot":""}