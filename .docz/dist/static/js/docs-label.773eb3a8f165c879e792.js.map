{"version":3,"sources":["webpack:///./lib/label.js","webpack:///./lib/Input.js","webpack:///./docs/label.mdx","webpack:///./lib/abstract/input-with-state.js"],"names":["Label","props","classNames","className","push","error","react_default","a","createElement","htmlFor","join","children","defaultProps","propExamples","Input","wrapWithInputState","InputView","full","multiline","amountOfLines","value","match","length","id","name","placeholder","onInput","onKeyUp","onKeyDown","onFocus","onBlur","rows","disabled","type","eventData","target","changeValue","propTypes","PropTypes","string","isRequired","bool","onValueChange","func","MDXContent","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","dist","index_m","__codesandbox","__position","__code","__scope","label","lib_Input","of","INPUT_METHODS","InputWithState","methods","forEach","methodName","bind","_assertThisInitialized","setState","newProps","state","renderMethod","allProps","_objectSpread","react__WEBPACK_IMPORTED_MODULE_0___default","Object","assign"],"mappings":"8PAeA,SAASA,EAAMC,GACX,IAAMC,EAAa,CAAC,kBAUpB,OARID,EAAME,WACND,EAAWE,KAAKH,EAAME,WAGtBF,EAAMI,OACNH,EAAWE,KAAK,yBAIhBE,EAAAC,EAAAC,cAAA,SACIC,QAASR,EAAMQ,QACfN,UAAWD,EAAWQ,KAAK,MAE1BT,EAAMU,UA8BnBX,EAAMY,aAAe,CACjBP,OAAO,GAEXL,EAAMa,aAAe,CACjBF,SAAU,gBACVR,UAAW,GACXM,QAAS,WACTJ,OAAO,GAGIL,gsBCvDf,SAASc,EAAMb,GACX,OAAOc,YAAmBC,EAAnBD,CAA8Bd,GAGzC,SAASe,EAAUf,GACf,IAAMC,EAAa,CAAC,kBAUpB,GARID,EAAME,WACND,EAAWE,KAAKH,EAAME,WAGtBF,EAAMgB,MACNf,EAAWE,KAAK,wBAGhBH,EAAMiB,UAAW,CACjB,IAAMC,IAAkBlB,EAAMmB,OAAS,IAAIC,MAAM,SAAW,IAAIC,OAAS,EAEzE,OACIhB,EAAAC,EAAAC,cAAA,YACIe,GAAItB,EAAMsB,GACVC,KAAMvB,EAAMuB,KACZrB,UAAWD,EAAWQ,KAAK,KAC3Be,YAAaxB,EAAMwB,aAAe,GAClCC,QAASA,EACTC,QAAS1B,EAAM0B,QACfC,UAAW3B,EAAM2B,UACjBC,QAAS5B,EAAM4B,QACfC,OAAQ7B,EAAM6B,OACdC,KAAMZ,EACNC,MAAOnB,EAAMmB,MACbY,SAAU/B,EAAM+B,WAK5B,OACI1B,EAAAC,EAAAC,cAAA,SACIe,GAAItB,EAAMsB,GACVC,KAAMvB,EAAMuB,KACZS,KAAMhC,EAAMgC,MAAQ,OACpB9B,UAAWD,EAAWQ,KAAK,KAC3Be,YAAaxB,EAAMwB,aAAe,GAClCL,MAAOnB,EAAMmB,MACbY,SAAU/B,EAAM+B,SAChBN,QAASA,EACTC,QAAS1B,EAAM0B,QACfC,UAAW3B,EAAM2B,UACjBC,QAAS5B,EAAM4B,QACfC,OAAQ7B,EAAM6B,SAItB,SAASJ,EAAQQ,GAAW,IAChBd,EAAUc,EAAUC,OAApBf,MAERnB,EAAMmC,YAAYhB,IAI1BN,EAAMuB,UAAY,CAKdjB,MAAOkB,IAAUC,OAAOC,WAKxBrC,UAAWmC,IAAUC,OAKrBN,KAAMK,IAAUC,OAKhBd,YAAaa,IAAUC,OAKvBtB,KAAMqB,IAAUG,KAKhBvB,UAAWoB,IAAUG,KAKrBT,SAAUM,IAAUG,KAKpBlB,GAAIe,IAAUC,OAAOC,WAKrBhB,KAAMc,IAAUC,OAAOC,WAKvBE,cAAeJ,IAAUK,KAKzBhB,QAASW,IAAUK,KAKnBf,UAAWU,IAAUK,KAKrBd,QAASS,IAAUK,KAKnBb,OAAQQ,IAAUK,MAEtB7B,EAAMF,aAAe,CACjBqB,KAAM,QAEVnB,EAAMD,aAAe,CACjBO,MAAO,gBACPjB,UAAW,GACX8B,KAAM,OACNR,YAAa,mBACbR,MAAM,EACNC,WAAW,EACXK,GAAI,QACJC,KAAM,SAGKV,itCCxJM8B,cACnB,SAAAA,EAAY3C,GAAO,IAAA4C,EAAA,mGAAAC,CAAAC,KAAAH,IACjBC,EAAAG,EAAAD,KAAAE,EAAAL,GAAAM,KAAAH,KAAM9C,KACDkD,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAK9C,MAA9BsD,EADDD,EACCC,WAAetD,EADhBuD,EAAAF,EAAA,gBAGP,OAAOhD,EAAAC,EAAAC,cAACiD,EAAA,OAAD,CACEjC,KAAK,UAEL+B,WAAYA,GAAYjD,EAAAC,EAAAC,cAACiD,EAAA,OAAD,CAAQjC,KAAK,KAAK+B,WAAYA,EAAYtD,MAAO,CAACsB,GAAK,UAAvD,SAErCjB,EAAAC,EAAAC,cAACiD,EAAA,OAAD,CAAQjC,KAAK,KAAK+B,WAAYA,EAAYtD,MAAO,CAACsB,GAAK,YAAvD,WACAjB,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAYC,cAAa,myJAAsyJC,WAAY,EAAGC,OAAQ,sFAA6FC,QAAS,CAAC7D,MAAO8C,KAAOA,KAAK9C,MAAQA,EAAMD,QAAMc,UACh+JR,EAAAC,EAAAC,cAACuD,EAAD,CACItD,QAAQ,WADZ,eAKAH,EAAAC,EAAAC,cAACwD,EAAD,CACIxC,KAAK,UACLD,GAAG,aAGXjB,EAAAC,EAAAC,cAACiD,EAAA,OAAD,CAAQjC,KAAK,KAAK+B,WAAYA,EAAYtD,MAAO,CAACsB,GAAK,eAAvD,cACAjB,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAYO,GAAIjE,imCClChB,IAAMkE,EAAgB,CAClB,cACA,WAMEC,cACF,SAAAA,IAAc,IAAAtB,MAAA,mGAAAC,CAAAC,KAAAoB,KACVpB,OAAAE,EAAAkB,GAAAjB,KAAAH,OAAAF,qDAEKuB,QAAU,GACfF,EACKG,QAAQ,SAAAC,GACLzB,EAAKuB,QAAQE,GAAczB,EAAKyB,GAAYC,KAAjBC,EAAA3B,MANzBA,yPADWQ,mEAYrBN,KAAK0B,SAAS,CACVrD,MAAO2B,KAAK9C,MAAMmB,OAAS,uDAITsD,GAClBA,EAAStD,QAAU2B,KAAK9C,MAAMmB,OAC9B2B,KAAK0B,SAAS,CAAErD,MAAOsD,EAAStD,4CAY5BA,GACJA,IAAU2B,KAAK4B,MAAMvD,QACrB2B,KAAK0B,SAAS,CAAErD,UAEwB,oBAA7B2B,KAAK9C,MAAMyC,eAClBK,KAAK9C,MAAMyC,cAActB,oCAK7Bc,GAAW,IACPd,EAAUc,EAAUC,OAApBf,MAEJA,IAAU2B,KAAK4B,MAAMvD,QACrB2B,KAAK0B,SAAS,CAAErD,UAEwB,oBAA7B2B,KAAK9C,MAAMyC,eAClBK,KAAK9C,MAAMyC,cAActB,qCAMjC,OAAO2B,KAAK9C,MAAM2E,aAAa7B,KAAK8B,2CA9BpC,0UAAAC,CAAA,GACO/B,KAAK9C,MACL8C,KAAK4B,MACL5B,KAAKqB,8CA+BdrD,EAAqB,SAAA6D,GACvB,OAAO,SAAA3E,GACH,OACI8E,EAAAxE,EAAAC,cAAC2D,EAADa,OAAAC,OAAA,GACQhF,EADR,CAEI2E,aAAcA","file":"static/js/docs-label.110739ae.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * <Label />\n * \n * ```jsx\n * <Label\n *   htmlFor=\"input_id\"\n *   error\n * >\n *   Something went wrong\n * </Label>\n * ```\n */\nfunction Label(props) {\n    const classNames = ['alegrify-label'];\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    if (props.error) {\n        classNames.push('alegrify-label--error');\n    }\n\n    return (\n        <label\n            htmlFor={props.htmlFor}\n            className={classNames.join(' ')}\n        >\n            {props.children}\n        </label>\n    )\n}\n\nLabel.propTypes = {\n\n    /**\n     * Label content\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * for attribute referring to a form element\n     */\n    htmlFor: PropTypes.string,\n\n    /**\n     * Is this an error label?\n     */\n    error: PropTypes.bool\n};\nLabel.defaultProps = {\n    error: false\n};\nLabel.propExamples = {\n    children: 'Label content',\n    className: '',\n    htmlFor: 'input_id',\n    error: false\n}\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { wrapWithInputState } from './abstract/input-with-state';\n\n/**\n * <Input />\n * \n * ```jsx\n * <Input\n *   id=\"my_input\"\n *   name=\"my_input\"\n *   multiline={true}\n *   value=\"default value\"\n * />\n * ```\n */\nfunction Input(props) {\n    return wrapWithInputState(InputView)(props);\n}\n\nfunction InputView(props) {\n    const classNames = ['alegrify-input'];\n\n    if (props.className) {\n        classNames.push(props.className);\n    }\n\n    if (props.full) {\n        classNames.push('alegrify-input--full');\n    }\n\n    if (props.multiline) {\n        const amountOfLines = ((props.value || '').match(/\\n/gi) || []).length + 1;\n\n        return (\n            <textarea\n                id={props.id}\n                name={props.name}\n                className={classNames.join(' ')}\n                placeholder={props.placeholder || ''}\n                onInput={onInput}\n                onKeyUp={props.onKeyUp}\n                onKeyDown={props.onKeyDown}\n                onFocus={props.onFocus}\n                onBlur={props.onBlur}\n                rows={amountOfLines}\n                value={props.value}\n                disabled={props.disabled}\n            />\n        );\n    }\n\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            type={props.type || 'text'}\n            className={classNames.join(' ')}\n            placeholder={props.placeholder || ''}\n            value={props.value}\n            disabled={props.disabled}\n            onInput={onInput}\n            onKeyUp={props.onKeyUp}\n            onKeyDown={props.onKeyDown}\n            onFocus={props.onFocus}\n            onBlur={props.onBlur}\n        />\n    );\n\n    function onInput(eventData) {\n        const { value } = eventData.target;\n\n        props.changeValue(value);\n    }\n}\n\nInput.propTypes = {\n\n    /**\n     * Value to show in the input\n     */\n    value: PropTypes.string.isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * Input type\n     */\n    type: PropTypes.string,\n\n    /**\n     * Input placeholder\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * 100% width?\n     */\n    full: PropTypes.bool,\n\n    /**\n     * Use textarea instead of input\n     */\n    multiline: PropTypes.bool,\n\n    /**\n     * Disable input\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Input id\n     */\n    id: PropTypes.string.isRequired,\n\n    /**\n     * Input name\n     */\n    name: PropTypes.string.isRequired,\n\n    /**\n     * On value change method (passes value)\n     */\n    onValueChange: PropTypes.func,\n\n    /**\n     * Native onKeyUp event\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * Native onKeyDown event\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * Native onFocus event\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Native onBlur event\n     */\n    onBlur: PropTypes.func\n};\nInput.defaultProps = {\n    type: 'text'\n};\nInput.propExamples = {\n    value: 'default value',\n    className: '',\n    type: 'text',\n    placeholder: 'Placeholder text',\n    full: false,\n    multiline: false,\n    id: 'input',\n    name: 'input'\n};\n\nexport default Input;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Label from '../lib/label';\nimport Input from '../lib/Input';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"label\"}}>{`Label`}</MDXTag>\n\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkqiUrGiJkjK8Eq1QyZnWTWWoXY2Hm_To5G67mScAIAlCKRSsDsIxeeHGNjsFU83iWM1g_m6mVsSPMtjgoRg62oqTxb3qiAAlGYjJIzBAiDNKAIpgAlGCuchTMBCIjsToSqXtADc_MFwrFioIABEAPIAWXYMsi8q6koIAFoTkQVWqhSKHJEhah9EbZfKcJJsK5BbBbagzOLzXr9TguhgMgAKdbMNhidYWRh4ADMYkc6pdNE46pF2XYuImPScwJJNQEiCkKfj5gs7EYMzEkYaUyiyRdedc6BYMWo8XYMyEd3GlFSMCmL3Y4cw_VQKXzMASnKkDYTdfTztdkmriekccUZhOvSI-hwaQIAFFYMeaAAhRINdCRzrCAjtbmoTnKhTKb2-mA4TQyB0ahaHoRAVBzKYABlXECKA3RNdpPSgCAPEkKBYIXf0BXtKYGlQGZwgQuUkPQ1DJHwwjX1VVAcI1dggylYjTS1do7Xo4B2E0Hx5GY9oAAEYCIEQBlQQFhRgNiA1QXRUWOU4AC9nAIRJsXYbh2GAdYogEZ5UCudoAAZ2GTGYsHafcaxmTsWFnAyABYzPYAA2MyLPWMAQIAMR9aBEgM_hnEORFHUwdgAAUhH4JZhJ-OBrMRdya08mhnAgBTLnYABGezLPkcEZOoOSAEE5nU9hI048gbCgdBw3YeROXUsQKpjGR2FRVSYG4YBDyUlTsXkbda2AaroDq4IADJJvGRJ5koZoxtq-ruFW-UwFCGSe1Qdp2AAfg2cbw0jJqriWibUHymspBkat3zMWF6MwMAwigKYTua1rrtKlca0TRiCBwLzMhSa8CGG2s6xguDrhILzhT4FQCPCAB9VxxGKrwiMo8IpGhhcIdrRgcamVAfW6_g0CotH-E4HhKeRggaZAdgt1XKQAaBkGweGqQfrusxvxAFC0IwuCAK0CgQP0Bg6IdAG-LNJUaLlqZIsoGZLDm-A-IHDWLRU-Y4H9MxjFMcwjChzD4LZi32CKS3iid7iHatuDXYsQg4YRhnqa4fgPZhAQhAEV3t0tiwguPCYCnnLMRiEWdXbx63w_YJ3igdvlUA2rbRPYfGoEjPW7iarS_qLVA5PIDC4DgAA5cm7A0gBtdp4hgFJ-jARILTFrCAF0aNXCBmmLwc4A-WuG_JsvV0hmv_Bn49J8IuA8HHjXJ8XuvG-PT9Vyukex5LyeMhDueK4X6e9_gHA1439vYC70fe_7qALQtc_hTfGjIaPiuXQCB9HMNGK-RN37z0hrWL2UB4YCB6qffAxA4HCiutAjBPQb7kx6jvZed91CUDQE-eUnJ0GYMJpgzSSDzrhnIRgqQ79CbvgAYXe-g4tZG3KuXVcZt56W0LpXUCogr68lXLQugVx1aa21pPagMBdRgE4TASMLcoEWGkcoyerhg6uESIoyMmjZE4B-JgTklkqFGKNiY4sq4B6chwLYcUABHUIEAuiLAKpDPhoj2DFS7C8USfY8FkxXvw7O18l63ykRw4xqIZwpEsrwkw_CjTChCDcfoHhwhUhgGAc-scIghDSQIOUC4hL6HCauWB8CYkay0TgeJBQkkVx8dAy2DQ7AxzsO4IOId2Dvz2lUiu39ywRVidYrwlAoBmHkDRNhz1XoEGkc3TSq5RlXBelAOATJLrzOtuwjW54sA-nJDrDS5cF41QugZQRuhhFJUibvcmBlHkwJQbU-UVNUZcDeRYDZRp4g7NmQVR6DpFmhDegXa2NEhYiwoozCWQF7ky3AqrBiWpFasRVpBcZ9TZG60HAbWR2FcWcQTrMAA6niEmyksgNT4p6WC8TzSSG-ZaAseALSoiyCbMSKS7bE0ZqzNOrsM4u0FSTQOXBEZEESCjdlAc7YWFCRTEAcqFWMyVewCO7AiCQpiChF0PU0SMnQbq1g8RGSIwhVCy1UBGTastrbHV6cnZZzMLnKU-cSab1LmswBY4QH5kyDMalExaUECyE2RmAA1CAMARicj9XAA-l0Cpeu2o0ONCaRgpsvgvIqUw8G31WW3DuL8e4WnZe0IeXjayjwqjQ7B-8A1UJLU3e-eQN7NqibPP-tYAGQ0bSmnAG1FxtswR2leXb15Pgrd3Xu7LP7jqgL_Q-9aLAjqQfqt60A0AwALVOotIRhKbQIIoqCB7VmRlHfaxk7AAA-j75RvhwFEAg1VIx8lNs8Jqz72At3sTgWAs5CwAGpsrD3ARYIBwawFUMhowWgWAo1mnUYhmVwAkFcHoYhyGqrEETxMeTPD-GLDTu6qNFtBCiGoBIW-Mj5HySShgMMWqGQiNb3vhhRE7HpxPpfe0doTH8PUBJj1cTjNROIeoAAaRgIkAAqjMLjdwcDycUypmTVDNOJG1KMVAam5GoAU_pwzOnMHUHhr0OAxmNOoBs3kSzGDqA3gdQg7DxG3MeZc9AoQIw7PAB9G0Ggl7r1-chveqjSDouRdrCwCoHhYA8C89xxLsEUt-ZdZgtN_9N2TiDQIUBGHGCKpg9ArDOH0B-cI2l9Tqq_OGxi8R5rgn5QodfH5yjuCaOT0IcQ3ajGMOQxY3x6Z057NjbYxNjI7XhN-ei_ZuLI2Eu2Ey9kezGXkvZD81JqiknUAkz26ZrTqn6smbM9p1bFg9MGZGEZi7DmzP3fTRVyG1nTh5Hs592zJ33N9B-6gAHAgZM5YsGm1cmb877fCJGGArB9DamiK4I9GDZJTE4tFhlGkEdI5RzgNDZ5oNUJoX4WcMBY1WpUdFvLg6QXSRJocmRXCLkFbaZDS2VOHXdCKevUYnBzATG6OV9pETazRbqSzu-TTZyOLgC4txHiWneIFe0vxATtrBOnqquAwynn4Klw02XiT2dq859mqis15j69rM1o3cS0TNLN-bdXJN-y8Zmxx0OojxcWGm_xjIDvrEm5V7WDntZLZZUMoZAApPmLgEwhm-6h5CqAwe75TKgGHiwEeLCWyUzs8Y2A0MSkF6iCUOQFqC6orbiwu7DUHoz5PLPOfWbm8j-wbU62ds1_CHX44PeUvN5wK3l3qT3f-xTxXLgI-Tfy8V-47Ibe8-uvd6qgfqq59O7l04mAril-eOkqr13FvdTmGx9VdwaQ9VjmGDkYuS8da04H9QbnjJ7Dk7SCPr1K-O_5_YEbhiERz2FO2UxmBhERxoFfzAJUx_02nID_1P07yALYG6Du0M0gMqWnw-zANe3gJkiQNSVQJAN-zyCwOgJwNrDIPuDxWl0nl_3H18RIPQOBw8woJETF1XB8z6AIPIFmRoiZ1tWWQnm4VXHtw6xLykjmTMCZxLmOVOTUjZwrkl3lGEPYGiz-SwT7WPFeQsTt21gMk6y0ID1mzGXaHCk90DyOGMP0IsFXU2SBRgDsL1QNX3RdEcO2WcJHnQAMhrRcK3y-UZmkOgzBSmHUJJlhSUGFnImZTRFZWXU5W5SjVoCRW0BRTAgglwgxXNCWE4nXHkSzF4mNBIiVmogKgx0aHrnCiU0sBRn1HPEsAAAldRtRnByo1EK52gr8Kd39JIXD2hYdXxLIB4Co2lLZ-I4jMgpQPUZJp5Ldwhw08A6VaAYRUM6B0A7ACjMxMdxEi10QpRhQPpLlMEGQ4QToSdMFul3078nBVlgAZCKsGhqjaj6jGiWi2ibt2Ax1hRzxJQN5o579b5PoTjyM7dCQbiJg7iW5ASnBb4B5ypukYTbj0B4TR9VBIxul3wwTGoB0LAh1axPgNwaBqUEh9RQsCBjiMNridkCAViVFQTENVDrjYtqdBMAAC4TDDXEjdY_Qkp0QoggUkqAcURENAlZSMF0EYFZNHSrMeKUlZHAbHAAQjWhZOI1p0nXwxpLHHpMqg0OpyuAVI1LZJ5IqzwwJIsDPBCASAlNlMhjg2Ky1MQxwFdPVK3hcKoVdMJwhJ5VoE9MwW9OuNhM2O5LxIagKx6LSD6MjE1MZOHTHhVLVN9JSP_DjK-J1LpNTP1OxzNK-JHWa2r3dPUzf2p0_2v26FWg0naGh2oDfGdLBOLJMz6PLIp1jOpzp3wxkwtIKyGPhygJ1BR3tP5KrkxwNJ5xxw4ORyjUJx0WJwKwTIqiTI0hpNTKVI7IbKuN9N1OzKx1NMh3ewbTHkLOaCbIcxbK_0rLWhrIQO2nrPjPIzPNLJ51bLSHbJ507MQ27N5NXCnCjGHNgyKyFwhKQT_IEH1BRMxIhPiCgBlPDKugAUqIpTDRpUZnpPKjAogqhJyG4BakZMdPMFPhBIwwIq-jBKFSoiWPQq-MhmAG9NPni0AojHApRJ6kwpROy0oVrE_MeMeIeiwGyMZOQqWMjSyAEMFmiISm2FcDSAlmoGRWlkyJOP4A3yQHtmAnKBBG8AyC_hOT_GinWH4ERwEHyGoH4CuH4EMhwCssMgMprH4HKHIH6BmG2nMvUuKg6hwlgDWMUO6EwHJEoESDzDyFjjKItCBGJCqG0tDhAH0P4CiDQDcoZjUAljsosAcpgHmAjBkgTT1zUsZP4DKKSpAAAD0spnIcB7IcAAAmNK2sfgEuYlI2YqsqgAVhwAqtqtitXEKq1CtEiBavKsqpqu1QjMuiFkiuqA-GoEgBSDktQAUr0CUv4FoF9DEqQH4CcolFoAtDCtmBmH4HkAUHkHkCAA`} __position={0} __code={'<Label htmlFor=\\\"input_a\\\">About Input</Label>\\n<Input name=\\\"input_a\\\" id=\\\"input_a\\\" />'} __scope={{props: this ? this.props : props,Label,Input}}>\n    <Label\n        htmlFor=\"input_a\"\n    >\n        About Input\n    </Label>\n    <Input\n        name=\"input_a\"\n        id=\"input_a\"\n    />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"properties\"}}>{`Properties`}</MDXTag>\n<PropsTable of={Label} />\n           </MDXTag>\n  }\n}\n  ","import React, { Component } from 'react';\n\nconst INPUT_METHODS = [\n    'changeValue',\n    'onInput',\n]\n\n/**\n * @abstract\n */\nclass InputWithState extends Component {\n    constructor() {\n        super();\n\n        this.methods = {};\n        INPUT_METHODS\n            .forEach(methodName => {\n                this.methods[methodName] = this[methodName].bind(this)\n            });\n    }\n\n    componentWillMount() {\n        this.setState({\n            value: this.props.value || ''\n        });\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.value !== this.props.value) {\n            this.setState({ value: newProps.value });\n        }\n    }\n\n    get allProps() {\n        return {\n            ...this.props,\n            ...this.state,\n            ...this.methods\n        };\n    }\n\n    changeValue(value) {\n        if (value !== this.state.value) {\n            this.setState({ value });\n\n            if (typeof this.props.onValueChange === 'function') {\n                this.props.onValueChange(value);\n            }\n        }\n    }\n\n    onInput(eventData) {\n        const { value } = eventData.target;\n\n        if (value !== this.state.value) {\n            this.setState({ value });\n\n            if (typeof this.props.onValueChange === 'function') {\n                this.props.onValueChange(value);\n            }\n        }\n    }\n\n    render() {\n        return this.props.renderMethod(this.allProps);\n    }\n}\n\nconst wrapWithInputState = renderMethod => {\n    return props => {\n        return (\n            <InputWithState \n                {...props}\n                renderMethod={renderMethod}\n            />\n        );\n    };\n};\n\nexport {\n    wrapWithInputState\n};\n"],"sourceRoot":""}