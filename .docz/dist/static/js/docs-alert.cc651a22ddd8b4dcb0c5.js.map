{"version":3,"sources":["webpack:///./lib/alert.js","webpack:///./docs/alert.mdx"],"names":["Alert","props","classNames","push","className","react_default","a","createElement","join","open","children","propExamples","MDXContent","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","dist","name","id","parentName","index_m","of"],"mappings":"6PAgBA,SAASA,EAAMC,GACX,IAAMC,EAAa,CAAC,kBAIpB,OAFAA,EAAWC,KAAKF,EAAMG,WAGlBC,EAAAC,EAAAC,cAAA,UACIH,UAAWF,EAAWM,KAAK,KAC3BC,KAAMR,EAAMQ,MAEXR,EAAMS,UAyBnBV,EAAMW,aAAe,CACjBD,SAAU,gBACVN,UAAW,GACXK,MAAM,GAGKT,wqDChDMY,cACnB,SAAAA,EAAYX,GAAO,IAAAY,EAAA,mGAAAC,CAAAC,KAAAH,IACjBC,EAAAG,EAAAD,KAAAE,EAAAL,GAAAM,KAAAH,KAAMd,KACDkB,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKd,MAA9BsB,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOjB,EAAAC,EAAAC,cAACkB,EAAA,OAAD,CACEC,KAAK,UAELH,WAAYA,GAAYlB,EAAAC,EAAAC,cAACkB,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYtB,MAAO,CAAC0B,GAAK,UAAvD,SAErCtB,EAAAC,EAAAC,cAACkB,EAAA,OAAD,CAAQC,KAAK,IAAIH,WAAYA,GAA7B,8CACAlB,EAAAC,EAAAC,cAACkB,EAAA,OAAD,CAAQC,KAAK,MAAMH,WAAYA,GAAYlB,EAAAC,EAAAC,cAACkB,EAAA,OAAD,CAAQC,KAAK,OAAOH,WAAYA,EAAYK,WAAW,MAAM3B,MAAO,IAApE,kEAM3CI,EAAAC,EAAAC,cAACkB,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAYtB,MAAO,CAAC0B,GAAK,eAAvD,cACAtB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAYC,GAAI9B","file":"static/js/docs-alert.a26f4f57.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * <Alert />\n * \n * Show a short and temporary message\n * \n * ```jsx\n * <Alert\n *   open={true}\n * >\n *   Message sent\n * </Alert>\n * ```\n */\nfunction Alert(props) {\n    const classNames = ['alegrify-alert'];\n\n    classNames.push(props.className);\n\n    return (\n        <dialog\n            className={classNames.join(' ')}\n            open={props.open}\n        >\n            {props.children}\n        </dialog>\n    )\n}\n\nAlert.propTypes = {\n\n    /**\n     * Content of the alert\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n\n    /**\n     * Additional classnames\n     */\n    className: PropTypes.string,\n\n    /**\n     * Show the alert?\n     */\n    open: PropTypes.bool\n};\nAlert.propExamples = {\n    children: 'Alert content',\n    className: '',\n    open: true\n};\n\nexport default Alert;","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Alert from '../lib/alert';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"alert\"}}>{`Alert`}</MDXTag>\n\n<MDXTag name=\"p\" components={components}>{`Use an alert to show a small notification.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`<Alert\n    open\n>\n    Hi, just to let you know\n</Alert>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"properties\"}}>{`Properties`}</MDXTag>\n<PropsTable of={Alert} />\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}